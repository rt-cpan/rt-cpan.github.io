diff --git a/MANIFEST b/MANIFEST
index 8fa704a..2f9d199 100644
--- a/MANIFEST
+++ b/MANIFEST
@@ -50,13 +50,23 @@ t/14_leading_separator.t
 t/15_decrypt.t
 t/16_decrypt.t
 t/17_101092.t
+t/18_bug_92205.t
 t/badjpeg/expected.jpg
 t/badjpeg/source.zip
 t/common.pm
 t/data/chmod.zip
 t/data/crypcomp.zip
 t/data/crypt.zip
+t/data/def.zip
+t/data/defstr.zip
+t/data/store.zip
+t/data/storestr.zip
+t/data/emptydef.zip
+t/data/emptydefstr.zip
+t/data/emptystore.zip
+t/data/emptystorestr.zip
 t/data/linux.zip
+t/data/mkzip.pl
 t/data/perl.zip
 t/data/streamed.zip
 t/data/winzip.zip
diff --git a/lib/Archive/Zip/Member.pm b/lib/Archive/Zip/Member.pm
index 105a95e..1092057 100644
--- a/lib/Archive/Zip/Member.pm
+++ b/lib/Archive/Zip/Member.pm
@@ -196,8 +196,8 @@ sub desiredCompressionMethod {
         $self->{'desiredCompressionMethod'} = $newDesiredCompressionMethod;
         if ($newDesiredCompressionMethod == COMPRESSION_STORED) {
             $self->{'desiredCompressionLevel'} = 0;
-            $self->{'bitFlag'} &= ~GPBF_HAS_DATA_DESCRIPTOR_MASK;
-
+            $self->{'bitFlag'} &= ~GPBF_HAS_DATA_DESCRIPTOR_MASK
+                if $self->uncompressedSize() == 0;
         } elsif ($oldDesiredCompressionMethod == COMPRESSION_STORED) {
             $self->{'desiredCompressionLevel'} = COMPRESSION_LEVEL_DEFAULT;
         }
@@ -704,7 +704,7 @@ sub _writeLocalFileHeader {
     $self->_print($fh, $signatureData)
       or return _ioError("writing local header signature");
 
-    my $header = $self->head(0);
+    my $header = $self->head(1);
 
     $self->_print($fh, $header) or return _ioError("writing local header");
 
@@ -1052,12 +1052,6 @@ sub _writeToFileHandle {
           and ($self->compressionMethod() == COMPRESSION_STORED
             or $self->desiredCompressionMethod() == COMPRESSION_DEFLATED));
 
-    # Set both compressedSize and uncompressedSize to 0 if either of them is 0
-    if ($self->uncompressedSize == 0 || $self->uncompressedSize == 0) {
-        $self->{'compressedSize'}   = 0;
-        $self->{'uncompressedSize'} = 0;
-    }
-
     my $shouldWriteDataDescriptor =
       ($headerFieldsUnknown and not $fhIsSeekable);
 
@@ -1096,7 +1090,6 @@ sub _writeData {
         my ($outRef, $status) = $self->readChunk($chunkSize);
         symlink $$outRef, $self->{'newName'};
     } else {
-        return AZ_OK if ($self->uncompressedSize() == 0);
         my $status;
         my $chunkSize = $Archive::Zip::ChunkSize;
         while ($self->_readDataRemaining() > 0) {
diff --git a/lib/Archive/Zip/ZipFileMember.pm b/lib/Archive/Zip/ZipFileMember.pm
index 34e91c5..ba792d9 100644
--- a/lib/Archive/Zip/ZipFileMember.pm
+++ b/lib/Archive/Zip/ZipFileMember.pm
@@ -193,6 +193,9 @@ sub _skipLocalFileHeader {
             "CRC or size mismatch while skipping data descriptor")
           if ( $oldCrc32 != $self->{'crc32'}
             || $oldUncompressedSize != $self->{'uncompressedSize'});
+
+        $self->{'crc32'} = 0 
+            if $self->compressionMethod() == COMPRESSION_STORED ; 
     }
 
     return AZ_OK;
diff --git a/t/17_101092.t b/t/17_101092.t
index 2b2983b..068f356 100644
--- a/t/17_101092.t
+++ b/t/17_101092.t
@@ -1,4 +1,4 @@
-#!/use/bin/perl
+#!/usr/bin/perl
 
 use strict;
 
diff --git a/t/common.pm b/t/common.pm
index 2679736..402f12d 100644
--- a/t/common.pm
+++ b/t/common.pm
@@ -227,15 +227,15 @@ sub passthrough
 {
     my $fromFile = shift ;
     my $toFile = shift ;
-    my $keepTime = shift ;
+    my $action = shift ;
 
     my $z = Archive::Zip->new; 
     $z->read($fromFile);
-    if ($keepTime)
+    if ($action)
     {
         for my $member($z->members())
         {
-            $member->setLastModFileDateTimeFromUnix($member->lastModTime());
+            &$action($member) ; 
         }
     }
     $z->writeToFileNamed($toFile);
