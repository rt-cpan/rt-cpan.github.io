cpanm (App::cpanminus) 1.5017 on perl 5.016001 built for darwin-2level
Work directory is /Users/josh/.cpanm/work/1346272461.26410
You have make /usr/bin/make
You have LWP 6.04
You have /usr/bin/tar: bsdtar 2.8.3 - libarchive 2.8.3
You have /usr/bin/unzip
Searching NetAddr::IP on cpanmetadb ...
--> Working on NetAddr::IP
Fetching http://www.cpan.org/authors/id/M/MI/MIKER/NetAddr-IP-4.062.tar.gz
-> OK
Unpacking NetAddr-IP-4.062.tar.gz
Entering NetAddr-IP-4.062
Checking configure dependencies from META.yml
Configuring NetAddr-IP-4.062
Running Makefile.PL

This build requires a C compiler by default except on Windows where
the Pure Perl version is mandatory. The Pure Perl version, which does
not require compilation of XS code, can be used by invoking this as:

  perl Makefile.PL -noxs


======================================================================
W A R N I N G - Please do read below if you have legacy code
======================================================================

Versions 3.21 and above of NetAddr::IP, include hooks for the Storable
class that are incompatible with the old (automatic) method of storing
data. To regain backwards compatibility, the module must be use()d as

    use NetAddr::IP ':old_storable';

which will disable the new hooks and revert back to the old ways.

If you do not use Storable along with NetAddr::IP, or just don't know
what this all means, most likely you're safe to go ahead.

Versions before 3.25 recognized by default IP addresses as returned by
inet_aton. This is no longer the default. To enable this behavior
again, the module must be use()d as

    use NetAddr::IP ':aton';

Versions before 4.008 recognized the above syntax. This behavior is
fundamentally broken, is DEPRECATED and WILL BE REMOVED in version 5.0
Use this method to create new objects from 'aton's

    $ip = new_from_aton NetAddr::IP(inet_aton('1.2.3.4'))

Checking if your kit is complete...
Looks good
Checking if your kit is complete...
Looks good
Testing if you have a C compiler and the needed header files....
gcc compile.c -o compile.output
You have a working compiler.
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... 
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking sys/socket.h usability... yes
checking sys/socket.h presence... yes
checking for sys/socket.h... yes
checking netinet/in.h usability... yes
checking netinet/in.h presence... yes
checking for netinet/in.h... yes
checking arpa/inet.h usability... yes
checking arpa/inet.h presence... yes
checking for arpa/inet.h... yes
checking netdb.h usability... yes
checking netdb.h presence... yes
checking for netdb.h... yes
checking for an ANSI C-conforming const... yes
checking for int32_t... yes
checking for uint16_t... yes
checking for uint32_t... yes
checking for uint8_t... yes
checking whether gcc needs -traditional... rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
no
checking for library containing gethostbyname... none required
checking for library containing inet_aton... none required
checking for library containing inet_pton... none required
checking for library containing inet_addr... none required
checking whether byte ordering is bigendian... no
checking for uint8_t... yes
checking size of uint8_t... 1
checking for uint16_t... yes
checking size of uint16_t... 2
checking for uint32_t... yes
checking size of uint32_t... 4
checking for u_int8_t... yes
checking size of u_int8_t... 1
checking for u_int16_t... yes
checking size of u_int16_t... 2
checking for u_int32_t... yes
checking size of u_int32_t... 4
configure: creating ./config.status
config.status: creating config.h
Checking if your kit is complete...
Looks good
Writing Makefile for NetAddr::IP::Util
Writing MYMETA.yml and MYMETA.json
Writing Makefile for NetAddr::IP::Lite
Writing MYMETA.yml and MYMETA.json
Writing Makefile for NetAddr::IP
Writing MYMETA.yml and MYMETA.json
-> OK
Checking dependencies from MYMETA.json ...
Checking if you have ExtUtils::MakeMaker 0 ... Yes (6.63_02)
Checking if you have Test::More 0 ... Yes (0.98)
Building and testing NetAddr-IP-4.062
cp IP.pm blib/lib/NetAddr/IP.pm
AutoSplitting blib/lib/NetAddr/IP.pm (blib/lib/auto/NetAddr/IP)
cp Lite.pm ../blib/lib/NetAddr/IP/Lite.pm
cp lib/NetAddr/IP/UtilPP.pm ../../blib/lib/NetAddr/IP/UtilPP.pm
AutoSplitting ../../blib/lib/NetAddr/IP/UtilPP.pm (../../blib/lib/auto/NetAddr/IP/UtilPP)
cp Util.pm ../../blib/lib/NetAddr/IP/Util.pm
AutoSplitting ../../blib/lib/NetAddr/IP/Util.pm (../../blib/lib/auto/NetAddr/IP/Util)
cp Util_IS.pm ../../blib/lib/NetAddr/IP/Util_IS.pm
cp lib/NetAddr/IP/InetBase.pm ../../blib/lib/NetAddr/IP/InetBase.pm
AutoSplitting ../../blib/lib/NetAddr/IP/InetBase.pm (../../blib/lib/auto/NetAddr/IP/InetBase)
/Users/josh/perl5/perlbrew/perls/perl-5.16.1/bin/perl /Users/josh/perl5/perlbrew/perls/perl-5.16.1/lib/5.16.1/ExtUtils/xsubpp  -typemap /Users/josh/perl5/perlbrew/perls/perl-5.16.1/lib/5.16.1/ExtUtils/typemap -typemap typemap  Util.xs > Util.xsc && mv Util.xsc Util.c
cc -c   -fno-common -DPERL_DARWIN -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -O3   -DVERSION=\"1.47\" -DXS_VERSION=\"1.47\"  "-I/Users/josh/perl5/perlbrew/perls/perl-5.16.1/lib/5.16.1/darwin-2level/CORE"   Util.c
Running Mkbootstrap for NetAddr::IP::Util ()
chmod 644 Util.bs
rm -f ../../blib/arch/auto/NetAddr/IP/Util/Util.bundle
env MACOSX_DEPLOYMENT_TARGET=10.3 cc  -bundle -undefined dynamic_lookup -L/usr/local/lib -fstack-protector Util.o  -o ../../blib/arch/auto/NetAddr/IP/Util/Util.bundle 	\
	     	\
	  
chmod 755 ../../blib/arch/auto/NetAddr/IP/Util/Util.bundle
cp Util.bs ../../blib/arch/auto/NetAddr/IP/Util/Util.bs
chmod 644 ../../blib/arch/auto/NetAddr/IP/Util/Util.bs
Manifying ../../blib/man3/NetAddr::IP::UtilPP.3
Manifying ../../blib/man3/NetAddr::IP::Util.3
Manifying ../../blib/man3/NetAddr::IP::InetBase.3
Manifying ../blib/man3/NetAddr::IP::Lite.3
Manifying blib/man3/NetAddr::IP.3
PERL_DL_NONLAZY=1 /Users/josh/perl5/perlbrew/perls/perl-5.16.1/bin/perl "-MExtUtils::Command::MM" "-e" "test_harness(0, 'blib/lib', 'blib/arch')" t/*.t
t/constants.t ...... ok
t/full.t ........... ok
t/full6.t .......... ok
t/imhoff.t ......... ok
t/loops.t .......... ok
t/lower.t .......... ok
t/masklen.t ........ ok
t/new-store.t ...... ok
t/old-store.t ...... ok
t/over-arr.t ....... ok
t/over-qq.t ........ ok
t/relops.t ......... ok
t/short.t .......... ok
t/splitref.t ....... ok
t/v4-coalesce.t .... ok
t/v4-compact.t ..... ok
t/v4-compplus.t .... ok
t/v4-hostenum.t .... ok
t/v4-re.t .......... ok
t/v4-split-bulk.t .. ok
t/v4-split-list.t .. ok
t/v4-splitplan.t ... ok
t/v4-sprefix.t ..... ok
t/v4-xprefix.t ..... ok
t/v6-re.t .......... ok
t/v6-split-bulk.t .. ok
t/v6-splitplan.t ... ok
t/wildcard.t ....... ok
All tests successful.
Files=28, Tests=9523,  7 wallclock secs ( 1.09 usr  0.14 sys +  6.40 cusr  0.21 csys =  7.84 CPU)
Result: PASS
PERL_DL_NONLAZY=1 /Users/josh/perl5/perlbrew/perls/perl-5.16.1/bin/perl "-MExtUtils::Command::MM" "-e" "test_harness(0, '../blib/lib', '../blib/arch')" t/*.t
t/addr.t .............. ok
t/aton.t .............. ok
t/bigint.t ............ ok
t/bignums.t ........... ok
t/bin_ips.t ........... ok
t/bits.t .............. ok
t/broadcast.t ......... ok
t/bug62521.t .......... ok
t/bug75976.t .......... ok
t/cidr.t .............. ok
t/constants.t ......... ok
t/contains.t .......... ok
t/copy.t .............. ok
t/firstlast.t ......... ok
t/lemasklen.t ......... ok
t/loops.t ............. ok
t/lower.t ............. ok
t/mask.t .............. ok
t/masklen.t ........... ok
t/netaddr.t ........... ok
t/network.t ........... ok
t/new-nth.t ........... ok
t/new-num.t ........... ok
t/numeric.t ........... ok
t/old-nth.t ........... ok
t/old-num.t ........... ok
t/over-qq.t ........... ok
t/over_comp.t ......... ok
t/over_copy.t ......... ok
t/over_equal.t ........ ok
t/over_math.t ......... ok
t/overminus.t ......... ok
t/pathological.t ...... ok
t/range.t ............. ok
t/relops.t ............ ok
t/rfc_1918.t .......... ok
t/v4-aton.t ........... ok
t/v4-badnm.t .......... ok
t/v4-base.t ........... ok
t/v4-basem.t .......... ok
t/v4-cidr.t ........... ok
t/v4-cnew.t ........... ok
t/v4-contains.t ....... ok
t/v4-last.t ........... ok
t/v4-new-first.t ...... ok
t/v4-new.t ............ ok
t/v4-new_from_aton.t .. ok
t/v4-no_octal.t ....... ok
t/v4-num.t ............ ok
t/v4-numeric.t ........ ok
t/v4-old-first.t ...... ok
t/v4-range.t .......... ok
t/v4-snew.t ........... ok
# 
# 	The following 8 tests involve resolving (hopefully)
# 	non-existant names. This may take a while.
t/v4-wnew.t ........... ok
t/v4_new_cis.t ........ ok
t/v6-cnew.t ........... ok
t/v6-contains.t ....... ok
t/v6-inc.t ............ ok
t/v6-new-base.t ....... ok
t/v6-new_cis6_base.t .. ok
t/v6-new_cis_base.t ... ok
t/v6-num.t ............ ok
t/v6-numeric.t ........ ok
t/v6-old-base.t ....... ok
t/version.t ........... ok
t/within.t ............ ok
All tests successful.
Files=66, Tests=2853,  7 wallclock secs ( 0.53 usr  0.17 sys +  2.75 cusr  0.36 csys =  3.81 CPU)
Result: PASS
PERL_DL_NONLAZY=1 /Users/josh/perl5/perlbrew/perls/perl-5.16.1/bin/perl "-MExtUtils::Command::MM" "-e" "test_harness(0, '../../blib/lib', '../../blib/arch')" t/*.t
t/4to6.t .................... ok
t/add128.t .................. ok
t/addconst.t ................ ok

	AF_INET6 = 30 derived from Socket or Socket6
t/af_inet6.t ................ ok
t/anyto6.t .................. ok
t/badd.t .................... ok
t/bcd2bin.t ................. ok
t/bcdn2bin.t ................ ok
t/bin.t ..................... ok
t/binet_n2ad.t .............. ok
t/binet_n2dx.t .............. ok
t/binet_ntoa.t .............. 
Failed 3/20 subtests 
t/binet_pton.t .............. 
Failed 3/32 subtests 
t/bipv4_inet.t .............. ok
t/bipv6_any2n.t ............. ok
t/bipv6func.t ............... ok
t/bisIPv4.t ................. ok
t/bpackzeros.t .............. ok
t/comp128.t ................. ok
t/croak.t ................... ok
t/hasbits.t ................. ok
t/inet_4map6.t .............. ok
t/inet_n2ad.t ............... ok
t/inet_n2dx.t ............... ok
t/inet_pton.t ............... 
Failed 3/32 subtests 
t/ipv4_inet.t ............... ok
t/ipv6_any2n.t .............. ok
t/ipv6_ntoa.t ............... 
Failed 3/20 subtests 
t/ipv6func.t ................ ok
t/ipv6to4.t ................. ok
t/isIPv4.t .................. ok
t/leftshift.t ............... ok
	mode CC XS
t/mode.t .................... ok
t/naip_gethostbyname.t ...... ok
t/no6_naip_gethostbyname.t .. ok
t/notcontiguous.t ........... ok
t/packzeros.t ............... ok
t/simple_pack.t ............. ok
t/sub128.t .................. ok

Test Summary Report
-------------------
t/binet_ntoa.t            (Wstat: 0 Tests: 20 Failed: 3)
  Failed tests:  7, 9, 11
t/binet_pton.t            (Wstat: 0 Tests: 32 Failed: 3)
  Failed tests:  19, 21, 23
t/inet_pton.t             (Wstat: 0 Tests: 32 Failed: 3)
  Failed tests:  19, 21, 23
t/ipv6_ntoa.t             (Wstat: 0 Tests: 20 Failed: 3)
  Failed tests:  7, 9, 11
Files=39, Tests=1528,  2 wallclock secs ( 0.28 usr  0.10 sys +  0.94 cusr  0.18 csys =  1.50 CPU)
Result: FAIL
Failed 4/39 test programs. 12/1528 subtests failed.
make[2]: *** [test_dynamic] Error 255
make[1]: *** [subdirs-test] Error 2
make: *** [subdirs-test] Error 2
-> FAIL Installing NetAddr::IP failed. See /Users/josh/.cpanm/build.log for details.
