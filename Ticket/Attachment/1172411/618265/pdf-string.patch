Index: libpdf-api2-perl/lib/PDF/API2/Basic/PDF/String.pm
===================================================================
--- libpdf-api2-perl.orig/lib/PDF/API2/Basic/PDF/String.pm
+++ libpdf-api2-perl/lib/PDF/API2/Basic/PDF/String.pm
@@ -113,7 +113,7 @@
 {
     my ($self, $str) = @_;
 
-    if($str=~m|^\s*\<|o) 
+    if($str=~m|^\s*\<.*>$|o) 
     { 
         # cleaning up hex-strings, since spec is very loose,
         # at least openoffice exporter needs this ! - fredo
@@ -125,15 +125,12 @@
         $str =~ s/\<([0-9a-f]?)\>/chr(hex($1."0"))/oige;
         $str =~ s/\<\>//og;
     }
-    else
+    elsif($str=~m|^\s*\((.*)\)$|o)
     {
+        $str=$1;
         # if we import binary escapes,
         # let it be hex on output -- fredo
-        if($str =~ s/\\([nrtbf\\()])/$trans{$1}/ogi)
-        {
-            $self->{' ishex'}=1;
-        }  
-        if($str =~ s/\\([0-7]{1,3})/chr(oct($1))/oeg)
+        if($str =~ s/\\([nrtbf\\()]|[0-7]{1,3})/$trans{$1}||chr(oct($1))/oegi)
         {
             $self->{' ishex'}=1;
         }  
Index: libpdf-api2-perl/lib/PDF/API2/Basic/PDF/File.pm
===================================================================
--- libpdf-api2-perl.orig/lib/PDF/API2/Basic/PDF/File.pm
+++ libpdf-api2-perl/lib/PDF/API2/Basic/PDF/File.pm
@@ -680,7 +680,7 @@
             }
         }
 
-        $res = PDF::API2::Basic::PDF::String->from_pdf($value);
+        $res = PDF::API2::Basic::PDF::String->from_pdf("(" . $value . ")");
     } 
     elsif ($str =~ m/^</o)                                          # hex-string
     {
