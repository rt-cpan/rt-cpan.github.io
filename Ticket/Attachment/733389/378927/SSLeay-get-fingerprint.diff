--- libnet-ssleay-perl-1.30/SSLeay.xs	2005-12-15 18:06:54.000000000 +0100
+++ libnet-ssleay-perl-1.30/SSLeay.xs	2007-03-14 14:46:03.000000000 +0100
@@ -2506,6 +2506,46 @@
      int idx
 
 void
+X509_get_fingerprint(cert,type)
+		X509 * 	cert
+		char *	type
+	PREINIT:
+		const EVP_MD *digest_tp = NULL;
+		unsigned char digest[EVP_MAX_MD_SIZE];
+		unsigned int dsz, k = 0;
+		char text[EVP_MAX_MD_SIZE * 3 + 1];
+	CODE:
+		if (!k && !stricmp(type,"md5")) {
+		 	k = 1; digest_tp = EVP_md5();
+		}
+		if (!k && !stricmp(type,"sha1")) {
+			k = 1; digest_tp = EVP_sha1();
+		}
+		if (!k && !stricmp(type,"sha256")) {
+			k = 1; digest_tp = EVP_sha256();
+		}
+		if (!k && !stricmp(type,"ripemd160")) {
+			k = 1; digest_tp = EVP_ripemd160();
+		}
+		if (!k)	/* Default digest */
+			digest_tp = EVP_sha1();
+		if ( digest_tp == NULL ) {
+			/* Out of memory */
+			XSRETURN_UNDEF;
+		}
+		if (!X509_digest(cert, digest_tp, digest, &dsz)) {
+			/* Out of memory */
+			XSRETURN_UNDEF;
+		}
+		text[0] = '\0';
+		for(k=0; k<dsz; k++) {
+			sprintf(&text[strlen(text)], "%02X:", digest[k]);
+		}
+		text[strlen(text)-1] = '\0';
+		ST(0) = sv_newmortal();   /* Undefined to start with */
+		sv_setpvn( ST(0), text, strlen(text));
+
+void
 X509_get_subjectAltNames(cert)
      X509 *      cert
      PPCODE:
