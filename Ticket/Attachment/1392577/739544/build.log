cpanm (App::cpanminus) 1.6942 on perl 5.020000 built for x86_64-linux
Work directory is /home/david/.cpanm/work/1406727717.22824
You have make /usr/bin/make
You have LWP 6.08
You have /bin/tar: tar (GNU tar) 1.26
Copyright (C) 2011 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by John Gilmore and Jay Fenlason.
You have /usr/bin/unzip
Searching IO::Socket::SSL on cpanmetadb ...
--> Working on IO::Socket::SSL
Fetching http://www.cpan.org/authors/id/S/SU/SULLR/IO-Socket-SSL-1.997.tar.gz
-> OK
Unpacking IO-Socket-SSL-1.997.tar.gz
Entering IO-Socket-SSL-1.997
Checking configure dependencies from META.json
Checking if you have ExtUtils::MakeMaker 0 ... Yes (6.98)
Configuring IO-Socket-SSL-1.997
Running Makefile.PL
Should I do external tests?
These test will detect if there are network problems and fail soft,
so please disable them only if you definitely don't want to have any
network traffic to external sites.   [Y/n] [y] y
Checking if your kit is complete...
Looks good
Generating a Unix-style Makefile
Writing Makefile for IO::Socket::SSL
Writing MYMETA.yml and MYMETA.json
-> OK
Checking dependencies from MYMETA.json ...
Checking if you have Scalar::Util 0 ... Yes (1.38)
Checking if you have ExtUtils::MakeMaker 0 ... Yes (6.98)
Checking if you have Net::SSLeay 1.46 ... Yes (1.65)
Building and testing IO-Socket-SSL-1.997
cp lib/IO/Socket/SSL.pod blib/lib/IO/Socket/SSL.pod
cp lib/IO/Socket/SSL.pm blib/lib/IO/Socket/SSL.pm
cp lib/IO/Socket/SSL/Intercept.pm blib/lib/IO/Socket/SSL/Intercept.pm
cp lib/IO/Socket/SSL/PublicSuffix.pm blib/lib/IO/Socket/SSL/PublicSuffix.pm
cp lib/IO/Socket/SSL/Utils.pm blib/lib/IO/Socket/SSL/Utils.pm
Manifying blib/man3/IO::Socket::SSL.3
Manifying blib/man3/IO::Socket::SSL::Intercept.3
Manifying blib/man3/IO::Socket::SSL::PublicSuffix.3
Manifying blib/man3/IO::Socket::SSL::Utils.3
PERL_DL_NONLAZY=1 /home/david/perl5/perlbrew/perls/perl-5.20.0/bin/perl "-MExtUtils::Command::MM" "-MTest::Harness" "-e" "undef *Test::Harness::Switches; test_harness(0, 'blib/lib', 'blib/arch')" t/*.t t/external/*.t
# openssl version=0x1000105f
# Net::SSLeay::VERSION=1.65
t/01loadmodule.t .................. ok
t/acceptSSL-timeout.t ............. ok
t/auto_verify_hostname.t .......... ok
t/cert_formats.t .................. ok
t/cert_no_file.t .................. ok
t/compatibility.t ................. ok
t/connectSSL-timeout.t ............ ok
t/core.t .......................... ok
t/dhe.t ........................... ok
t/ecdhe.t ......................... ok
# tcp connect to www.live.com:443 ok
# tcp connect to www.google.com:443 ok
# tcp connect to revoked.grc.com:443 ok
# fingerprint matches
# validation with default CA w/o OCSP ok

#   Failed test 'expected revoked, but SSL connect attempt failed error:27069065:OCSP routines:OCSP_basic_verify:certificate verify error error:27069065:OCSP routines:OCSP_basic_verify:certificate verify error'
#   at t/external/ocsp.t line 108.
# Looks like you failed 1 test of 3.
t/external/ocsp.t ................. 
Dubious, test returned 1 (wstat 256, 0x100)
Failed 1/3 subtests 
	(less 2 skipped subtests: 0 okay)
# found 160 CA certs
# have root CA for www.google.com in store
# 5 connections to www.google.com ok
# have root CA for www.yahoo.com in store
# 5 connections to www.yahoo.com ok
# fingerprint www.yahoo.com matches
# check www.yahoo.com against builtin CA store ok
# have root CA for www.comdirect.de in store
# 5 connections to www.comdirect.de ok
# have root CA for meine.deutsche-bank.de in store
# 5 connections to meine.deutsche-bank.de ok
# fingerprint meine.deutsche-bank.de matches
# check meine.deutsche-bank.de against builtin CA store ok
# have root CA for www.twitter.com in store
# 5 connections to www.twitter.com ok
# fingerprint www.twitter.com matches
# check www.twitter.com against builtin CA store ok
# have root CA for www.facebook.com in store
# 5 connections to www.facebook.com ok
# have root CA for www.live.com in store
# 5 connections to www.live.com ok
t/external/usable_ca.t ............ ok
t/io-socket-inet6.t ............... skipped: no IO::Socket::INET6 available
t/io-socket-ip.t .................. ok
t/memleak_bad_handshake.t ......... ok
t/mitm.t .......................... ok
t/nonblock.t ...................... ok
t/npn.t ........................... ok
# -- test: newINET start_SSL stop_SSL start_SSL
# server accepted new client
# wait for initial data from client
# got 0x666f6f from client
# server: got plain data at start of connection
# server: TLS upgrade
# server: TLS downgrade
# server: TLS upgrade#2
# -- test: newSSL stop_SSL connect_SSL
# server accepted new client
# wait for initial data from client
# got 0x160301 from client
# server: TLS upgrade
# server: TLS downgrade
# server: TLS upgrade#2
# -- test: newSSL:0 connect_SSL stop_SSL connect_SSL
# server accepted new client
# wait for initial data from client
# got 0x666f6f from client
# server: got plain data at start of connection
# server: TLS upgrade
# server: TLS downgrade
# server: TLS upgrade#2
# -- test: newSSL:0 start_SSL stop_SSL connect_SSL
# server accepted new client
# wait for initial data from client
# got 0x666f6f from client
# server: got plain data at start of connection
# server: TLS upgrade
# server: TLS downgrade
# server: TLS upgrade#2
# server accepted new client
# wait for initial data from client
# got 0x656e64 from client
# client requested end of tests
t/plain_upgrade_downgrade.t ....... ok
t/public_suffix_lib_encode_idn.t .. ok
t/public_suffix_lib_libidn.t ...... ok
t/public_suffix_lib_uri.t ......... ok
t/public_suffix_ssl.t ............. ok
t/readline.t ...................... ok
t/sessions.t ...................... ok
t/signal-readline.t ............... ok
t/sni.t ........................... ok
t/start-stopssl.t ................. ok
t/startssl-failed.t ............... ok
t/startssl.t ...................... ok
t/sysread_write.t ................. ok
t/verify_fingerprint.t ............ ok
t/verify_hostname.t ............... ok
t/verify_hostname_standalone.t .... ok

Test Summary Report
-------------------
t/external/ocsp.t               (Wstat: 256 Tests: 3 Failed: 1)
  Failed test:  3
  Non-zero exit status: 1
Files=34, Tests=755, 48 wallclock secs ( 0.24 usr  0.08 sys +  5.04 cusr  0.58 csys =  5.94 CPU)
Result: FAIL
Failed 1/34 test programs. 1/755 subtests failed.
make: *** [test_dynamic] Error 255
-> FAIL Installing IO::Socket::SSL failed. See /home/david/.cpanm/work/1406727717.22824/build.log for details. Retry with --force to force install it.
