Index: libtext-markdown-perl/script/Markdown.pl
===================================================================
--- libtext-markdown-perl.orig/script/Markdown.pl	2008-06-06 11:07:33.000000000 -0500
+++ libtext-markdown-perl/script/Markdown.pl	2008-06-06 12:06:50.000000000 -0500
@@ -3,6 +3,89 @@
 use warnings;
 use Text::Markdown qw(markdown);
 
+=head1 NAME
+
+markdown - Convert Markdown syntax to (X)HTML
+
+=head1 DESCRIPTION
+
+This program is distributed as part of Perl's Text::Markdown module,
+illustrating sample usage.
+
+Markdown can be invoked on any file containing Markdown-syntax, and
+will produce the corresponding (X)HTML on STDOUT:
+
+    $ cat file.txt
+    This is a *test*.
+
+    Absolutely _nothing_ to see here. _Just a **test**_!
+
+    * test
+    * Yup, test.
+    $ markdown file.txt
+    <p>This is a <em>test</em>.</p>
+
+    <p>Absolutely <em>nothing</em> to see here. <em>Just a <strong>test</strong></em>!</p>
+
+    <ul>
+    <li>test</li>
+    <li>Yup, test.</li>
+    </ul>
+
+If no file is specified, it will expect its input from STDIN:
+
+    $ echo "A **simple** test" | markdown
+    <p>A <strong>simple</strong> test</p>
+
+=head1 OPTIONS
+
+=over
+
+=item version
+
+Shows the full information for this version
+
+=item shortversion
+
+Shows only the version number
+
+=item html4tags
+
+Produce HTML 4-style tags instead of XHTML - XHTML requires elements
+that do not wrap a block (i.e. the C<hr> tag) to state they will not
+be closed, by closing with C</E<gt>>. HTML 4-style will plainly output
+the tag as it comes:
+
+    $ echo '---' | markdown
+    <hr />
+    $ echo '---' | markdown --html4tags
+    <hr>
+
+=item help
+
+Shows this documentation
+
+=back
+
+=head1 AUTHOR
+
+Copyright 2004 John Gruber
+
+Copyright 2008 Tomas Doran
+
+The manpage was written by Gunnar Wolf <gwolf@debian.org> for its use
+in Debian systems, but can be freely used elsewhere.
+
+For full licensing information, please refer to
+L<Text::MultiMarkdown.pm>'s full documentation, or -in Debian systems-
+to L</usr/share/doc/libtext-markdown-perl/copyright>
+
+=head1 SEE ALSO
+
+L<Text::Markdown>, L<http://daringfireball.net/projects/markdown/>
+
+=cut
+
 #### Check for command-line switches: #################
 my %cli_opts;
 use Getopt::Long;
@@ -25,7 +108,13 @@
     print $Text::Markdown::VERSION;
     exit 0;
 }
-
+if ($cli_opts{'help'}) {
+    for my $dir (split m/:/, $ENV{PATH}) {
+	my $cmd = "$dir/perldoc";
+	exec($cmd, $0) if (-f $cmd and -x $cmd);
+    }
+    die "perldoc could not be found in your path - Cannot show help, sorry\n";
+}
 my $m;
 if ($cli_opts{'html4tags'}) {           # Use HTML tag style instead of XHTML
     $m = Text::Markdown->new(empty_element_suffix => '>');
Index: libtext-markdown-perl/script/MultiMarkdown.pl
===================================================================
--- libtext-markdown-perl.orig/script/MultiMarkdown.pl	2008-06-06 11:43:13.000000000 -0500
+++ libtext-markdown-perl/script/MultiMarkdown.pl	2008-06-06 12:10:42.000000000 -0500
@@ -3,6 +3,84 @@
 use warnings;
 use Text::MultiMarkdown qw(markdown);
 
+=head1 NAME
+
+multimarkdown - Convert MultiMarkdown syntax to (X)HTML
+
+=head1 DESCRIPTION
+
+This program is distributed as part of Perl's Text::MultiMarkdown module,
+illustrating sample usage.
+
+MultiMarkdown can be invoked on any file containing MultiMarkdown-syntax, and
+will produce the corresponding (X)HTML on STDOUT:
+
+    $ cat file.txt
+    [MultiMarkdown][] *extends* the very well-known [Markdown][] syntax.
+
+    [MultiMarkdown]: http://fletcherpenney.net/What_is_MultiMarkdown
+    [Markdown]: http://daringfireball.net/projects/markdown/
+
+    $ multimarkdown file.txt
+    <p><a href="http://fletcherpenney.net/What_is_MultiMarkdown">MultiMarkdown</a> <em>extends</em> the very well-known <a href="http://daringfireball.net/projects/markdown/">Markdown</a> syntax.</p>
+
+
+If no file is specified, it will expect its input from STDIN:
+
+    $ echo "A **simple** test" | multimarkdown
+    <p>A <strong>simple</strong> test</p>
+
+=head1 OPTIONS
+
+=over
+
+=item version
+
+Shows the full information for this version
+
+=item shortversion
+
+Shows only the version number
+
+=item html4tags
+
+Produce HTML 4-style tags instead of XHTML - XHTML requires elements
+that do not wrap a block (i.e. the C<hr> tag) to state they will not
+be closed, by closing with C</E<gt>>. HTML 4-style will plainly output
+the tag as it comes:
+
+    $ echo '---' | multimarkdown
+    <hr />
+    $ echo '---' | multimarkdown --html4tags
+    <hr>
+
+=item help
+
+Shows this documentation
+
+=back
+
+=head1 AUTHOR
+
+Copyright 2004 John Gruber
+
+Copyright 2006 Fletcher Penny
+
+Copyright 2008 Tomas Doran
+
+The manpage was written by Gunnar Wolf <gwolf@debian.org> for its use
+in Debian systems, but can be freely used elsewhere.
+
+For full licensing information, please refer to
+Text::MultiMarkdown.pm's full documentation, or -in Debian systems- to
+L</usr/share/doc/libtext-markdown-perl/copyright>
+
+=head1 SEE ALSO
+
+L<Text::MultiMarkdown>, L<http://fletcherpenney.net/What_is_MultiMarkdown>
+
+=cut
+
 #### Check for command-line switches: #################
 my %cli_opts;
 use Getopt::Long;
@@ -11,6 +89,7 @@
     'version',
     'shortversion',
     'html4tags',
+    'help'
 );
 if ($cli_opts{'version'}) {     # Version info
     print "\nThis is MultiMarkdown, version $Text::MultiMarkdown::VERSION.\n";
@@ -25,7 +104,13 @@
     print $Text::MultiMarkdown::VERSION;
     exit 0;
 }
-
+if ($cli_opts{'help'}) {
+    for my $dir (split m/:/, $ENV{PATH}) {
+	my $cmd = "$dir/perldoc";
+	exec($cmd, $0) if (-f $cmd and -x $cmd);
+    }
+    die "perldoc could not be found in your path - Cannot show help, sorry\n";
+}
 my $m;
 if ($cli_opts{'html4tags'}) {           # Use HTML tag style instead of XHTML
     $m = Text::MultiMarkdown->new(empty_element_suffix => '>');
@@ -54,4 +139,4 @@
     return $m->markdown($f);
 }
 
-print main(shift(@ARGV)) unless caller();
\ No newline at end of file
+print main(shift(@ARGV)) unless caller();
