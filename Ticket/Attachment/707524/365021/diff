diff -ru JSON-2.16/lib/JSON/PP.pm JSON-2.16_edited/lib/JSON/PP.pm
--- JSON-2.16/lib/JSON/PP.pm	2009-10-16 01:43:22.000000000 -0400
+++ JSON-2.16_edited/lib/JSON/PP.pm	2009-12-16 15:50:58.000000000 -0500
@@ -707,7 +707,11 @@
                     : (!$octets[2]                ) ? 'UTF-32LE'
                     : 'unknown';
 
-        my $result = value();
+        my $eof = !( my ($result) = value() );
+
+        if ($eof && ($opt & 0x00000001)) {
+            return undef;
+        }
 
         if (!$idx->[ P_ALLOW_NONREF ] and !ref $result) {
                 decode_error(
diff -ru JSON-2.16/t/19_incr.t JSON-2.16_edited/t/19_incr.t
--- JSON-2.16/t/19_incr.t	2008-06-25 01:06:42.000000000 -0400
+++ JSON-2.16_edited/t/19_incr.t	2009-12-16 15:48:23.000000000 -0500
@@ -5,7 +5,7 @@
 use strict;
 
 use Test::More;
-BEGIN { plan tests => 697 };
+BEGIN { plan tests => 709 };
 BEGIN { $ENV{PERL_JSON_BACKEND} = 0; }
 
 
@@ -182,3 +182,29 @@
    is_deeply(eval { $coder->incr_parse("[42]") }, [42], "valid data after incr_skip");
 }
 
+
+{
+   local *decoder = sub {
+      my $coder = JSON->new->relaxed;
+      $coder->incr_parse($_[0]);
+      my $rv;
+      return $rv if eval { $rv = $coder->incr_parse(); 1 };
+      chomp( my $e = $@ );
+      return "died with \"$e\"";
+   };
+
+   is_deeply( decoder( "[]"          ), [],        'array baseline' );
+   is_deeply( decoder( " []"         ), [],        'space before array ignored' );
+   is_deeply( decoder( "\n[]"        ), [],        'newline before array ignored' );
+   like(      decoder( "a[]"         ), qr/^died/, '"a" before array error' );
+   is_deeply( decoder( "# foo\n[]"   ), [],        'comment before array ignored' );
+
+   is_deeply( decoder( ""            ), undef,     'eof baseline' );
+   is_deeply( decoder( " "           ), undef,     'space before eof ignored [RT#52820]' );
+   is_deeply( decoder( "\n"          ), undef,     'newline ignored before eof ignored [RT#52820]' );
+   like(      decoder( "a"           ), qr/^died/, '"a" before array error' );
+   is_deeply( decoder( "# foo\n"     ), undef,     'comment ignored before eof ignored [RT#52820]' );
+
+   like(      decoder( "null"        ), qr/^died/, 'null not allowed as root (1)' );
+   like(      decoder( "# foo\nnull" ), qr/^died/, 'null not allowed as root (2)' );
+}
