To: cpan-testers@perl.org
From: Simon Bertrang <janus@errornet.de>
Subject: FAIL DBD-mysql-4.007 sparc64-openbsd 4.3
Report: This distribution has been tested as part of the cpan-testers
effort to test as many new uploads to CPAN as possible.  See
http://testers.cpan.org/

Please cc any replies to cpan-testers@perl.org to keep other
test volunteers informed and to prevent any duplicate effort.

--
PERL_DL_NONLAZY=1 /usr/bin/perl "-MExtUtils::Command::MM" "-e" "test_harness(1, 'blib/lib', 'blib/arch')" t/*.t
t/00base....................1..6
ok 1 - use DBI;
ok 2 - use DBD::mysql;
ok 3 - Internal set
ok 4 - Install driver
ok 5 - DBI::dr set
ok 6 - Version 4.007
Driver version is 4.007
ok
t/10connect.................1..2
ok 1 - Connected to database
ok 2
ok
t/20createdrop..............1..4
ok 1 - Connected to database
ok 2 - making slate clean
ok 3 - creating t1
ok 4 - dropping created t1
ok
t/25lockunlock..............1..13
ok 1 - drop table if exists t1
ok 2 - create table t1
ok 3 - lock table t1
ok 4 - Insert 
ok 5 - Delete
ok 6 - Prepare of select
ok 7 - Prepare of select
ok 8 - Execute
ok 9 - Fetch should have failed
ok 10 - Fetch should have failed
ok 11 - Unlock tables
ok 12 - Drop table t1
ok 13 - Disconnecting
ok
t/29warnings................1..4
ok 1 - Connected to database
ok 2
ok 3
ok 4
ok
t/30insertfetch.............1..10
ok 1 - Connected to database
ok 2 - making slate clean
ok 3 - creating table
ok 4 - loading data
ok 5 - deleting from table t1
ok 6
ok 7
ok 8
ok 9
ok 10 - Dropping table
ok
t/31insertid................1..18
ok 1
ok 2 - create t1
ok 3
ok 4
ok 5
ok 6 - insert id == 1
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13 - sth insert id 2 == max(id) 2  in t1
ok 14 - dbh insert id 2 == max(id) 2 in t1
ok 15
ok 16
ok 17
ok 18
ok
t/32insert_error............1..9
ok 1
ok 2
ok 3
ok 4
ok 5 - fails with duplicate entry
ok 6
ok 7
ok 8
ok 9
ok
t/35limit...................1..111
ok 1 - Connected to database
ok 2 - making slate clean
ok 3 - creating table
ok 4
PERL testing insertion of values from previous prepare of insert statement:
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13
ok 14
ok 15
ok 16
ok 17
ok 18
ok 19
ok 20
ok 21
ok 22
ok 23
ok 24
ok 25
ok 26
ok 27
ok 28
ok 29
ok 30
ok 31
ok 32
ok 33
ok 34
ok 35
ok 36
ok 37
ok 38
ok 39
ok 40
ok 41
ok 42
ok 43
ok 44
ok 45
ok 46
ok 47
ok 48
ok 49
ok 50
ok 51
ok 52
ok 53
ok 54
ok 55
ok 56
ok 57
ok 58
ok 59
ok 60
ok 61
ok 62
ok 63
ok 64
ok 65
ok 66
ok 67
ok 68
ok 69
ok 70
ok 71
ok 72
ok 73
ok 74
ok 75
ok 76
ok 77
ok 78
ok 79
ok 80
ok 81
ok 82
ok 83
ok 84
ok 85
ok 86
ok 87
ok 88
ok 89
ok 90
ok 91
ok 92
ok 93
ok 94
ok 95
ok 96
ok 97
ok 98
ok 99
ok 100
ok 101
ok 102
ok 103
ok 104
PERL rows : 1
PERL testing prepare of select statement with LIMIT placeholders:
ok 105
PERL testing exec of bind vars for LIMIT
ok 106
ok 107
ok 108
ok 109
ok 110
ok 111
ok
t/35prepare.................1..49
ok 1 - Connected to database
ok 2 - Making slate clean
ok 3 - Creating table
ok 4 - Testing prepare show tables
ok 5 - Executing 'show tables'
ok 6 - Testing if result set and no errors
ok 7 - Checking if results equal to 't1' 
# 
ok 8 - Finishing up with statement handle
ok 9 - Inserting first row
ok 10 - Preparing insert of second row
ok 11 - Inserting second row
ok 12 - One row should have been inserted
ok 13 - Finishing up with statement handle
ok 14 - Testing prepare of query
ok 15 - Testing execute of query
ok 16 - Testing fetchall_arrayref of executed query
ok 17 - Preparing insert, this time using placeholders
ok 18 - Testing insert row
ok 19 - Should have inserted one row
ok 20 - Testing insert row
ok 21 - Should have inserted one row
ok 22 - Testing insert row
ok 23 - Should have inserted one row
ok 24 - Testing insert row
ok 25 - Should have inserted one row
ok 26 - Testing insert row
ok 27 - Should have inserted one row
ok 28 - Testing insert row
ok 29 - Should have inserted one row
ok 30 - Testing insert row
ok 31 - Should have inserted one row
ok 32 - Testing insert row
ok 33 - Should have inserted one row
ok 34 - Testing insert row
ok 35 - Should have inserted one row
ok 36 - Testing insert row
ok 37 - Should have inserted one row
ok 38 - Testing closing of statement handle
ok 39 - Testing prepare of query with placeholders
ok 40 - Testing execution with values id = 1 or id = 2
ok 41 - Testing fetchall_arrayref (should be four rows)
RETREF 4
ok 42 - $ret_ref should contain four rows in result set
ok 43 - Testing prepare of dropping table
ok 44 - Executing drop table
ok 45 - Prepare - Testing bug \#20153
ok 46 - Execute - Testing bug \#20153
ok 47 - Fetch - Testing bug \#20153
ok 48 - Not Fetch - Testing bug \#20153
ok 49 - Testing disconnect
ok
t/40bindparam...............1..41
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13
ok 14
ok 15
ok 16
ok 17
ok 18
ok 19
ok 20
ok 21
ok 22
ok 23 - id set to -1
ok 24 - name eq abc
ok 25 - id set to 1
ok 26 - $name set to Alligator Descartes
ok 27 - id set to 2
ok 28 - $name set to Tim Bunce
ok 29 - id set to 3
ok 30 - $name set to Jochen Wiedmann
ok 31 - id set to 4
ok 32 - $name set to Andreas Koenig
ok 33 - id set to 5
ok 34 - name not defined
ok 35 - id set to 6
ok 36 - $name set to '?'
ok 37 - $id set to 7
ok 38 - $name set to '?'
ok 39
ok 40
ok 41
ok
t/40bindparam2..............1..13
ok 1 - drop table t1
ok 2 - create table t1
ok 3 - insert into t1 (null, 1)
ok 4
ok 5 - $rows->[0][1] == 1
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13
ok
t/40blobs...................1..14
ok 1 - Drop table if exists t1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8 - row returned defined
ok 9 - records from t1 returned 2
ok 10 - id set to 1
ok 11 - blob set equal to blob returned
00000000 000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f
00000020 202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f
00000040 404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f
00000060 606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f
00000080 808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9f
000000a0 a0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebf
000000c0 c0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedf
000000e0 e0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff
00000000 000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f
00000020 202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f
00000040 404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f
00000060 606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f
00000080 808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9f
000000a0 a0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebf
000000c0 c0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedf
000000e0 e0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff
ok 12
ok 13 - Drop table t1
ok 14
ok
t/40catalog.................1..77
ok 1 - connecting
ok 2 - cleaning up
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13
ok 14
ok 15
ok 16
ok 17 - cleaning up
ok 18 - No catalogs expected
ok 19 - Some schemas expected
ok 20 - Some table types expected
ok 21 - cleaning up
ok 22
ok 23
ok 24
ok 25
ok 26 - one row expected
ok 27
ok 28
ok 29
ok 30
ok 31
ok 32
ok 33 - two rows expected
ok 34
ok 35
ok 36
ok 37 - only one table expected
ok 38
ok 39
ok 40
ok 41 - only one table expected
ok 42
ok 43
ok 44
ok 45 - only one table expected
ok 46 - five tables expected
ok 47 - table with single quote
ok 48 - table with back quote
ok 49 - two tables expected
ok 50 - cleaning up
ok 51
ok 52
ok 53
ok 54
ok 55
ok 56
ok 57 - two rows expected
ok 58
ok 59
ok 60 - one row expected
ok 61
ok 62
ok 63 - one row expected
ok 64
ok 65
ok 66
ok 67
ok 68 - two rows expected
ok 69
ok 70 - cleaning up
ok 71 - creating table
ok 72
ok 73
ok 74
ok 75
ok 76
ok 77 - cleaning up
ok
t/40keyinfo.................1..7
ok 1 - Connected to database for key info tests
ok 2 - Dropped table
ok 3 - Created table t1
ok 4 - Got primary key info
ok 5 - Check primary_key_info results
ok 6 - Check primary_key results
ok 7 - Dropped table
ok
t/40listfields..............1..25
ok 1 - drop table if exists t1
ok 2 - create table t1
ok 3 - table info for t1
ok 4 - column_info for t1
ok 5 - $sth defined
ok 6 - not error
ok 7 - prepare succeeded
ok 8 - execute select
ok 9 - 2 defined
ok 10 - $res 2 == 2
ok 11 - $sth->{NAME} defined
ok 12 - id eq 'id'
ok 13 - name eq 'name'
ok 14 - nullable
ok 15
ok 16
ok 17 - SQL_INTEGER
ok 18 - SQL_VARCHAR
ok 19
ok 20
ok 21
ok 22
ok 23 - equals '0'
ok 24
ok 25 - equals 'abc'
ok
t/40nulls...................1..10
ok 1 - DROP TABLE IF EXISTS t1
ok 2 - create table CREATE TABLE t1 (
#   id INT(4),
#   name VARCHAR(64)
#   )
# 
ok 3 - inserting nulls
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok
t/40numrows.................1..30
ok 1
ok 2 - CREATE TABLE t1
ok 3 - inserting first row
ok 4
ok 5
ok 6 - \$sth->rows should be 1
ok 7
ok 8 - Verified rows should be 1
ok 9
ok 10 - inserting second row
ok 11
ok 12
ok 13 - \$sth->rows should be 2
ok 14
ok 15 - Verified rows should be 2
ok 16
ok 17 - inserting third row
ok 18
ok 19
ok 20 - rows should be 2
ok 21
ok 22 - Verified rows should be 2
ok 23
ok 24
ok 25
ok 26 - rows should be 3
ok 27
ok 28 - Verified rows should be 3
ok 29 - drop table t1
ok 30
ok
t/40server_prepare..........1..10
ok 1 - connecting
ok 2 - making slate clean
ok 3 - creating table
ok 4 - loading data
ok 5
ok 6 - binding parameter
ok 7 - fetching data
ok 8
ok 9
ok 10 - cleaning up
ok
t/40server_prepare_error....1..3
ok 1
ok 2
errstr You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select select' at line 1
ok 3
ok
t/40types...................err perl 
1..20
ok 1 - Connected to database
ok 2 - making slate clean
ok 3 - creating table
ok 4 - getting table information
ok 5 - checking column type
ok 6
ok 7 - cleaning up
ok 8 - creating table
ok 9 - binding parameter
ok 10 - inserting data
ok 11
ok 12 - binding parameter
ok 13 - inserting data
ok 14
ok 15
ok 16 - cleaning up
ok 17 - creating table
ok 18 - loading data
ok 19
ok 20 - cleaning up
ok
t/41bindparam...............1..11
ok 1 - drop table t1
ok 2 - create table t1
ok 3
ok 4 - bind param 10000 col1
ok 5 - execute
ok 6 - bind param 10001 col1
ok 7 - execute
ok 8
ok 9
ok 10
ok 11
ok
t/41blobs_prepare...........1..25
ok 1 - drop table if exists t1
ok 2 - create table t1
ok 3
ok 4
ok 5 - inserting $blob1
ok 6
ok 7
ok 8 - select from t1
ok 9
ok 10 - two rows fetched
ok 11 - first row id == 1
00000000 4d787379417078686e646143533564626e7951443748434661665a7363485947
00000020 326163546338724b52396248416d436832334d5a4d78687a6147576e6d68625a
00000040 6f4a663268633946567354426e77485862594373374b43447368636d37575945
00000060 374a36516833357472796f644e56746d636b5958757076397264676655616164
00000080 32534e7759796e7a33344a7a66594b626e48504d5a46326a7958396245366764
000000a0 464b44526d5673527142736a7352664337746837577670686e73677a796d5646
000000c0 6f4b6a5772425a744448574d32585a79477547675344507748616f5955665272
000000e0 3233426e76767570376e704e717859666f65704b735946396b4139436d637975
ok 12 - 
ok 13
ok 14
ok 15 - inserting $blob2
ok 16
ok 17
ok 18
ok 19
ok 20 - two rows
ok 21 - row id == 1
00000000 2222222222222222222222222222222222222222222222222222222222222222
00000020 2222222222222222222222222222222222222222222222222222222222222222
00000040 2222222222222222222222222222222222222222222222222222222222222222
00000060 2222222222222222222222222222222222222222222222222222222222222222
00000080 2222222222222222222222222222222222222222222222222222222222222222
000000a0 2222222222222222222222222222222222222222222222222222222222222222
000000c0 2222222222222222222222222222222222222222222222222222222222222222
000000e0 2222222222222222222222222222222222222222222222222222222222222222
ok 22 - 
ok 23
ok 24 - drop t1
ok 25
ok
t/42bindparam...............1..12
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok
t/50chopblanks..............1..29
ok 1 - drop table if exists t1
ok 2 - create table t1
ok 3
ok 4
ok 5 - inserting (1, ) into t1
ok 6 - selecting where id = 1
ok 7
ok 8 - $name should not have blanks chopped
ok 9
ok 10
ok 11 - should have blanks chopped
ok 12 - inserting (2,  ) into t1
ok 13 - selecting where id = 2
ok 14
ok 15 - $name should not have blanks chopped
ok 16
ok 17
ok 18 - should have blanks chopped
ok 19 - inserting (3,  a b c ) into t1
ok 20 - selecting where id = 3
ok 21
ok 22 - $name should not have blanks chopped
ok 23
ok 24
ok 25 - should have blanks chopped
ok 26
ok 27
ok 28 - drop t1
ok 29
ok
t/50commit..................1..21
ok 1 - drop table if exists t1
ok 2 - create $table
ok 3 - $dbh->{AutoCommit} not defined ||
ok 4
ok 5
ok 6
ok 7 - insert into t1 (1, 'Jochen')
ok 8
ok 9 - rollback
ok 10
ok 11 - delete from t1 where id = 1
ok 12
ok 13 - commit
ok 14
ok 15
ok 16
ok 17
ok 18
ok 19 - connected
ok 20
ok 21 - $dbh->{AutoCommit} 1
ok
t/55utf8....................1..15
ok 1
ok 2
ok 3 - testing quoting of utf 8 string
ok 4 - testing quoting of blob
ok 5 - INSERT query INSERT INTO t1 (name, bincol, shape, binutf) 
#     VALUES (?,?, GeomFromText('Point(132865 501937)'), ?)
# 

ok 6
ok 7
ok 8
ok 9
ok 10 - blob was made utf8!.
ok 11 - shape was made utf8!.
ok 12 - compare Ādam eq Ādam
ok 13
ok 14
ok 15
ok
t/60leaks...................1..0 # Skip Skip $ENV{SLOW_TESTS} is not set
# 
skipped
        all skipped: Skip $ENV{SLOW_TESTS} is not set
t/65types...................1..19
ok 1
ok 2
ok 3 - prepare: 
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10 - prepare: 
ok 11
ok 12
ok 13
ok 14
ok 15
ok 16
ok 17
ok 18
ok 19
ok
t/70takeimp.................1..21
ok 1 - obtained driver handle
ok 2 - connected to database
ok 3 - Initial connection: 106
# 
ok 4 - Driver handle defined
# 
ok 5 - Didn't get imp_data
ok 6 - test that our imp_data is greater than or equal to 80, actual 207
ok 7 - our Driver should have 0 Kid(s) after calling take_imp_data
ok 8 - ... our Driver should be undefined
ok 9 - our TraceLevel should be undefined
ok 10 - disconnect should return undef
ok 11 - quote should return undefined
ok 12 - we should have received 4 warnings
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 13-21
	Failed 9/21 tests, 57.14% okay
t/71impdata.................1..10
ok 1 - Connected to database
ok 2 - Obtained driver handle
ok 3 - 1 kid
ok 4 - 1 active kid
ok 5 - no kids
ok 6 - no active kids
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 7-10
	Failed 4/10 tests, 60.00% okay
t/75supported_sql...........1..12
ok 1
ok 2 - create t1
ok 3
ok 4
ok 5
ok 6 - $row->[0] eq t1
ok 7
ok 8 - drop t1
ok 9 - creating t1 again with 1 col
ok 10 - alter t1 ADD COLUMN
ok 11 - drop t1
ok 12
ok
t/76multi_statement.........1..7
ok 1 - Connected to database with multi statement support
ok 2 - clean up
ok 3 - create table
ok 4
ok 5 - Connected to database without multi statement support
ok 6
ok 7 - clean up
ok
t/80procs...................1..29
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13
ok 14 - num_of_fields == 1
ok 15
ok 16
ok 17 - 1 row in resultset
ok 18
ok 19 - NUM_OF_FIELDS == 2
ok 20
ok 21
ok 22 - 2 rows in resultset
ok 23
ok 24 - NUM_OF_FIELDS == 3
ok 25
ok 26
ok 27 - 3 Rows in resultset
ok 28
ok 29
ok
Failed Test   Stat Wstat Total Fail  Failed  List of Failed
-------------------------------------------------------------------------------
t/70takeimp.t  255 65280    21   18  85.71%  13-21
t/71impdata.t  255 65280    10    8  80.00%  7-10
1 test skipped.
*** Error code 25

Stop in /usr/ports/databases/p5-DBD-mysql/w-p5-DBD-mysql-4.007/DBD-mysql-4.007 (line 955 of Makefile).

--

Summary of my perl5 (revision 5 version 8 subversion 8) configuration:
  Platform:
    osname=openbsd, osvers=4.3, archname=sparc64-openbsd
    uname='openbsd'
    config_args='-dsE -Dopenbsd_distribution=defined'
    hint=recommended, useposix=true, d_sigaction=define
    usethreads=undef use5005threads=undef useithreads=undef usemultiplicity=undef
    useperlio=define d_sfio=undef uselargefiles=define usesocks=undef
    use64bitint=define use64bitall=define uselongdouble=undef
    usemymalloc=n, bincompat5005=undef
  Compiler:
    cc='cc', ccflags ='-fno-strict-aliasing -fno-delete-null-pointer-checks -pipe -I/usr/local/include',
    optimize='-O2',
    cppflags='-fno-strict-aliasing -fno-delete-null-pointer-checks -pipe -I/usr/local/include'
    ccversion='', gccversion='3.3.5 (propolice)', gccosandvers='openbsd4.3'
    intsize=4, longsize=8, ptrsize=8, doublesize=8, byteorder=87654321
    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=16
    ivtype='long', ivsize=8, nvtype='double', nvsize=8, Off_t='off_t', lseeksize=8
    alignbytes=8, prototype=define
  Linker and Libraries:
    ld='cc', ldflags ='-Wl,-E '
    libpth=/usr/lib
    libs=-lm -lutil -lc
    perllibs=-lm -lutil -lc
    libc=/usr/lib/libc.so.45.0, so=so, useshrplib=true, libperl=libperl.so.10.1
    gnulibc_version=''
  Dynamic Linking:
    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-Wl,-R/usr/libdata/perl5/sparc64-openbsd/5.8.8/CORE'
    cccdlflags='-DPIC -fPIC ', lddlflags='-shared -fPIC '