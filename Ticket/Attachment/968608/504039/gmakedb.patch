--- a/lib/Makefile/Parser/GmakeDB.pm
+++ b/lib/Makefile/Parser/GmakeDB.pm
@@ -421,13 +421,13 @@
 
 The result of the parser is a makefile AST defined by L<Makefile::AST>.
 
-The "data base output listing" generated by C<make --print-data-base> is a detailed listing for GNU make's internal data structures, which is essentially the AST used by C<make>. According to GNU make's current maintainer, Paul Smith, this feature is provided primarily for debuging the user's own makefiles, and it also helps the GNU make developer team to diagnose the flaws in make itself. Incidentally this output is conformed to the GNU makefile syntax, and a lot of important information is provided in the form of makefile comments. Therefore, my GmakeDB parser is able to reuse the L<Makefile::DOM> module to parse this output listing.
+The "data base output listing" generated by C<make --print-data-base> is a detailed listing for GNU make's internal data structures, which is essentially the AST used by C<make>. According to GNU make's current maintainer, Paul Smith, this feature is provided primarily for debugging the user's own makefiles, and it also helps the GNU make developer team to diagnose the flaws in make itself. Incidentally this output is conformed to the GNU makefile syntax, and a lot of important information is provided in the form of makefile comments. Therefore, my GmakeDB parser is able to reuse the L<Makefile::DOM> module to parse this output listing.
 
 The data base output from GNU make can be divided into several clearly-separated segments. They're file header, "Variables", "Files", "VPATH Search Paths", as well as the last resource stats information.
 
-The contents of these segments are mostly obvious. The Files segment may deserve some explanation. It is the place for explict rules.
+The contents of these segments are mostly obvious. The Files segment may deserve some explanation. It is the place for explicit rules.
 
-Now let's take the Variables segment as an  example to demonstrate the format of the data base listing:
+Now let's take the Variables segment as an example to demonstrate the format of the data base listing:
 
     # Variables
 
@@ -496,7 +496,7 @@
 
 =item *
 
-GNU make does not escape meta characters appeared in rule targes and prerequisites in its data base listing. Examples are C<:>, C<\>, and C<#>. This bug has been reported to the GNU make team as C<Savannah bug #20067>.
+GNU make does not escape meta characters appeared in rule targets and prerequisites in its data base listing. Examples are C<:>, C<\>, and C<#>. This bug has been reported to the GNU make team as C<Savannah bug #20067>.
 
 This bug has not yet been fixed on the C<make> side, so I have to work around this issue by preprocessing the data base listing in the L<makesimple> script.

