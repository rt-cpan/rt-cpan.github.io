--- /usr/lib/perl5/site_perl/5.8.8/CGI/Application/PhotoGallery.pm~	2008-03-11 11:23:32.000000000 -0400
+++ /usr/lib/perl5/site_perl/5.8.8/CGI/Application/PhotoGallery.pm	2008-07-20 11:28:09.000000000 -0400
@@ -138,6 +138,13 @@
 and height attributes on the image tag, thus saving the image will retain the
 full resolution.
 
+=head2 max_height
+
+Setting this value will force the browser to scale images down to this
+particular height and proportioned width. This is done by setting the width
+and height attributes on the image tag, thus saving the image will retain the
+full resolution.
+
 =head2 cache_root
 
 Specifies where the file cache data will be stored.  Defaults to FileCache
@@ -473,7 +480,26 @@
 
     unless ( $data ) {
         my $gfx = $self->gfx_lib;
-        $data = $gfx->resize( $path, $size );
+	eval {
+	    $data = $gfx->resize( $path, $size );
+	}; if ($@) {
+	    my $errstr = $@;
+	    my $errimg = $self->_dist_file( 'nothumb.jpg' );
+
+	    eval {
+		$data = $gfx->resize( $errimg, $size );
+	    }; if ($@) {
+		    return $self->handle_error( "Unable to resize $path; file may be corrupt; error image also corrupt\nError string:$errstr" );
+	    }
+
+	    $self->header_props(
+				{   -type          => $self->mime_types->mimeTypeOf( $errimg ),
+				    -last_modified => HTTP::Date::time2str( ( stat( $errimg ) )[ 9 ] )
+				    }
+				);
+	    binmode STDOUT;
+	    return $data;
+	}
         $cache->set( $key => $data );
     }
 
@@ -585,7 +611,12 @@
 
     my $gfx = $self->gfx_lib;
 
-    my ( $width, $height ) = $gfx->size( $path );
+    my ( $width, $height );
+    eval {
+	($width, $height) = $gfx->size( $path );
+    }; if ($@) {
+	return $self->handle_error("Unable to determine size of $path; file may be corrupt.\nError string:$@");
+    }
 
     # get data for prev/next/parent links
     my ( undef, $search_dir ) = fileparse( $path );
@@ -622,6 +653,14 @@
         }
     }
 
+    if ( defined( my $max_height = $self->param( 'max_height' ) ) ) {
+        if ( $height > $max_height ) {
+            my $scale = $max_height / $height;
+            $width  = int( $width * $scale );
+            $height = int( $height * $scale );
+        }
+    }
+
     $html->param(
         photo  => $photo,
         width  => $width,
@@ -675,7 +714,7 @@
         $error = 'ERROR: File not found.';
     }
     else {
-        $self->header_props( { -status => '500 Error' } );
+        $self->header_props( { -status => '200 Error' } );
     }
 
     my $html = $self->load_tmpl(
