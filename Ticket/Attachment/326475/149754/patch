diff -rc HTML-Parser-3.56/lib/HTML/Entities.pm HTML-Parser-3.56-msouth/lib/HTML/Entities.pm
*** HTML-Parser-3.56/lib/HTML/Entities.pm	Wed Mar 22 04:15:23 2006
--- HTML-Parser-3.56-msouth/lib/HTML/Entities.pm	Wed Jun 13 14:35:01 2007
***************
*** 448,453 ****
--- 448,454 ----
  
  sub encode_entities
  {
+     return undef unless defined $_[0];
      my $ref;
      if (defined wantarray) {
  	my $x = $_[0];
diff -rc HTML-Parser-3.56/t/entities.t HTML-Parser-3.56-msouth/t/entities.t
*** HTML-Parser-3.56/t/entities.t	Mon Oct 24 08:08:13 2005
--- HTML-Parser-3.56-msouth/t/entities.t	Wed Jun 13 14:31:35 2007
***************
*** 1,6 ****
  use HTML::Entities qw(decode_entities encode_entities encode_entities_numeric);
  
! use Test::More tests => 12;
  
  $a = "V&aring;re norske tegn b&oslash;r &#230res";
  
--- 1,8 ----
  use HTML::Entities qw(decode_entities encode_entities encode_entities_numeric);
  
! use Test::More tests => 13;
! 
! # vim: ft=perl
  
  $a = "V&aring;re norske tegn b&oslash;r &#230res";
  
***************
*** 28,34 ****
  # See how well it does against rfc1866...
  $ent = $plain = "";
  while (<DATA>) {
!     next unless /^\s*<!ENTITY\s+(\w+)\s*CDATA\s*\"&\#(\d+)/;
      $ent .= "&$1;";
      $plain .= chr($2);
  }
--- 30,36 ----
  # See how well it does against rfc1866...
  $ent = $plain = "";
  while (<DATA>) {
!     next unless /^\s*<!ENTITY\s+(\w+)\s*CDATA\s*\"&\#(\d+)/; #"
      $ent .= "&$1;";
      $plain .= chr($2);
  }
***************
*** 67,72 ****
--- 69,82 ----
  is(encode_entities("'", "'"), "&#39;");
  
  
+ eval {
+     local $SIG{__WARN__} = sub { die $_[0] };
+     $^W = 1;
+ 
+     encode_entities(undef);
+ };
+ is( $@, '', "no warning on encode of undef");
+ 
  __END__
  # Quoted from rfc1866.txt
  
