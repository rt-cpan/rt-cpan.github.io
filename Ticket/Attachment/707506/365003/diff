diff -ru JSON-2.16/lib/JSON/PP.pm JSON-2.16_edited/lib/JSON/PP.pm
--- JSON-2.16/lib/JSON/PP.pm	2009-10-16 01:43:22.000000000 -0400
+++ JSON-2.16_edited/lib/JSON/PP.pm	2009-12-16 15:24:06.000000000 -0500
@@ -709,6 +709,10 @@
 
         my $result = value();
 
+        if (!defined($result) && ($opt & 0x00000001)) {
+            return undef;
+        }
+
         if (!$idx->[ P_ALLOW_NONREF ] and !ref $result) {
                 decode_error(
                 'JSON text must be an object or array (but found number, string, true, false or null,'
diff -ru JSON-2.16/t/19_incr.t JSON-2.16_edited/t/19_incr.t
--- JSON-2.16/t/19_incr.t	2008-06-25 01:06:42.000000000 -0400
+++ JSON-2.16_edited/t/19_incr.t	2009-12-16 15:22:05.000000000 -0500
@@ -5,7 +5,7 @@
 use strict;
 
 use Test::More;
-BEGIN { plan tests => 697 };
+BEGIN { plan tests => 707 };
 BEGIN { $ENV{PERL_JSON_BACKEND} = 0; }
 
 
@@ -182,3 +182,25 @@
    is_deeply(eval { $coder->incr_parse("[42]") }, [42], "valid data after incr_skip");
 }
 
+{
+   local *decoder = sub {
+      my $coder = JSON->new->relaxed;
+      $coder->incr_parse($_[0]);
+      my $rv;
+      return $rv if eval { $rv = $coder->incr_parse(); 1 };
+      chomp( my $e = $@ );
+      return "died with \"$e\"";
+   };
+
+   is_deeply( decoder( "[]"        ), [],        'array baseline' );
+   is_deeply( decoder( " []"       ), [],        'space before array ignored' );
+   is_deeply( decoder( "\n[]"      ), [],        'newline before array ignored' );
+   like(      decoder( "a[]"       ), qr/^died/, '"a" before array error' );
+   is_deeply( decoder( "# foo\n[]" ), [],        'comment before array ignored' );
+
+   is_deeply( decoder( ""          ), undef,     'eof baseline' );
+   is_deeply( decoder( " "         ), undef,     'space before eof ignored' );
+   is_deeply( decoder( "\n"        ), undef,     'newline ignored before eof ignored' );
+   like(      decoder( "a"         ), qr/^died/, '"a" before array error' );
+   is_deeply( decoder( "# foo\n"   ), undef,     'comment ignored before eof ignored' );
+}
