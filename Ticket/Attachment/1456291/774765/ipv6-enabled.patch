--- a/t/11-inet6.t
+++ b/t/11-inet6.t
@@ -1,17 +1,13 @@
 # $Id: 11-inet6.t 754 2008-12-22 12:48:09Z olaf $ -*-perl-*-
 
-
-
-use Test::More; 
 use strict;
-
-
-
-
+use Test::More;
+use t::NonFatal;
 
 BEGIN {
 	if (-e 't/IPv6.enabled' && ! -e 't/IPv6.disabled' ) {
 		plan tests => 10;
+                NonFatalBegin();
 	} else {
 		plan skip_all => 'Online tests disabled.';
 		exit;
@@ -35,7 +31,7 @@
 
 my $found_ns=0;
 foreach my $ns ($nsanswer->answer){
-    next if $ns->nsdname !~ /net-dns\.org$/i; # User net-dns.org only
+    # assume any net-dns.org nameserver will do
     my $aaaa_answer=$res->send($ns->nsdname,"AAAA","IN");
     next if ($aaaa_answer->header->ancount == 0);
     is (($aaaa_answer->answer)[0]->type,"AAAA", "Preparing  for v6 transport, got AAAA records for ". $ns->nsdname);
@@ -60,7 +56,7 @@
 # $res->print;
 # $res->debug(1);
 $answer=$res->send("net-dns.org","SOA","IN");
-is ($res->errorstring,"no nameservers","Correct errorstring when forcing v4");
+is ($res->errorstring,"IPv6 transport not available","Correct errorstring when forcing v4");
 
 
 $res->force_v4(0);
@@ -88,7 +84,7 @@
 #  Now test AXFR functionality.
 #
 #
-my $socket;
+my $iter;
 SKIP: { skip "online tests are not enabled", 2 unless  (-e 't/IPv6.enabled' && ! -e 't/IPv6.disabled');
 
 	# First use the local resolver to query for the AAAA record of a 
@@ -101,8 +97,6 @@
 	      my $AAAA_address;
 	       
 	      foreach my $ns ($nsanswer->answer){
-		  next if $ns->nsdname !~ /net-dns\.org$
-/; # User net-dns.org only
 		  my $aaaa_answer=$res2->send($ns->nsdname,"AAAA","IN");
 
 		  next if ($aaaa_answer->header->ancount == 0);
@@ -120,17 +114,17 @@
 	       $res2->nameservers($AAAA_address);
 	       # $res2->print;
 	       
-	       $socket=$res2->axfr_start('example.com');
+	       $iter=$res2->axfr('example.com');
 	       
 	}
 }
 
 
 
-SKIP: { skip "axfr_start did not return a socket", 2 unless defined($socket);
-	is(ref($socket),"IO::Socket::INET6","axfr_start returns IPv6 Socket");
-	my ($rr,$err)=$res2->axfr_next;
-	is($res2->errorstring,'Response code from server: NOTAUTH',"Transfer is not authorized (but our connection worked)");
+SKIP: { skip "axfr did not return an iterator", 2 unless defined($iter);
+	is(ref($iter),"CODE","axfr returns CODE ref");
+	my ($rr)=$iter->();
+	is($res2->errorstring,'RCODE from server: NOTAUTH',"Transfer is not authorized (but our connection worked)");
 
 }
 
@@ -145,3 +139,5 @@
 
 
 ok($ns,"nameserver object created on IPv6 ::1");
+
+NonFatalEnd();
--- a/Makefile.PL
+++ b/Makefile.PL
@@ -90,6 +90,11 @@
 
   --noonline-tests		Skip online tests completely.
 
+  --IPv6-tests                  Perform IPv6 specific online tests. Default is
+                                the same as regular online tests.
+
+  --noIPv6-tests                Skip IPv6 specific online test
+
   --non-fatal-online-tests	Perform online test, but do not let failures 
 				negatively affect the outcome of running
 				make test.  This is the default.
@@ -254,7 +259,11 @@
 # Test to see if IPv6 is available, unless IPv6 testing has been declined.
 #
 if ( !defined $IPv6_tests || $IPv6_tests == 1 ) {
-	unless ( eval { require IO::Socket::INET6; IO::Socket::INET6->VERSION("2.01"); } ) {
+	if ( eval { require IO::Socket::INET6; IO::Socket::INET6->VERSION("2.01"); } )
+        {
+                $IPv6_tests = $online_tests if !defined $IPv6_tests;
+        }
+        else {
 		print <<V6WARNING;
 
 The libraries needed to support IPv6 transport have not been found. 
