Description: fix misspelling in manpages
Forwarded: http://rt.cpan.org/Public/Bug/Display.html?id=....

--- a/lib/XML/Compile/SOAP.pod
+++ b/lib/XML/Compile/SOAP.pod
@@ -199,7 +199,7 @@
 Writers only.  Indicate who the target of the header entry is.
 By default, the end-point is the destination of each header element.
 
-The ARRAY contains a LIST of key-value pairs, specifing an entry label
+The ARRAY contains a LIST of key-value pairs, specifying an entry label
 followed by an I<actor> (soap1.1) or I<role> (soap1.2) URI.  You may use
 the predefined actors/roles, like 'NEXT'.  See L<roleURI()|XML::Compile::SOAP/"Transcoding"> and
 L<roleAbbreviation()|XML::Compile::SOAP/"Transcoding">.
@@ -312,7 +312,7 @@
 text, if they are lucky; the WSDL file does not contain the prototype
 of the procedures, but that doesn't mean that they are free-format.
 
-B<Encoded RPC> messsages are shaped to the procedures which are
+B<Encoded RPC> messages are shaped to the procedures which are
 being called on the server.  The body of the sent message contains the
 ordered list of parameters to be passed as 'in' and 'in/out' values to the
 remote procedure.  The body of the returned message lists the result value
@@ -326,7 +326,7 @@
 grew over a certain size... at a certain size, it becomes too hard to
 think of good distinguishable names.  In such case, you must be happy
 when you can place those names in a context, and use the same naming in
-seperate contexts without confusion.
+separate contexts without confusion.
 
 That being said: XML supports both namespace- and non-namespace elements
 and schema's; and of cause many mixed cases.  It is by far preferred to
--- a/lib/XML/Compile/SOAP/Client.pod
+++ b/lib/XML/Compile/SOAP/Client.pod
@@ -182,7 +182,7 @@
 
 If the first arguments for the code ref is a HASH, then there may be
 a second which specifies the required character-set.  The default is
-C<UTF-8>, which is very much adviced.
+C<UTF-8>, which is very much advised.
 
 =head3 Parameter unpacking (Document Style)
 
--- a/lib/XML/Compile/SOAP/Trace.pod
+++ b/lib/XML/Compile/SOAP/Trace.pod
@@ -53,7 +53,7 @@
 As KINDs are defined C<encode> (the time required by the translator
 build by XML::Compile::Schema to translate Perl into an XML::LibXML
 tree), C<transport>, and C<decode> (from XML::LibXML tree into Perl)>.
-The transport components are also provided seperately, as C<stringify>
+The transport components are also provided separately, as C<stringify>
 (by XML::LibXML to convert a tree into text), C<connect> (for the network
 message exchange by HTTP::Daemon), and C<parse> (parsing answer string
 into XML)
--- a/lib/XML/Compile/SOAP/Util.pod
+++ b/lib/XML/Compile/SOAP/Util.pod
@@ -10,7 +10,7 @@
 =head1 DESCRIPTION
 
 This module collects functions which are useful on many places in the
-SOAP implemention, just as L<XML::Compile::Util|XML::Compile::Util> does for general XML
+SOAP implementation, just as L<XML::Compile::Util|XML::Compile::Util> does for general XML
 implementations (often you will needs things from both).
 
 On the moment, only a long list of constant URIs are exported.
--- a/lib/XML/Compile/SOAP11/Encoding.pod
+++ b/lib/XML/Compile/SOAP11/Encoding.pod
@@ -243,7 +243,7 @@
 
 =item $obj-E<gt>B<struct>(TYPE, CHILDS)
 
-Create a structure, an element with childs.  The CHILDS must be fully
+Create a structure, an element with children.  The CHILDS must be fully
 prepared XML::LibXML::Element objects.
 
 =item $obj-E<gt>B<typed>(TYPE, NAME, VALUE)
--- a/lib/XML/Compile/WSDL11.pod
+++ b/lib/XML/Compile/WSDL11.pod
@@ -458,7 +458,7 @@
 
 [2.20] Returns the address of the server, as specified by the WSDL. When
 there are no alternatives for service or port, you not not need to
-specify those paramters.
+specify those parameters.
 
  -Option --Default
   port     <undef>
--- a/lib/XML/Compile/XOP.pod
+++ b/lib/XML/Compile/XOP.pod
@@ -19,12 +19,12 @@
 for SOAP1.2, but also usable for SOAP1.1.  It optimizes the transport of
 binary information (like images) which are part of the XML message: in
 stead of base64 encoding them adding 25% to the size of the data, these
-binaries are added as pure binary attachement to the SOAP message.
+binaries are added as pure binary attachment to the SOAP message.
 
 In the official specification, the XML message will be created first
 with the base64 representation of the data in it. Only at transmission,
 a preprocessor XOP (XML-binary Optimized Packaging) extracts those
-components to be send seperately.  In Perl, we have to be more careful
+components to be send separately.  In Perl, we have to be more careful
 about performance.  Therefore, the path via encoding to base64 and then
 decoding it back to binary in the sender (and the reverse process for
 the receiver) is avoided.
--- a/lib/XML/Compile/XOP/Include.pod
+++ b/lib/XML/Compile/XOP/Include.pod
@@ -11,7 +11,7 @@
 
 =head1 DESCRIPTION
 
-Represents one data-set which will be represented as seperate (binary)
+Represents one data-set which will be represented as separate (binary)
 object during transport.  This can only be used on data fields which
 are base64Binary.
 
@@ -21,7 +21,7 @@
 The object is overloaded to produce the contained data when a scalar is
 required, for instance when you call functions like "length".  This means
 that, hopefully, the end-user does not see much of a difference between
-data which is transported inline or packaged seperately.
+data which is transported inline or packaged separately.
 
 =head1 METHODS
 
