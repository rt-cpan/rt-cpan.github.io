diff -uNr Log-Dispatch-File-Rolling-1.05/lib/Log/Dispatch/File/Rolling.pm Log-Dispatch-File-Rolling-prime/lib/Log/Dispatch/File/Rolling.pm
--- Log-Dispatch-File-Rolling-1.05/lib/Log/Dispatch/File/Rolling.pm	2007-11-08 15:20:15.000000000 -0500
+++ Log-Dispatch-File-Rolling-prime/lib/Log/Dispatch/File/Rolling.pm	2009-10-22 14:14:50.000000000 -0400
@@ -62,6 +62,7 @@
 		$p{filename} = $self->_createFilename();
 	}
 
+	$self->{rolling_fh_pid} = $$;
 	$self->_make_handle(%p);
 
 	return $self;
@@ -85,7 +86,7 @@
 		$self->_unlock();
 		close($fh);
 		$self->{fh} = undef;
-	} elsif (defined $self->{fh} and $self->{rolling_fh_pid}||'' eq $$ and defined fileno $self->{fh}) { # flock won't work after a fork()
+	} elsif (defined $self->{fh} and ($self->{rolling_fh_pid}||'') eq $$ and defined fileno $self->{fh}) { # flock won't work after a fork()
 		my $inode  = (stat($self->{fh}))[1];         # get real inode
 		my $finode = (stat($self->{filename}))[1];   # Stat the name for comparision
 		if(!defined($finode) || $inode != $finode) { # Oops someone moved things on us. So just reopen our log
diff -uNr Log-Dispatch-File-Rolling-1.05/MANIFEST Log-Dispatch-File-Rolling-prime/MANIFEST
--- Log-Dispatch-File-Rolling-1.05/MANIFEST	2007-11-08 15:14:27.000000000 -0500
+++ Log-Dispatch-File-Rolling-prime/MANIFEST	2009-10-22 14:30:50.000000000 -0400
@@ -1,14 +1,15 @@
-Makefile.PL
-MANIFEST
-README
-Changes
-lib/Log/Dispatch/File/Rolling.pm
-t/1.t
-t/2.t
-t/3.t
-t/4.t
-t/5.t
-t/6.t
+Changes
+lib/Log/Dispatch/File/Rolling.pm
+Makefile.PL
+MANIFEST
 META.yml
-t/7testpod.t
-t/8coverage.t
+README
+t/1.t
+t/2.t
+t/3.t
+t/4.t
+t/5.t
+t/6.t
+t/7testpod.t
+t/8coverage.t
+t/9.t
diff -uNr Log-Dispatch-File-Rolling-1.05/t/9.t Log-Dispatch-File-Rolling-prime/t/9.t
--- Log-Dispatch-File-Rolling-1.05/t/9.t	1969-12-31 19:00:00.000000000 -0500
+++ Log-Dispatch-File-Rolling-prime/t/9.t	2009-10-22 14:30:24.000000000 -0400
@@ -0,0 +1,62 @@
+# Before `make install' is performed this script should be runnable with
+# `make test'. After `make install' it should work as `perl 1.t'
+
+#########################
+
+use Test::More tests => 11;
+use Test::Fork;
+
+use Log::Dispatch;
+use Log::Dispatch::File::Rolling;
+ok(1); # If we made it this far, we're ok.
+
+#########################1
+
+my $dispatcher = Log::Dispatch->new;
+ok($dispatcher);
+
+#########################2
+
+my %params = (
+    name      => 'file',
+    min_level => 'debug',
+    filename  => 'logfile.txt',
+);
+
+my $Rolling = Log::Dispatch::File::Rolling->new(%params);
+ok($Rolling);
+
+#########################3
+
+$dispatcher->add($Rolling);
+
+ok(1);
+
+#########################4
+
+my @message = map {'logtest id ' . int(rand(9999))} 1 .. 3;
+
+my $initial_fileno = fileno $Rolling->{fh};
+$dispatcher->log( level   => 'info', message => $message[0] );
+my $parent_fileno = fileno $Rolling->{fh};
+is( $parent_fileno, $initial_fileno, "initial log call doesn't reopen" );
+fork_ok( 2, sub {
+    $dispatcher->log( level => 'info', message => $message[1] );
+    my $child_fileno = fileno $Rolling->{fh};
+    isnt( $child_fileno, $parent_fileno, "logging in child reopens" );
+    $dispatcher = $Rolling = undef;
+    ok(1);
+});
+$dispatcher->log( level   => 'info', message => $message[2] );
+my $_parent_fileno = fileno $Rolling->{fh};
+is( $_parent_fileno, $parent_fileno, "logging in parent does not reopen" );
+
+ok(1);
+
+#########################5
+
+$dispatcher = $Rolling = undef;
+
+ok(1);
+
+#########################6
