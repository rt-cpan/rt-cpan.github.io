Description: fix some spelling errors
Origin: vendor
Author: gregor herrmann <gregoa@debian.org>
Last-Update: 2015-10-21

--- a/lib/Perinci/CmdLine.pm
+++ b/lib/Perinci/CmdLine.pm
@@ -27,10 +27,10 @@
 
 =head1 DESCRIPTION
 
-This module is currently empty, becase the implementation is currently split
-into L<Perinci::CmdLine::Lite> (for lightweight version) and
+This module is currently empty, because the implementation is currently split
+into L<Perinci::CmdLine::Lite> (the lightweight version) and
 L<Perinci::CmdLine::Classic> (the full but heavier version). There's also
-L<Perinci::CmdLine::Any> that lets you choose between the two dynamically, a la
+L<Perinci::CmdLine::Any> that let's you choose between the two dynamically, Ã  la
 Any::Moose. And finally there's also L<Perinci::CmdLine::Inline>, the even more
 lightweight version.
 
--- a/lib/Perinci/CmdLine/Manual.pod
+++ b/lib/Perinci/CmdLine/Manual.pod
@@ -206,7 +206,7 @@
 =head1 CONFIGURATION FILE
 
 Configuration files are read to preset the value of arguments, before
-potentially overriden/merged with command-line options. Configuration files are
+potentially overridden/merged with command-line options. Configuration files are
 in L<IOD> format, which is basically C<INI> with some extra features.
 
 By default, configuration files are searched in C</etc> and home directory, with
--- a/lib/Perinci/CmdLine/Manual/Examples.pod
+++ b/lib/Perinci/CmdLine/Manual/Examples.pod
@@ -641,7 +641,7 @@
 =head2 Basics
 
 In the function-centric world of Perinci::CmdLine, configuration is just another
-way to supply values to function arguments (before being potentially overriden
+way to supply values to function arguments (before being potentially overridden
 by command-line arguments). Configuration files are written in L<IOD> format,
 which is basically "INI with extra features". By default, configuration files
 are searched in C</etc> and then your home directory, with the name of
