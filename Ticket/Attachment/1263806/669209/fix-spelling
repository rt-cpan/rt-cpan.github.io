Description: Fix spelling in man pages
Author: dod
Reviewed-by: gregor herrmann <gregoa@debian.org>
Last-Update: 2013-09-17

--- a/lib/Array/Iterator.pm
+++ b/lib/Array/Iterator.pm
@@ -415,7 +415,7 @@
 
 =item B<Array::Iterator::Reusable>
 
-This iterator can be reset to its begining and used again.
+This iterator can be reset to its beginning and used again.
 
 =back
 
--- a/lib/Array/Iterator/BiDirectional.pm
+++ b/lib/Array/Iterator/BiDirectional.pm
@@ -103,17 +103,17 @@
 
 =item B<has_previous([$n])>
 
-This method works much like C<hasNext> does, it will return true (C<1>) unless the begining of the array has been reached, and false (C<0>) otherwise.
+This method works much like C<hasNext> does, it will return true (C<1>) unless the beginning of the array has been reached, and false (C<0>) otherwise.
 
 Optional argument has the same meaning except that it specifies C<$n>th previous element.
 
 =item B<previous>
 
-This method is much like C<next>. It will return the previous item in the iterator, and throw an exception if it attempts to reach past the begining of the array.
+This method is much like C<next>. It will return the previous item in the iterator, and throw an exception if it attempts to reach past the beginning of the array.
 
 =item B<get_previous>
 
-This method is much like C<get_next>. It will return the previous item in the iterator, and return undef if it attempts to reach past the begining of the array.
+This method is much like C<get_next>. It will return the previous item in the iterator, and return undef if it attempts to reach past the beginning of the array.
 
 =item B<look_back([$n])>
 
--- a/lib/Array/Iterator/Circular.pm
+++ b/lib/Array/Iterator/Circular.pm
@@ -113,7 +113,7 @@
 
 =item B<next>
 
-This will return the next item in the array, and when it reaches the end of the array, it will loop back to the begining again.
+This will return the next item in the array, and when it reaches the end of the array, it will loop back to the beginning again.
 
 =item B<get_next>
 
