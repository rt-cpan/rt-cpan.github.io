From f646fa6ce15984b4a7d3c7b633be4129ad00c407 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Petr=20P=C3=ADsa=C5=99?= <ppisar@redhat.com>
Date: Fri, 8 Mar 2013 13:00:52 +0100
Subject: [PATCH] Recognize all wide unicode characters

Type cast explicitly to (signed char) because sizof(char) can differ
from sizof(int). Also do not quote bytes above 0x7F because we assume
UTF-8 encoding.

This should be fixed properly by UTF-8 to Unicode decoding but we
need to recognize which encoding is in use before. How?
---
 emitter.c | 22 +++++++++++-----------
 syck.h    |  2 +-
 2 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/emitter.c b/emitter.c
index 48141b3..1d1a609 100644
--- a/emitter.c
+++ b/emitter.c
@@ -16,9 +16,9 @@
 
 #define DEFAULT_ANCHOR_FORMAT "id%03d"
 
-const char hex_table[] = 
+const unsigned char hex_table[] = 
 "0123456789ABCDEF";
-static char b64_table[] =
+static unsigned char b64_table[] =
 "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
 
 /*
@@ -598,12 +598,12 @@ syck_scan_scalar( int req_width, char *cursor, long len )
     /* scan string */
     for ( i = 0; i < len; i++ ) {
 
-        if ( ! ( (unsigned)cursor[i] == 0x9 ||
-                 (unsigned)cursor[i] == 0xA ||
-                 (unsigned)cursor[i] == 0xD ||
-               ( (unsigned)cursor[i] >= 0x20 && (unsigned)cursor[i] <= 0x7E ) ||
-                 (unsigned)cursor[i] == 0x85 ||
-                 (unsigned)cursor[i] >= 0xa0 )
+        if ( ! ( (unsigned char)cursor[i] == 0x9 ||
+                 (unsigned char)cursor[i] == 0xA ||
+                 (unsigned char)cursor[i] == 0xD ||
+               ( (unsigned char)cursor[i] >= 0x20 &&
+                 (unsigned char)cursor[i] <= 0x7E ) ||
+                 (unsigned char)cursor[i] >= 0x80 )
         ) {
             flags |= SCAN_NONPRINT;
         }
@@ -812,7 +812,7 @@ void syck_emit_scalar( SyckEmitter *e, char *tag, enum scalar_style force_style,
 }
 
 void
-syck_emitter_escape( SyckEmitter *e, char *src, long len )
+syck_emitter_escape( SyckEmitter *e, unsigned char *src, long len )
 {
     int i;
     for( i = 0; i < len; i++ )
@@ -927,7 +927,7 @@ void syck_emit_2quoted_1( SyckEmitter *e, int width, char *str, long len )
             break;
 
             default:
-                syck_emitter_escape( e, mark, 1 );
+                syck_emitter_escape( e, (unsigned char *)mark, 1 );
             break;
         }
         mark++;
@@ -990,7 +990,7 @@ void syck_emit_2quoted( SyckEmitter *e, int width, char *str, long len )
             break;
 
             default:
-                syck_emitter_escape( e, mark, 1 );
+                syck_emitter_escape( e, (unsigned char*)mark, 1 );
             break;
         }
         mark++;
diff --git a/syck.h b/syck.h
index 2886561..f5118cd 100644
--- a/syck.h
+++ b/syck.h
@@ -411,7 +411,7 @@ void syck_emitter_handler( SyckEmitter *, SyckEmitterHandler );
 void syck_free_emitter( SyckEmitter * );
 void syck_emitter_clear( SyckEmitter * );
 void syck_emitter_write( SyckEmitter *, const char *, long );
-void syck_emitter_escape( SyckEmitter *, char *, long );
+void syck_emitter_escape( SyckEmitter *, unsigned char *, long );
 void syck_emitter_flush( SyckEmitter *, long );
 void syck_emit( SyckEmitter *, st_data_t );
 void syck_emit_scalar( SyckEmitter *, char *, enum scalar_style, int, int, char, char *, long );
-- 
1.8.1.4

