Description: Correct some typographical and grammatical errors.
Forwarded: no
Author: Peter Pentchev <roam@ringlet.net>
Last-Update: 2016-11-27

--- a/lib/Config/IniFiles.pm
+++ b/lib/Config/IniFiles.pm
@@ -143,7 +143,7 @@
 
   $self->{_comments_at_end_of_file} = [];
 
-  # Any other parameters are unkown
+  # Any other parameters are unknown
   while (($k, $v) = each %parms) {
     carp "Unknown named parameter $k=>$v";
     $errs++;
@@ -340,7 +340,7 @@
 }
 
 
-# Auxillary function to make deep (aliasing-free) copies of data
+# Auxiliary function to make deep (aliasing-free) copies of data
 # structures.  Ignores blessed objects in tree (could be taught not
 # to, if needed)
 sub _deepcopy {
@@ -784,7 +784,7 @@
     }
 
     $self->_add_error(
-        sprintf("Line %d in file %s is mal-formed:\n\t\%s",
+        sprintf("Line %d in file %s is malformed:\n\t\%s",
             $self->_read_line_num(), $self->GetFileName(), $line
         )
     );
@@ -831,16 +831,16 @@
     $self->{EOT}    = {};
     $self->{mysects} = []; # A pair of hashes to remember which params are loaded
     $self->{myparms} = {}; # or set using the API vs. imported - useful for
-    $self->{peCMT}  = {};  # this will store trailing comments at the end of single-lined params
-    $self->{e}      = {};  # If a section is already exists
-    $self->{mye}    = {};  # If a section is already exists
+    $self->{peCMT}  = {};  # this will store trailing comments at the end of single-line params
+    $self->{e}      = {};  # If a section already exists
+    $self->{mye}    = {};  # If a section already exists
     # import shadowing, see below, and WriteConfig($fn, -delta=>1)
 
     if( defined $self->{imported} ) {
         # Run up the import tree to the top, then reload coming
         # back down, maintaining the imported file names and our
         # file name.
-        # This is only needed on a re-load though
+        # This is only needed on a reload though
         $self->{imported}->ReadConfig() unless ($self->{firstload});
 
         foreach my $field (qw(sects parms group v sCMT pCMT EOT e)) {
@@ -1812,7 +1812,7 @@
 # These methods allow you to tie a hash to the
 # Config::IniFiles object. Note that, when tied, the
 # user wants to look at thinks like $ini{sec}{parm}, but the
-# TIEHASH only provides one level of hash interace, so the
+# TIEHASH only provides one level of hash interface, so the
 # root object gets asked for a $ini{sec}, which this
 # implements. To further tie the {parm} hash, the internal
 # class Config::IniFiles::_section, is provided, below.
@@ -1964,9 +1964,9 @@
 # Args: $thing
 #   $thing  An input source
 #
-# Description: Takes an input source of a filehandle,
+# Description: Takes an input source - a filehandle,
 # filehandle glob, reference to a filehandle glob, IO::File
-# object or scalar filename and returns a file handle to
+# object or scalar filename - and returns a file handle to
 # read from it with.
 # ----------------------------------------------------------
 # Date      Modification                              Author
@@ -2015,7 +2015,7 @@
 # This package is used to provide a single-level TIEHASH
 # interface to the sections in the IniFile. When tied, the
 # user wants to look at thinks like $ini{sec}{parm}, but the
-# TIEHASH only provides one level of hash interace, so the
+# TIEHASH only provides one level of hash interface, so the
 # root object gets asked for a $ini{sec} and must return a
 # has reference that accurately covers the '{parm}' part.
 #
@@ -2176,7 +2176,7 @@
 # Sub: Config::IniFiles::_section::NEXTKEY
 #
 # Args: $last
-#   $last   The last key accessed by the interator
+#   $last   The last key accessed by the iterator
 #
 # Description: Returns the next key in line
 # ----------------------------------------------------------
@@ -2418,7 +2418,7 @@
    name=Joseph
 
 Note that Config::IniFiles will also omit the fallback section header when
-outputing such configuration.
+outputting such configuration.
 
 =item I<-nocase> 0|1
 
@@ -2526,7 +2526,7 @@
  value2
  EOT
 
-As the later might not be compatible with all applications.
+As the latter might not be compatible with all applications.
 
 =item I<-handle_trailing_comment> 0|1
 
@@ -2590,7 +2590,7 @@
 
 =head2 newval($section, $parameter, $value [, $value2, ...])
 
-Assignes a new value, C<$value> (or set of values) to the
+Assigns a new value, C<$value> (or set of values) to the
 parameter C<$parameter> in section C<$section> in the configuration
 file.
 
@@ -2634,7 +2634,7 @@
 
 =head2 RenameSection ( $old_section_name, $new_section_name, $include_groupmembers)
 
-Renames a section if it does not already exists optionally including groupmembers
+Renames a section if it does not already exist optionally including groupmembers
 
 =head2 CopySection ( $old_section_name, $new_section_name, $include_groupmembers)
 
@@ -2740,7 +2740,7 @@
 
 Writes OutputConfig to STDOUT. Use select() to redirect STDOUT to
 the output target before calling this function. Optional argument
-should be set to 1 if writing only delta. Also see OutputConfigToFileHandle
+should be set to 1 if writing only a delta. Also see OutputConfigToFileHandle
 
 =head2 SetSectionComment($section, @comment)
 
@@ -2811,7 +2811,7 @@
 
 An accessor method to read the trailing comment after the parameter.
 The trailing comment will be returned if there is one. A null string
-will be returned if the parameter exists but no comment for it.
+will be returned if the parameter exists but there is no comment for it.
 otherwise, L<undef> will be returned.
 
 =head2 Delete
@@ -2860,7 +2860,7 @@
 
 Sets the value of C<$parameter> in C<$section> to C<$value>.
 
-To set a multiline or multiv-alue parameter just assign an
+To set a multiline or multi-value parameter just assign an
 array reference to the hash entry, like this:
 
  $ini{$section}{$parameter} = [$value1, $value2, ...];
--- a/t/05hash.t
+++ b/t/05hash.t
@@ -25,7 +25,7 @@
     (tie %ini, 'Config::IniFiles',
     ( -file => t_file("test.ini"), -default => 'test1', -nocase => 1 )
     ),
-    "Tie to test.ini was succesful."
+    "Tie to test.ini was successful."
 );
 
 tied(%ini)->SetFileName(t_file("test05.ini"));
@@ -138,7 +138,7 @@
 is ($value, 'value4', "Store new section in hash");
 
 # Test 16
-# Writing 2 line multilvalue and returing it
+# Writing 2 line multivalue and returning it
 $ini{newsect} = {};
 $ini{test1}{multi_2} = ['line 1', 'line 2'];
 tied(%ini)->RewriteConfig;
@@ -146,7 +146,7 @@
 @value = @{$ini{test1}{multi_2}};
 # TEST
 is_deeply ( \@value, ['line 1', 'line 2'],
-    "Writing 2 line multilvalue and returing it"
+    "Writing 2 line multivalue and returning it"
 );
 
 # Test 17
--- a/t/25line-endings.t
+++ b/t/25line-endings.t
@@ -24,7 +24,7 @@
     # being pedantic, we don't take line breaks from this or an external file for granted
     my $sample_ini =
     "<eol>
-    <sol># this is a sample file for testing the proper detection of line endings in Config::Inifiles<eol>
+    <sol># this is a sample file for testing the proper detection of line endings in Config::IniFiles<eol>
     <sol><eol>
     <sol>[single values]<eol>
     <sol>firstval = first value<eol>
@@ -32,7 +32,7 @@
     <sol><eol>
     <sol># in v2.52 on linux multi values with crlf lines are failing<eol>
     <sol>[multi value]<eol>
-    <sol>Pathes=<<EOT<eol>
+    <sol>Paths=<<EOT<eol>
     <sol>path1<eol>
     <sol>path2<eol>
     <sol>EOT<eol>
@@ -69,7 +69,7 @@
             "Reading a single value from a '$lf_print'-separated file"
         );
 
-        my @vals = $cfg->val("multi value", "Pathes");
+        my @vals = $cfg->val("multi value", "Paths");
 
         # TEST
         is_deeply(
--- a/t/cmt.ini
+++ b/t/cmt.ini
@@ -10,7 +10,7 @@
 @
 [Library]
 work              = $WORKAREA/project_lib/debobj.lib++
-synopsys          = $VHDL_PACKAGES_DEB/synopsys/$DEBOBJ_VERSION
+synopsis          = $VHDL_PACKAGES_DEB/synopsis/$DEBOBJ_VERSION
 ieee              = $VHDL_PACKAGES_DEB/IEEE/$DEBOBJ_VERSION
 std_developerskit = $VHDL_PACKAGES_DEB/sdk/std_developerskit.lib/$DEBOBJ_VERSION
 gtech             = $VHDL_PACKAGES_DEB/gtech/$DEBOBJ_VERSION
