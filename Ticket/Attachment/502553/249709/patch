diff --git a/lib/Net/Amazon/S3/Bucket.pm b/lib/Net/Amazon/S3/Bucket.pm
index a075732..26319f4 100644
--- a/lib/Net/Amazon/S3/Bucket.pm
+++ b/lib/Net/Amazon/S3/Bucket.pm
@@ -5,6 +5,7 @@ use Carp;
 use File::stat;
 use IO::File;
 use base qw(Class::Accessor::Fast);
+use Net::Amazon::S3::ACP;
 __PACKAGE__->mk_accessors(qw(bucket creation_date account));
 
 =head1 NAME
@@ -427,6 +428,36 @@ sub get_acl {
     return $response->content;
 }
 
+=head2 get_acp
+
+Get the Access Control Policy associated to the resource. The
+ACP is a Net::Amazon::S3::ACP object that is the parsed
+representation of a XML ACL (see L</get_acl>).
+
+Takes one optional positional parameter
+
+=over
+
+=item key (optional)
+
+If no key is specified, it returns the acp for the bucket.
+
+=back
+
+Returns an ACP as a Net::Amazon::S3::ACP object.
+
+=cut
+
+sub get_acp {
+    my $self = shift;
+    return Net::Amazon::S3::ACP->new(
+        {
+            account => scalar $self->account(),
+            xml => scalar $self->get_acl(@_),
+        }
+    );
+}
+
 =head2 set_acl
 
 Takes a configuration hash_ref containing:
@@ -496,6 +527,39 @@ sub set_acl {
 
 }
 
+=head2 set_acp
+
+Get the Access Control Policy associated to the resource. The
+ACP is a Net::Amazon::S3::ACP object that is the parsed
+representation of a XML ACL (see L</get_acl> and L</set_acl>).
+
+Takes a configuration hash_ref containing:
+
+=over
+
+=item acp
+
+A Net::Amazon::S3::ACP object containing the full Access Control Policy
+to be set on the resource
+
+=item key (optional)
+
+If the key is not set, it will apply the acp to the bucket.
+
+=back
+
+Returns a boolean.
+
+=cut
+
+sub set_acp {
+   my ( $self, $input ) = @_;
+   my %config;
+   $config{key} = $input->{key} if exists $input->{key};
+   $config{acl_xml} = $input->{acp}->stringify() if exists $input->{acp};
+   return $self->set_acl(\%config);
+}
+
 =head2 get_location_constraint
 
 Retrieves the location constraint set when the bucket was created. Returns a
