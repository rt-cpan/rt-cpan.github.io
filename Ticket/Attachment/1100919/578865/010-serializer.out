1..225
# Running under perl version 5.017001 for linux
# Current time local: Thu Jul 19 15:37:41 2012
# Current time GMT:   Thu Jul 19 13:37:41 2012
# Using Test.pm version 1.25_02
# SOAP::XMLSchema1999::Serializer
#   as_anyURI
ok 1
ok 2
ok 3
#   as_string
ok 4
ok 5
ok 6
#   as_float
ok 7
ok 8
ok 9
#   as_double
ok 10
ok 11
ok 12
#   as_decimal
ok 13
ok 14
ok 15
#   as_timeDuration
ok 16
ok 17
ok 18
#   as_recurringDuration
ok 19
ok 20
ok 21
#   as_uriReference
ok 22
ok 23
ok 24
#   as_integer
ok 25
ok 26
ok 27
#   as_nonPositiveInteger
ok 28
ok 29
ok 30
#   as_negativeInteger
ok 31
ok 32
ok 33
#   as_long
ok 34
ok 35
ok 36
#   as_int
ok 37
ok 38
ok 39
#   as_short
ok 40
ok 41
ok 42
#   as_byte
ok 43
ok 44
ok 45
#   as_nonNegativeInteger
ok 46
ok 47
ok 48
#   as_unsignedLong
ok 49
ok 50
ok 51
#   as_unsignedInt
ok 52
ok 53
ok 54
#   as_unsignedShort
ok 55
ok 56
ok 57
#   as_unsignedByte
ok 58
ok 59
ok 60
#   as_positiveInteger
ok 61
ok 62
ok 63
#   as_timeInstant
ok 64
ok 65
ok 66
#   as_time
ok 67
ok 68
ok 69
#   as_timePeriod
ok 70
ok 71
ok 72
#   as_date
ok 73
ok 74
ok 75
#   as_month
ok 76
ok 77
ok 78
#   as_year
ok 79
ok 80
ok 81
#   as_century
ok 82
ok 83
ok 84
#   as_recurringDate
ok 85
ok 86
ok 87
#   as_recurringDay
ok 88
ok 89
ok 90
#   as_language
ok 91
ok 92
ok 93
# SOAP::XMLSchema2001::Serializer
#   as_anyType
ok 94
ok 95
ok 96
#   as_anyURI
ok 97
ok 98
ok 99
#   as_string
ok 100
ok 101
ok 102
#   as_float
ok 103
ok 104
ok 105
#   as_double
ok 106
ok 107
ok 108
#   as_decimal
ok 109
ok 110
ok 111
#   as_dateTime
ok 112
ok 113
ok 114
#   as_timePeriod
ok 115
ok 116
ok 117
#   as_gMonth
ok 118
ok 119
ok 120
#   as_gYearMonth
ok 121
ok 122
ok 123
#   as_gYear
ok 124
ok 125
ok 126
#   as_century
ok 127
ok 128
ok 129
#   as_gMonthDay
ok 130
ok 131
ok 132
#   as_gDay
ok 133
ok 134
ok 135
#   as_duration
ok 136
ok 137
ok 138
#   as_recurringDuration
ok 139
ok 140
ok 141
#   as_anyURI
ok 142
ok 143
ok 144
#   as_language
ok 145
ok 146
ok 147
#   as_integer
ok 148
ok 149
ok 150
#   as_nonPositiveInteger
ok 151
ok 152
ok 153
#   as_negativeInteger
ok 154
ok 155
ok 156
#   as_long
ok 157
ok 158
ok 159
#   as_int
ok 160
ok 161
ok 162
#   as_short
ok 163
ok 164
ok 165
#   as_byte
ok 166
ok 167
ok 168
#   as_nonNegativeInteger
ok 169
ok 170
ok 171
#   as_unsignedLong
ok 172
ok 173
ok 174
#   as_unsignedInt
ok 175
ok 176
ok 177
#   as_unsignedShort
ok 178
ok 179
ok 180
#   as_unsignedByte
ok 181
ok 182
ok 183
#   as_positiveInteger
ok 184
ok 185
ok 186
#   as_date
ok 187
ok 188
ok 189
#   as_time
ok 190
ok 191
ok 192
#   as_dateTime
ok 193
ok 194
ok 195
ok 196
ok 197
ok 198
ok 199
ok 200
ok 201
ok 202
ok 203
ok 204
# encoding/decoding Euro symbol in base64
ok 205
ok 206
ok 207
ok 208
ok 209
ok 210
# autotype tests
# false => xsd:boolean (result: xsd:boolean)
ok 211
# PT01S => xsd:duration (result: xsd:duration)
ok 212
# P => xsd:string (result: xsd:string)
ok 213
# 5999927619709920 => xsd:long (result: xsd:long)
ok 214
# Hello World => xsd:string (result: xsd:string)
ok 215
# aflse => xsd:string (result: xsd:string)
ok 216
# rtue => xsd:string (result: xsd:string)
ok 217
# true => xsd:boolean (result: xsd:boolean)
ok 218
# -2147483648 => xsd:int (result: xsd:int)
ok 219
# 012345 => xsd:string (result: xsd:string)
ok 220
# 2147483648 => xsd:long (result: xsd:int)
not ok 221
# Failed test 221 in t/010-serializer.t at line 144 fail #11
#  t/010-serializer.t line 144 is:     ok ( $result->[1]->{'xsi:type'} eq $type );
# 2147483647 => xsd:int (result: xsd:int)
ok 222
# PT => xsd:string (result: xsd:string)
ok 223
# 12345 => xsd:int (result: xsd:int)
ok 224
# http://example.org => xsd:anyURI (result: xsd:anyURI)
ok 225
