t/Tests................1..2
# 
# My::Test->Tests_attribute_default_number_of_tests
ok 1 - Tests attribute default number of tests
# 
# My::Test->Tests_attribute_set_number_of_tests
ok 2 - Tests attribute set number of tests
ok
t/_new.................1..6
ok 1 - use Test::Class;
ok 2 - The object isa Test::Class
ok 3 - key/value set
ok 4 - The object isa Test::Class
ok 5 - prototype key/value set
ok 6 - new key/value set
ok
t/bailout..............1..2
ok 1 - bailout works
ok 2 - exit value okay
ok
t/builder..............1..1
ok 1 - builder
ok
t/compile..............1..2
ok 1 - cannot test anon sub
ok 2 - bad number detected
ok
t/current_method.......1..4
# 
# Local::Test->test
ok 1 - current_method in setup
ok 2 - current_method in method
ok 3 - current_method in teardown
ok 4 - current_test outside runtests
ok
t/die_before_plan......1..4
# Running under perl version 5.008004 for linux
# Current time local: Sun Oct 23 22:07:08 2005
# Current time GMT:   Sun Oct 23 20:07:08 2005
# Using Test.pm version 1.24
ok 1
ok 2
not ok 3
# Test 3 got: '#   Failed test 'setup (for test method 'test') died (died before plan set)'' (t/die_before_plan.t at line 42 fail #3)
#   Expected: '#     Failed test (t/die_before_plan.t at line 32)'
#  t/die_before_plan.t line 42 is: 	ok($actual, $expected);
not ok 4
# Test 4 got: '#   in t/die_before_plan.t at line 32.' (t/die_before_plan.t at line 42 fail #4)
#   Expected: 'ok 2 - test just here to get setup method run'
Use of uninitialized value in scalar chomp at t/die_before_plan.t line 40, <DATA> line 4.
Use of uninitialized value in substitution (s///) at t/die_before_plan.t line 41, <DATA> line 4.
not ok 5
# Test 5 got: 'ok 2 - test just here to get setup method run' (t/die_before_plan.t at line 42 fail #5)
#   Expected: <UNDEF>
FAILED tests 3-5
	Failed 3/4 tests, 25.00% okay
t/documented...........1..0 # Skip Test::Pod::Coverage required
skipped
        all skipped: Test::Pod::Coverage required
t/expected_tests.......1..7
ok 1 - all set
ok 2 - no_plan setup
ok 3 - no_plan test
ok 4 - no_plan teardown
ok 5 - expected_test_of
ok 6 - no_plan expected_test_of
ok 7 - bad test class
ok
t/fail1................1..2
ok 1 - FAIL_ALL with plan
ok 2 - exit value okay
ok
t/fail2................1..9
# Running under perl version 5.008004 for linux
# Current time local: Sun Oct 23 22:07:08 2005
# Current time GMT:   Sun Oct 23 20:07:08 2005
# Using Test.pm version 1.24
ok 1
ok 2
not ok 3
# Test 3 got: '#   Failed test 'The object isa Object'' (t/fail2.t at line 47 fail #3)
#   Expected: '#     Failed test (t/fail2.t at line 22)'
#  t/fail2.t line 47 is: 		ok($actual, $expected);
not ok 4
# Test 4 got: '#   in t/fail2.t at line 22.' (t/fail2.t at line 47 fail #4)
#   Expected: '#     The object isn't defined'
not ok 5
# Test 5 got: '#     The object isn't defined' (t/fail2.t at line 47 fail #5)
#   Expected: 'not ok 2 - cannot create Objects'
not ok 6
# Test 6 got: 'not ok 2 - cannot create Objects' (t/fail2.t at line 47 fail #6)
#   Expected: '#     Failed test (t/fail2.t at line 22)'
not ok 7
# Test 7 got: '#   Failed test 'cannot create Objects'' (t/fail2.t at line 47 fail #7)
#   Expected: 'not ok 3 - cannot create Objects'
not ok 8
# Test 8 got: '#   in t/fail2.t at line 22.' (t/fail2.t at line 47 fail #8)
#   Expected: '#     Failed test (t/fail2.t at line 22)'
Use of uninitialized value in scalar chomp at t/fail2.t line 45, <DATA> line 8.
Use of uninitialized value in substitution (s///) at t/fail2.t line 46, <DATA> line 8.
not ok 9
# Test 9 got: 'not ok 3 - cannot create Objects' (t/fail2.t at line 47 fail #9)
#   Expected: <UNDEF>
Use of uninitialized value in scalar chomp at t/fail2.t line 45, <DATA> line 8.
Use of uninitialized value in substitution (s///) at t/fail2.t line 46, <DATA> line 8.
not ok 10
# Test 10 got: '#   Failed test 'cannot create Objects'' (t/fail2.t at line 47 fail #10)
#    Expected: <UNDEF>
Use of uninitialized value in scalar chomp at t/fail2.t line 45, <DATA> line 8.
Use of uninitialized value in substitution (s///) at t/fail2.t line 46, <DATA> line 8.
not ok 11
# Test 11 got: '#   in t/fail2.t at line 22.' (t/fail2.t at line 47 fail #11)
#    Expected: <UNDEF>
ok 12
FAILED tests 3-12
	Failed 10/9 tests, -11.11% okay
t/fail3................ok 1 - FAIL_ALL with no plan
ok 2 - exit value okay
1..2
ok
t/header...............ok 1 - no duplicate headers
1..1
ok
t/late_header..........# 
# Local::Test->test
1..2
ok 1 - test number set
ok 2 - builder expected tests set
ok
t/methodinfo...........ok 1 - use Test::Class::MethodInfo;
ok 2 - The object isa Test::Class::MethodInfo
ok 3 - method type is test by default
ok 4 - test methods default to 1 test
1..4
ok
t/named_test...........ok 1 - test names set to method name by default
1..1
ok
t/num_method_tests.....1..19
ok 1 - fixed num tests
ok 2 - no_plan tests
ok 3 - cannot use non-method
# 
# Bar->no_plan_test
# 
# Bar->no_plan_test2
# 
# Bar->two_tests
ok 4 - cannot update illegal value
ok 5 - updated legal value
ok 6 - update worked
ok 7 - updated extended
ok 8 - update worked
ok 9 - extended method okay
ok 10 - class expected_tests
ok 11 - object expected_tests
ok 12 - num_method_tests dies outside test class
ok 13 - just passing
ok 14 - no_plan_test just passing 1
ok 15 - no_plan_test just passing 2
ok 16 - no_plan_test2 just passing 1
ok 17 - no_plan_test2 just passing 2
ok 18 - two_tests just passing 1
ok 19 - two_tests just passing 2
ok
t/num_tests............1..4
# 
# Foo->test_num_tests
ok 1 - num_tests access okay
ok 2 - num_tests set okay
# 
# Foo->test_num_tests
ok 3 - num_tests access okay
ok 4 - num_tests set okay
ok
t/override.............1..1
ok 1 - cannot override a public method with a test method
ok
t/pod..................1..0 # Skip Test::Pod 1.00 required for testing POD
skipped
        all skipped: Test::Pod 1.00 required for testing POD
t/run_all_tests........1..5
ok 1 - Test::Class->SKIP_CLASS default
ok 2 - Base::Test->SKIP_CLASS overridden
ok 3 - A::Test->SKIP_CLASS default
# 
# A::Test->setup
ok 4 - non skipping test class run as expected
ok 5 - runtests skipped classes with SKIP_CLASS set
ok
t/runtests.............1..18
# 
# Bar->test1
ok 1 - initialise2: methods ran in order
ok 2 - test1: initialise1 ran once
ok 3 - test1: initialise2 ran once
ok 4 - test1: first test running
ok 5 - test1: teardown not run
ok 6 - teardown1: teardown run for every test
ok 7 - teardown1: teardown run for every initialise1
ok 8 - teardown1: teardown run for every initialise2
ok 9 - teardown1: setup run for every test
# 
# Bar->test2
ok 10 - initialise2: methods ran in order
ok 11 - test2: initialise1 ran twice
ok 12 - test2: initialise2 ran twice
ok 13 - test2: second test running
ok 14 - test2: teardown ran once
ok 15 - teardown1: teardown run for every test
ok 16 - teardown1: teardown run for every initialise1
ok 17 - teardown1: teardown run for every initialise2
ok 18 - teardown1: setup run for every test
ok
t/runtests_die.........1..1
ok 1 - early die handled
ok
t/runtests_extra.......1..1
ok 1 - extra test detected
ok
t/runtests_noplan......# 
# Foo->set_tests
ok 1 - this should pass
# 
# Foo->undef_tests
ok 2 - runtime test 1
ok 3 - runtime test 2
ok 4 - expected number of tests ran
1..4
ok
t/runtests_of..........# 
# Tests1->test
1..3
# 
# Tests2->test
ok 1 - Tests1 test
ok 2 - Tests2 test
ok 3 - correct number of tests
ok
t/runtests_result......1..4
ok 1 - single failure ran okay
ok 2 - failure detected
ok 3 - a successful test
ok 4 - success detected
ok
t/runtests_return......1..1
ok 1 - early return handled
ok
t/runtests_trailing....1..1
ok 1 - trailing expection detected
ok
t/skip1................1..1
ok 1 - SKIP_ALL called skip_all
ok
t/skip2................1..6
# Running under perl version 5.008004 for linux
# Current time local: Sun Oct 23 22:07:10 2005
# Current time GMT:   Sun Oct 23 20:07:10 2005
# Using Test.pm version 1.24
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok
t/skip_class_reason....1..3
# Running under perl version 5.008004 for linux
# Current time local: Sun Oct 23 22:07:10 2005
# Current time GMT:   Sun Oct 23 20:07:10 2005
# Using Test.pm version 1.24
ok 1
ok 2
ok 3
ok
t/spaces...............ok 1 - can have spaces around attributes
1..1
ok
t/startup..............1..15
ok 1 - called start1
ok 2 - called start2
# 
# Foo::Test->test1
ok 3 - called setup1
ok 4 - called setup2
ok 5 - called test1
ok 6 - called tear1
ok 7 - called tear2
# 
# Foo::Test->test2
ok 8 - called setup1
ok 9 - called setup2
ok 10 - called test2
ok 11 - called tear1
ok 12 - called tear2
ok 13 - called end1
ok 14 - called end2
ok 15 - all expected methods ran
ok
t/startup_that_dies....1..1
ok 1 - exception in startup method causes all tests to be skipped
ok
t/test_classes.........1..1
ok 1 - _test_classes deals with undef values
ok
t/test_verbose.........1..1
ok 1 - TEST_VERBOSE outputs method diagnostic
ok
t/todo.................1..2
ok 1 - todo tests work
ok 2 - todo_test should run 1 test
ok
Failed Test         Stat Wstat Total Fail  Failed  List of Failed
-------------------------------------------------------------------------------
t/die_before_plan.t                4    4 100.00%  3-5
t/fail2.t                          9   12 133.33%  3-12
2 tests skipped.
Failed 2/38 test scripts, 94.74% okay. 8/142 subtests failed, 94.37% okay.
