2015-01-28-future.t .. 
    # Subtest: ->then($code)
    ok 1 - leaf is ready
    not ok 2 - ->then is ready
    
    #   Failed test '->then is ready'
    #   at 2015-01-28-future.t line 12.
    not ok 3 - ->then is cancelled when dependent is cancelled
    
    #   Failed test '->then is cancelled when dependent is cancelled'
    #   at 2015-01-28-future.t line 13.
    1..3
    # Looks like you failed 2 tests of 3.
not ok 1 - ->then($code)

#   Failed test '->then($code)'
#   at 2015-01-28-future.t line 14.
    # Subtest: ->then($code, $code)
    ok 1 - leaf is ready
    not ok 2 - ->then is ready
    
    #   Failed test '->then is ready'
    #   at 2015-01-28-future.t line 21.
    not ok 3 - ->then is cancelled when dependent is cancelled
    
    #   Failed test '->then is cancelled when dependent is cancelled'
    #   at 2015-01-28-future.t line 22.
    1..3
    # Looks like you failed 2 tests of 3.
not ok 2 - ->then($code, $code)

#   Failed test '->then($code, $code)'
#   at 2015-01-28-future.t line 23.
    # Subtest: ->then_with_f($code)
    ok 1 - leaf is ready
    not ok 2 - ->then_with_f is ready
    
    #   Failed test '->then_with_f is ready'
    #   at 2015-01-28-future.t line 30.
    not ok 3 - ->then_with_f is cancelled when dependent is cancelled
    
    #   Failed test '->then_with_f is cancelled when dependent is cancelled'
    #   at 2015-01-28-future.t line 31.
    1..3
    # Looks like you failed 2 tests of 3.
not ok 3 - ->then_with_f($code)

#   Failed test '->then_with_f($code)'
#   at 2015-01-28-future.t line 32.
    # Subtest: ->then_done($code)
    ok 1 - leaf is ready
    not ok 2 - ->then_done is ready
    
    #   Failed test '->then_done is ready'
    #   at 2015-01-28-future.t line 39.
    not ok 3 - ->then_done is cancelled when dependent is cancelled
    
    #   Failed test '->then_done is cancelled when dependent is cancelled'
    #   at 2015-01-28-future.t line 40.
    1..3
    # Looks like you failed 2 tests of 3.
not ok 4 - ->then_done($code)

#   Failed test '->then_done($code)'
#   at 2015-01-28-future.t line 41.
    # Subtest: ->then_fail($code)
    ok 1 - leaf is ready
    not ok 2 - ->then_fail is ready
    
    #   Failed test '->then_fail is ready'
    #   at 2015-01-28-future.t line 48.
    not ok 3 - ->then_fail is cancelled when dependent is cancelled
    
    #   Failed test '->then_fail is cancelled when dependent is cancelled'
    #   at 2015-01-28-future.t line 49.
    1..3
    # Looks like you failed 2 tests of 3.
not ok 5 - ->then_fail($code)

#   Failed test '->then_fail($code)'
#   at 2015-01-28-future.t line 50.
    # Subtest: ->else
    ok 1 - leaf is ready
    not ok 2 - ->else is ready
    
    #   Failed test '->else is ready'
    #   at 2015-01-28-future.t line 57.
    not ok 3 - ->else is cancelled when dependent is cancelled
    
    #   Failed test '->else is cancelled when dependent is cancelled'
    #   at 2015-01-28-future.t line 58.
    1..3
    # Looks like you failed 2 tests of 3.
not ok 6 - ->else

#   Failed test '->else'
#   at 2015-01-28-future.t line 59.
    # Subtest: ->else_with_f
    ok 1 - leaf is ready
    not ok 2 - ->else_with_f is ready
    
    #   Failed test '->else_with_f is ready'
    #   at 2015-01-28-future.t line 66.
    not ok 3 - ->else_with_f is cancelled when dependent is cancelled
    
    #   Failed test '->else_with_f is cancelled when dependent is cancelled'
    #   at 2015-01-28-future.t line 67.
    1..3
    # Looks like you failed 2 tests of 3.
not ok 7 - ->else_with_f

#   Failed test '->else_with_f'
#   at 2015-01-28-future.t line 68.
    # Subtest: ->transform
    ok 1 - leaf is ready
    not ok 2 - ->transform is ready
    
    #   Failed test '->transform is ready'
    #   at 2015-01-28-future.t line 78.
    not ok 3 - ->transform is cancelled when dependent is cancelled
    
    #   Failed test '->transform is cancelled when dependent is cancelled'
    #   at 2015-01-28-future.t line 79.
    1..3
    # Looks like you failed 2 tests of 3.
not ok 8 - ->transform

#   Failed test '->transform'
#   at 2015-01-28-future.t line 80.
    # Subtest: ->without_cancel($code, $code)
Future=HASH(0x904f664) ("leaf") was cancelled at 2015-01-28-future.t line 85.
    # Child (->without_cancel($code, $code)) exited without calling finalize()
not ok 9 - ->without_cancel($code, $code)

#   Failed test '->without_cancel($code, $code)'
#   at /home/tom/perl5/perlbrew/perls/perl-5.20.0/lib/site_perl/5.20.0/Test/Builder.pm line 279.
# Tests were run but no plan was declared and done_testing() was not seen.
# Looks like your test exited with 29 just after 9.
Dubious, test returned 29 (wstat 7424, 0x1d00)
Failed 9/9 subtests 

Test Summary Report
-------------------
2015-01-28-future.t (Wstat: 7424 Tests: 9 Failed: 9)
  Failed tests:  1-9
  Non-zero exit status: 29
  Parse errors: No plan found in TAP output
Files=1, Tests=9,  1 wallclock secs ( 0.15 usr  0.01 sys +  0.20 cusr  0.01 csys =  0.37 CPU)
Result: FAIL
