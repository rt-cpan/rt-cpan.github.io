--- a/lib/Sys/SigAction.pm
+++ b/lib/Sys/SigAction.pm
@@ -313,7 +313,7 @@
 accomplished by having perl note that a signal has arrived, but deferring
 the execution of the signal handler until such time as it is safe to do
 so.  Unfortunately these changes can break some existing scripts, if they
-depended on a system routine being interupted by the signal's arrival.
+depended on a system routine being interrupted by the signal's arrival.
 The perl 5.8.0 implementation was modified further in version 5.8.2.
 
 From the perl 5.8.2 B<perlvar> man page:
@@ -337,7 +337,7 @@
 This breaks timeout logic for DBD-Oracle which works with
 earlier versions of perl.  This can be particularly vexing, when, for instance,
 the host on which a database resides is not available:  C<DBI-E<gt>connect()>
-hangs for minutes before returning an error (and cannot even be interupted
+hangs for minutes before returning an error (and cannot even be interrupted
 with control-C, even when the intended timeout is only seconds). 
 This is because SIGINT appears to be deferred as well.  The
 result is that it is impossible to implement open timeouts with code
@@ -488,7 +488,7 @@
 timer resolution of 0.000001 seconds.  If Time:HiRes is not available then factional
 second values less than 1.0 are tranparently converted to 1.
 
-If the alarm goes off the code will be interupted.  The alarm is
+If the alarm goes off the code will be interrupted.  The alarm is
 canceled if the code returns before the alarm is fired.  The routine
 returns true if the code being executed timed out. (was interrupted).
 Exceptions thrown by the code executed are propagated out.
