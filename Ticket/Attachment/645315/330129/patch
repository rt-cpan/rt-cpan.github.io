diff -ruN Scalar-List-Utils-1.21.old/lib/Scalar/Util/PP.pm Scalar-List-Utils-1.21/lib/Scalar/Util/PP.pm
--- Scalar-List-Utils-1.21.old/lib/Scalar/Util/PP.pm	2009-05-18 11:28:43.000000000 -0400
+++ Scalar-List-Utils-1.21/lib/Scalar/Util/PP.pm	2009-08-08 21:03:53.000000000 -0400
@@ -98,8 +98,8 @@
     require overload;
     return overload::Overloaded($_) ? defined(0 + $_) : 0;
   }
-  return 1 if (/^[+-]?\d+$/); # is a +/- integer
-  return 1 if (/^([+-]?)(?=\d|\.\d)\d*(\.\d*)?([Ee]([+-]?\d+))?$/); # a C float
+  return 1 if (/^[+-]?[0-9]+$/); # is a +/- integer
+  return 1 if (/^([+-]?)(?=[0-9]|\.[0-9])[0-9]*(\.[0-9]*)?([Ee]([+-]?[0-9]+))?$/); # a C float
   return 1 if ($] >= 5.008 and /^(Inf(inity)?|NaN)$/i) or ($] >= 5.006001 and /^Inf$/i);
 
   0;
diff -ruN Scalar-List-Utils-1.21.old/t/lln.t Scalar-List-Utils-1.21/t/lln.t
--- Scalar-List-Utils-1.21.old/t/lln.t	2009-05-13 17:59:43.000000000 -0400
+++ Scalar-List-Utils-1.21/t/lln.t	2009-08-08 23:09:39.000000000 -0400
@@ -14,7 +14,7 @@
 }
 
 use strict;
-use Test::More tests => 18;
+use Test::More tests => 19;
 use Scalar::Util qw(looks_like_number);
 
 foreach my $num (qw(1 -1 +1 1.0 +1.0 -1.0 -1.0e-12)) {
@@ -28,6 +28,7 @@
 is(!!looks_like_number(undef),	    '',           	'undef');
 is(!!looks_like_number({}),	    '',			'HASH Ref');
 is(!!looks_like_number([]),	    '',			'ARRAY Ref');
+is(!!looks_like_number("\x{1815}"),	    '',			'MONGOLIAN DIGIT FIVE');
 
 use Math::BigInt;
 my $bi = Math::BigInt->new('1234567890');
