From 286692004ce9063af1b1bdb33475b9714cb8fc37 Mon Sep 17 00:00:00 2001
From: Max Maischein <corion@corion.net>
Date: Sun, 19 Jul 2015 19:21:47 +0200
Subject: [PATCH 3/5] Output the command line as diagnostics while running the
 tests

This one also pulls in the (core) Test::More as a prerequisite
---
 Makefile.PL |  1 +
 test.pl     | 17 +++++++++++++----
 2 files changed, 14 insertions(+), 4 deletions(-)

diff --git a/Makefile.PL b/Makefile.PL
index 6d576f9..3bca3a9 100644
--- a/Makefile.PL
+++ b/Makefile.PL
@@ -18,6 +18,7 @@ WriteMakefile(
       ABSTRACT       => $ABSTRACT,
       PREREQ_PM      => { 'Scalar::Util' => 0,
                           'File::Path' => 0,
+                          'Test::More' => 0,
                         },
       PM             => { 'Rsync.pm'  => '$(INST_LIB)/File/Rsync.pm' },
       dist           => { COMPRESS => 'gzip', SUFFIX => 'gz' },
diff --git a/test.pl b/test.pl
index 6a6f1e1..03d0086 100644
--- a/test.pl
+++ b/test.pl
@@ -6,10 +6,11 @@ END { print("not ok 1\n"),exit 1 unless $loaded }
 use File::Rsync;
 use File::Path 'rmtree';
 use strict;
+use Test::More;
 use vars qw($loaded $fail);
 $loaded=1;
 $fail=0;
-warn "\nNOTE: expect 'badoption' message for test 7\n\n";
+diag "NOTE: expect 'badoption' message for test 7";
 print "ok 1\n";
 
 unless (whence('rsync')) {
@@ -23,11 +24,14 @@ print "ok 2\n";
 rmtree('destdir');
 # all in one
 {
-   my $rs=File::Rsync->new(archive => 1,
+   my $rs=File::Rsync->new(archive => 1, verbose => 1,
          src => 'blib', dest => 'destdir');
    unless ($rs) {
       print "not ";
    } else {
+      my $cmd = $rs->getcmd(archive => 1, verbose => 1,
+         src => 'blib', dest => 'destdir');
+      diag "Running [@$cmd]";
       my $ret=$rs->exec;
       ($ret == 1 && $rs->status == 0 && ! $rs->err) || ($fail++,print "not ");
    }
@@ -42,6 +46,8 @@ rmtree('destdir');
       $fail++;
       print "not ";
    } else {
+      my $cmd = $rs->getcmd(src => 'blib', dest => 'destdir');
+      diag "Running [@$cmd]";
       my $ret=$rs->exec(src => 'blib', dest => 'destdir');
       ($ret == 1 && $rs->status == 0 && ! $rs->err) || ($fail++,print "not ");
    }
@@ -56,7 +62,8 @@ rmtree('destdir');
       $fail++;
       print "not ";
    } else {
-      no strict;
+      my $cmd = $rs->getcmd(src => 'some-non-existant-path-name', dest => 'destdir');
+      diag "Running [@$cmd]";
       my $ret=$rs->exec(src => 'some-non-existant-path-name', dest => 'destdir');
          (@{$rs->err} >= 1
          && $rs->err->[0] =~ /\bNo such file or directory\b/i)
@@ -73,7 +80,9 @@ rmtree('destdir');
       $fail++;
       print "not ";
    } else {
-      no strict;
+      my $cmd = $rs->getcmd(src => 'blib', dest => 'destdir/subdir');
+      diag "Running [@$cmd]";
+      #no strict;
       my $ret=$rs->exec(src => 'blib', dest => 'destdir/subdir');
       ($ret == 0
          && $rs->status != 0
-- 
1.8.1.msysgit.1

