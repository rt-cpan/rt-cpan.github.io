Net-FTPSSL Version: 0.27_02
IO-Socket-SSL Version: 2.015

Perl: 5.018004  [5.18.4],  OS: MSWin32

Server (port): 192.168.0.200 (21)

Keys: (Encryption), (OverridePASV), (PreserveTimestamp), (Croak), (Debug), (SSL_Client_Certificate), (Port)
Values: (E), (192.168.0.200), (0), (0), (1), (HASH(0x3605778)), (21)


Object HASH Details ... (Before start_SSL() call:initialization - E)
  SSL_ca_file ==> C:\Users\ftiffany\Documents\ssl\CA.crt
  SSL_cert_file ==> C:\Users\ftiffany\Documents\ssl\forrest.pem
  SSL_key_file ==> C:\Users\ftiffany\Documents\ssl\forrest.key
  SSL_reuse_ctx ==> 
  SSL_session_cache ==> IO::Socket::SSL::Session_Cache=HASH(0x336930)
      -- _maxsize ===> 4
  SSL_use_cert ==> 1
  SSL_version ==> TLSv1
  Timeout ==> 120

<<< 220 (vsFTPd 3.0.2)
>>> AUTH TLS
<<< 234 Proceed with negotiation.
DEBUG: .../IO/Socket/SSL.pm:2634: new ctx 51426544
DEBUG: .../IO/Socket/SSL.pm:1376: start handshake
DEBUG: .../IO/Socket/SSL.pm:573: ssl handshake not started
DEBUG: .../IO/Socket/SSL.pm:609: not using SNI because hostname is unknown
DEBUG: .../IO/Socket/SSL.pm:660: set socket to non-blocking to enforce timeout=120
DEBUG: .../IO/Socket/SSL.pm:676: Net::SSLeay::connect -> -1
DEBUG: .../IO/Socket/SSL.pm:686: ssl handshake in progress
DEBUG: .../IO/Socket/SSL.pm:696: waiting for fd to become ready: SSL wants a read first
DEBUG: .../IO/Socket/SSL.pm:716: socket ready, retrying connect
DEBUG: .../IO/Socket/SSL.pm:2490: ok=1 cert=50042672
DEBUG: .../IO/Socket/SSL.pm:2490: ok=1 cert=50044256
DEBUG: .../IO/Socket/SSL.pm:2490: ok=1 cert=50044080
DEBUG: .../IO/Socket/SSL.pm:2490: ok=1 cert=50043904
DEBUG: .../IO/Socket/SSL.pm:676: Net::SSLeay::connect -> -1
DEBUG: .../IO/Socket/SSL.pm:686: ssl handshake in progress
DEBUG: .../IO/Socket/SSL.pm:696: waiting for fd to become ready: SSL wants a read first
DEBUG: .../IO/Socket/SSL.pm:716: socket ready, retrying connect
DEBUG: .../IO/Socket/SSL.pm:676: Net::SSLeay::connect -> 1
DEBUG: .../IO/Socket/SSL.pm:731: ssl handshake done

  *** Adding: SSL_session_key --> 192.168.0.200:21 ***

Object HASH Details ... (SSL_Client_Certificate:options - E)
  SSL_ca_file ==> C:\Users\ftiffany\Documents\ssl\CA.crt
  SSL_cert_file ==> C:\Users\ftiffany\Documents\ssl\forrest.pem
  SSL_key_file ==> C:\Users\ftiffany\Documents\ssl\forrest.key
  SSL_reuse_ctx ==> 
  SSL_use_cert ==> 1


Object Met::FTPSSL Details ... (192.168.0.200:21 - E)
  Croak ==> (undef)
  Crypt ==> E
  FixGetTs ==> 0
  FixPutTs ==> 0
  Host ==> 192.168.0.200
  OverridePASV ==> 192.168.0.200
  Pret ==> 0
  Timeout ==> 120
  _SSL_arguments ==> HASH(0x2c7f330)
      -- PeerAddr ===> 192.168.0.200
      -- PeerPort ===> 21
      -- Proto ===> tcp
      -- SSL_ca_file ===> C:\Users\ftiffany\Documents\ssl\CA.crt
      -- SSL_cert_file ===> C:\Users\ftiffany\Documents\ssl\forrest.pem
      -- SSL_check_crl ===> 0
      -- SSL_cipher_list ===> ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES128-SHA256 ECDHE-ECDSA-AES256-GCM-SHA384 ECDHE-ECDSA-AES256-SHA384 ECDHE-ECDSA-AES128-SHA ECDHE-ECDSA-AES256-SHA ECDHE-RSA-AES128-SHA256 ECDHE-RSA-AES128-SHA ECDHE-RSA-AES256-SHA DHE-DSS-AES128-SHA256 DHE-DSS-AES128-SHA DHE-DSS-AES256-SHA256 DHE-DSS-AES256-SHA AES128-SHA256 AES128-SHA AES256-SHA256 AES256-SHA EDH-DSS-DES-CBC3-SHA DES-CBC3-SHA RC4-SHA !EXP !LOW !eNULL !aNULL !DES !MD5 !PSK !SRP
      -- SSL_key_file ===> C:\Users\ftiffany\Documents\ssl\forrest.key
      -- SSL_reuse_ctx ===> 
      -- SSL_server ===> 0
      -- SSL_session_cache ===> IO::Socket::SSL::Session_Cache=HASH(0x336930)
          -- 192.168.0.200:21 ----> HASH(0x37a3aa8)
              -- key ++++> 192.168.0.200:21
              -- next ++++> HASH(0x37a3aa8) ... Infinite Hash Loop Detected!
              -- prev ++++> HASH(0x37a3aa8) ... Infinite Hash Loop Detected!
              -- session ++++> 55511872
          -- _head ----> HASH(0x37a3aa8)
              -- key ++++> 192.168.0.200:21
              -- next ++++> HASH(0x37a3aa8) ... Infinite Hash Loop Detected!
              -- prev ++++> HASH(0x37a3aa8) ... Infinite Hash Loop Detected!
              -- session ++++> 55511872
          -- _maxsize ----> 4
      -- SSL_session_key ===> 192.168.0.200:21
      -- SSL_use_cert ===> 1
      -- SSL_verify_callback ===> CODE(0x37a2058)
      -- SSL_verify_mode ===> 1
      -- SSL_version ===> TLSv1
  _SSL_ctx ==> IO::Socket::SSL::SSL_Context=HASH(0x37a2040)
      -- context ===> 51426544
      -- ocsp_mode ===> 16
      -- session_cache ===> IO::Socket::SSL::Session_Cache=HASH(0x336930)
          -- 192.168.0.200:21 ----> HASH(0x37a3aa8)
              -- key ++++> 192.168.0.200:21
              -- next ++++> HASH(0x37a3aa8) ... Infinite Hash Loop Detected!
              -- prev ++++> HASH(0x37a3aa8) ... Infinite Hash Loop Detected!
              -- session ++++> 55511872
          -- _head ----> HASH(0x37a3aa8)
              -- key ++++> 192.168.0.200:21
              -- next ++++> HASH(0x37a3aa8) ... Infinite Hash Loop Detected!
              -- prev ++++> HASH(0x37a3aa8) ... Infinite Hash Loop Detected!
              -- session ++++> 55511872
          -- _maxsize ----> 4
      -- verify_mode ===> 1
      -- verify_name_ref ===> SCALAR(0x310e1a0)  [192.168.0.200]
  _SSL_fileno ==> 3
  _SSL_last_err ==> ARRAY(0x37a3af0)
      [SSL wants a read first, 4]
  _SSL_object ==> 58541296
  _SSL_opened ==> 1
  buf_size ==> 10240
  data_prot ==> P
  dcsc_mode ==> 1
  debug ==> 1
  debug_extra ==> 0
  io_sock_nonblocking ==> 0
  io_socket_domain ==> 2
  io_socket_proto ==> 6
  io_socket_timeout ==> 120
  io_socket_type ==> 1
  last_ftp_msg ==> 234 Proceed with negotiation.
  myContext ==> HASH(0x360b8e0)
      -- SSL_ca_file ===> C:\Users\ftiffany\Documents\ssl\CA.crt
      -- SSL_reuse_ctx ===> IO::Socket::SSL::SSL_Context=HASH(0x37a2040)
          -- context ----> 51426544
          -- ocsp_mode ----> 16
          -- session_cache ----> IO::Socket::SSL::Session_Cache=HASH(0x336930)
              -- 192.168.0.200:21 ++++> HASH(0x37a3aa8)
                  -- key ====> 192.168.0.200:21
                  -- next ====> HASH(0x37a3aa8) ... Infinite Hash Loop Detected!
                  -- prev ====> HASH(0x37a3aa8) ... Infinite Hash Loop Detected!
                  -- session ====> 55511872
              -- _head ++++> HASH(0x37a3aa8)
                  -- key ====> 192.168.0.200:21
                  -- next ====> HASH(0x37a3aa8) ... Infinite Hash Loop Detected!
                  -- prev ====> HASH(0x37a3aa8) ... Infinite Hash Loop Detected!
                  -- session ====> 55511872
              -- _maxsize ++++> 4
          -- verify_mode ----> 1
          -- verify_name_ref ----> SCALAR(0x310e1a0)  [192.168.0.200]
      -- SSL_session_key ===> 192.168.0.200:21
  mySocketOpts ==> HASH(0x360acb0)
      -- PeerAddr ===> 192.168.0.200
      -- PeerPort ===> 21
      -- Proto ===> tcp
      -- Timeout ===> 120
  trace ==> 0
  type ==> A

>>> USER +++++++
<<< 331 Please specify the password.
>>> PASS *******
<<< 230 Login successful.
>>> HELP
<<< 214-The following commands are recognized.
<<<  ABOR ACCT ALLO APPE CDUP CWD  DELE EPRT EPSV FEAT HELP LIST MDTM MKD
<<<  MODE NLST NOOP OPTS PASS PASV PORT PWD  QUIT REIN REST RETR RMD  RNFR
<<<  RNTO SITE SIZE SMNT STAT STOR STOU STRU SYST TYPE USER XCUP XCWD XMKD
<<<  XPWD XRMD
<<< 214 Help OK.
>>> FEAT
<<< 211-Features:
<<<  AUTH TLS
<<<  EPRT
<<<  EPSV
<<<  MDTM
<<<  PASV
<<<  PBSZ
<<<  PROT
<<<  REST STREAM
<<<  SIZE
<<<  TVFS
<<<  UTF8
<<< 211 End
<<+ 214 The HELP command is supported.
>>> PBSZ 0
<<< 200 PBSZ set to 0.
>>> PROT P
<<< 200 PROT now Private.
>>> PASV
<<< 227 Entering Passive Mode (192,168,0,200,92,93).
--- Overriding PASV IP Address 192.168.0.200 with 192.168.0.200
--- Host (192.168.0.200)  Port (23645)
>>> NLST
<<< 150 Here comes the directory listing.
DEBUG: .../IO/Socket/SSL.pm:1376: start handshake
DEBUG: .../IO/Socket/SSL.pm:573: ssl handshake not started
DEBUG: .../IO/Socket/SSL.pm:609: not using SNI because hostname is unknown
DEBUG: .../IO/Socket/SSL.pm:2490: ok=1 cert=50042672
DEBUG: .../IO/Socket/SSL.pm:2490: ok=1 cert=59392416
DEBUG: .../IO/Socket/SSL.pm:2490: ok=1 cert=59392240
DEBUG: .../IO/Socket/SSL.pm:2490: ok=1 cert=59392064
DEBUG: .../IO/Socket/SSL.pm:676: Net::SSLeay::connect -> 1
DEBUG: .../IO/Socket/SSL.pm:731: ssl handshake done
<<< 522 SSL connection failed; session reuse required: see require_ssl_reuse option in vsftpd.conf man page
>>> QUIT
<<< 221 Goodbye.
DEBUG: .../IO/Socket/SSL.pm:2667: free ctx 51426544 open=51426544
DEBUG: .../IO/Socket/SSL.pm:2672: free ctx 51426544 callback
DEBUG: .../IO/Socket/SSL.pm:2679: OK free ctx 51426544
