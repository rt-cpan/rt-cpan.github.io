Subject: spelling errors
Description: man pages contain spelling
 errors
Author: Olivier Sallou <osallou@debian.org>
Last-Updated: 2013-02-22
Forwarded: yes
Bug
--- a/lib/Command/DynamicSubCommands.pm
+++ b/lib/Command/DynamicSubCommands.pm
@@ -264,7 +264,7 @@
 
     By default it resolves the target classes, and calls  _build_sub_command
 
-    It can be overriden to customize behavior, or filter results.  Be sure
+    It can be overridden to customize behavior, or filter results.  Be sure
     to call @cmds = $self->SUPER::_build_all_sub_commands() if you want 
     to get the default commands in addition to overriding.
 
--- a/lib/UR/BoolExpr.pm
+++ b/lib/UR/BoolExpr.pm
@@ -1189,7 +1189,7 @@
     my $bx3 = $bx->flatten();
     # any indirection in the params takes the form a.b.c at the lowest level
     # also 'payroll_category' might become 'pay_history.category', and 'pay_history.is_current' => 1 is added to the list
-    # if this paramter has that as a custom filter
+    # if this parameter has that as a custom filter
 
 
 =head1 DESCRIPTION
@@ -1197,7 +1197,7 @@
 A UR::BoolExpr object captures a set of match criteria for some class of object.
 
 Calls to get(), create(), and define_set() all use this internally to objectify
-their paramters.  If given a boolean expression object directly they will use it.
+their parameters.  If given a boolean expression object directly they will use it.
 Otherwise they will construct one from the parameters given.
 
 They have a 1:1 correspondence within the WHERE clause in an SQL statement where
--- a/lib/UR/Context.pm
+++ b/lib/UR/Context.pm
@@ -3510,7 +3510,7 @@
 data consistency of each property will be checked.  If there are no
 conflicting changes, then any differences between the object's initial state
 and the current state in the underlying Context will be applied to the
-object's notion of what it thinks its intial state is.
+object's notion of what it thinks its initial state is.
 
 In some future release, UR may support additional data concurrency methods
 such as pessimistic concurrency: check that the current state of all
--- a/lib/UR/Context/ObjectFabricator.pm
+++ b/lib/UR/Context/ObjectFabricator.pm
@@ -1120,7 +1120,7 @@
   $fab->apply_all_params_loaded();
 
 As the fabricator constructs objects, it buffers changes to all_params_loaded
-(the Context's query cache) to maintain consistancy if multiple iterators are
+(the Context's query cache) to maintain consistency if multiple iterators are
 working concurrently.  At the appripriate time, call apply_all_params_loaded()
 to take those changes and apply them to the current Context's all_params_loaded.
 
--- a/lib/UR/DataSource.pod
+++ b/lib/UR/DataSource.pod
@@ -28,7 +28,7 @@
 data source class such as L<UR::DataSource::Oracle> or
 L<UR::DataSource::File>, as well as L<UR::Singleton>.  This makes it easy
 to link classes to this data source, since the class name will be the
-same as its ID, and the module autoloader will instantiate it automaticly.
+same as its ID, and the module autoloader will instantiate it automatically.
 
 =head1 INHERITANCE
 
--- a/lib/UR/Manual/Cookbook.pod
+++ b/lib/UR/Manual/Cookbook.pod
@@ -245,7 +245,7 @@
 As in the has-a relationship, and the container class wants to have a
 property actually stored on the contained class. Using the same schema in
 the has-a relationship above, and we want the contained_value property to
-be accessable from the container class.
+be accessible from the container class.
 
   class TheNamespace::Container {
      id_by => [
--- a/lib/UR/Manual/Overview.pod
+++ b/lib/UR/Manual/Overview.pod
@@ -82,7 +82,7 @@
 
 UR's primary reason for existing is to function as an ORM. That is, managing
 how to store instances of objects in memory of a running program with more
-persistant storage in a relational database, and retrieve them later.  It
+persistent storage in a relational database, and retrieve them later.  It
 handles the common cases where each table is implemented by a class their
 columns are properties of the classes; retrieving objects by arbitrary
 properties; creating, updating and deleting objects with enforced database
@@ -214,7 +214,7 @@
 system has other objects representing metadata about the classes (class
 information, properties, relationships, etc), database entities (databases,
 tables, columns, constraints, etc), transactions, data sources, etc. All the
-metadata is accessable through the same API as any of the database-backed
+metadata is accessible through the same API as any of the database-backed
 data.
 
 For classes backed by the database, after a schema change (like adding tables
--- a/lib/UR/Manual/SchemaDesign.pod
+++ b/lib/UR/Manual/SchemaDesign.pod
@@ -15,7 +15,7 @@
 class metadata, the class will be renamed to 'YourNamespace::TypeTable' to
 avoid the conflict.  The table_name for that class will still refer to
 the actual table name.  'ur update classes' will print a warning if this
-happens, and rename the class automaticly.
+happens, and rename the class automatically.
 
 =item Avoid columns named 'id'
 
--- a/lib/UR/ModuleBase.pm
+++ b/lib/UR/ModuleBase.pm
@@ -284,7 +284,7 @@
 final class or any derived classes, perl checks up the tree for
 AUTOLOAD.  We impliment AUTOLOAD at the top of the tree, and then
 check each class in the tree in order for an AUTOSUB method.  Where a
-class implements AUTOSUB, it will recieve a function name as its first
+class implements AUTOSUB, it will receive a function name as its first
 parameter, and it is expected to return either a subroutine reference,
 or undef.  If undef is returned then the inheritance tree search will
 continue.  If a subroutine reference is returned it will be executed
--- a/lib/UR/ModuleConfig.pm
+++ b/lib/UR/ModuleConfig.pm
@@ -109,7 +109,7 @@
 When called as an object method, the config for both the object and
 all classes in its inheritance hierarchy are referenced, with the
 object config taking precedence over class methods and class methods
-closer to the object (first in the @ISA array) taking precendence over
+closer to the object (first in the @ISA array) taking precedence over
 those further away (later in the @ISA array).  When called as a class
 method, the same procedure is used, except no object configuration is
 referenced.
--- a/lib/UR/Namespace.pm
+++ b/lib/UR/Namespace.pm
@@ -219,7 +219,7 @@
 
 A UR namespace is the top-level object that represents your data's class
 structure in the most general way.  After use-ing a namespace module, the
-program gets access to the module autoloader, which will automaticaly use
+program gets access to the module autoloader, which will automatically use
 modules on your behalf if you attempt to interact with their packages in
 a UR-y way, such as calling get().
 
--- a/lib/UR/Object.pm
+++ b/lib/UR/Object.pm
@@ -1016,7 +1016,7 @@
   $added  = $elmo->add_job($snore);
 
 A variation of the above will construt the item and add it at once.
-This second form of add_* automaticaly would identify that the line items
+This second form of add_* automatically would identify that the line items
 also reference the order, and establish the correct converse relationship
 automatically.
 
--- a/lib/UR/Object/Property.pm
+++ b/lib/UR/Object/Property.pm
@@ -596,7 +596,7 @@
 
 =item implied_by => Text
 
-If this propery is created as a result of another property's existence,
+If this property is created as a result of another property's existence,
 implied_by is the name of that other property.  This can happen in the
 case where an object accessor property is defined
 
--- a/lib/UR/Object/Type/Initializer.pod
+++ b/lib/UR/Object/Type/Initializer.pod
@@ -309,7 +309,7 @@
 
 Object properties do not normally hold Perl references to other objects, but you
 may use 'ARRAY' or 'HASH' here to indicate that the object will store the
-reference directly.  Note that these properties are not usually savable to
+reference directly.  Note that these properties are not usually saveable to
 outside data sources.
 
 =item data_type
@@ -335,7 +335,7 @@
 
 A flag indicating that this property can be changed. It is the default state
 of a property.  Set this to 0 in the property definition if the property is
-not changable after the object is created.
+not changeable after the object is created.
 
 =item is_constant
 
