Description: fix a spelling mistake
Origin: vendor
Bug: https://rt.cpan.org/Ticket/Display.html?id=85982
Forwarded: https://rt.cpan.org/Ticket/Display.html?id=85982
Author: gregor herrmann <gregoa@debian.org>
Last-Update: 2016-10-31

--- a/lib/UR/Namespace/Command/Sys/ClassBrowser.pm
+++ b/lib/UR/Namespace/Command/Sys/ClassBrowser.pm
@@ -57,7 +57,7 @@
 
 sub help_detail {
     q(The class-browser command starts an embedded web server containing an app for
-browsing throught the class structure.  After starting, it prints a URL on
+browsing through the class structure.  After starting, it prints a URL on
 STDOUT that can be copy-and-pasted into a browser to run the app.);
 }
 
@@ -647,7 +647,7 @@
 =head1 DESCRIPTION
 
 The class-browser command starts an embedded web server containing an app for
-browsing throught the class structure.  After starting, it prints a URL on
+browsing through the class structure.  After starting, it prints a URL on
 STDOUT that can be copy-and-pasted into a browser to run the app.
 
 =head1 COMMAND-LINE OPTIONS
--- a/lib/UR/Namespace/Command/Update/ClassesFromDb.pm
+++ b/lib/UR/Namespace/Command/Update/ClassesFromDb.pm
@@ -1311,7 +1311,7 @@
                 $status_message_this_update .= "A " . $class_obj->module_path;
             }
             $class_obj->rewrite_module_header() unless ($no_commit);
-            # FIXME A test of automaticly making DBIx::Class modules
+            # FIXME A test of automatically making DBIx::Class modules
             #$class_obj->dbic_rewrite_module_header() unless ($no_commit);
 
         }
--- a/lib/UR/Service/WebServer.pm
+++ b/lib/UR/Service/WebServer.pm
@@ -189,7 +189,7 @@
 =item server
 
 Holds a reference to an object that isa HTTP::Server::PSGI.  This will be
-automaticly created the first time run() is called.
+automatically created the first time run() is called.
 
 =item cb
 
@@ -214,7 +214,7 @@
 standard PSGI env hashref) and $pathname (a path relative to $path).  It
 returns the standard tuple a PSGI server expects.
 
-$pathname is pre-processed by removing all occurances of ".." to keep requests
+$pathname is pre-processed by removing all occurrences of ".." to keep requests
 within the provided $path.  If the requested file is not found, then it
 returns a 404.
 
--- a/lib/UR.pm
+++ b/lib/UR.pm
@@ -798,7 +798,7 @@
 
 Copyright (C) 2002-2016 Washington University in St. Louis, MO.
 
-This sofware is licensed under the same terms as Perl itself.
+This software is licensed under the same terms as Perl itself.
 See the LICENSE file in this distribution.
 
 =pod
--- a/lib/UR/Context/AutoUnloadPool.pm
+++ b/lib/UR/Context/AutoUnloadPool.pm
@@ -104,7 +104,7 @@
 
 =head1 NAME
 
-UR::Context::AutoUnloadPool - Automaticaly unload objects when scope ends
+UR::Context::AutoUnloadPool - Automatically unload objects when scope ends
 
 =head1 SYNOPSIS
 
--- a/lib/UR/BoolExpr.pm
+++ b/lib/UR/BoolExpr.pm
@@ -1195,7 +1195,7 @@
 Otherwise they will construct one from the parameters given.
 
 They have a 1:1 correspondence within the WHERE clause in an SQL statement where
-RDBMS persistance is used.  They also imply the FROM clause in these cases,
+RDBMS persistence is used.  They also imply the FROM clause in these cases,
 since the query properties control which joins must be included to return
 the matching object set.
 
@@ -1335,7 +1335,7 @@
   my $operator = $bx->operator_for('property_name');
 
 Return a string for the operator of the given property.  A value of '' (the
-empty string) means equality ("=").  Other possible values inclue '<', '>',
+empty string) means equality ("=").  Other possible values include '<', '>',
 '<=', '>=', 'between', 'true', 'false', 'in', 'not <', 'not >', etc.
 
 =item normalize
@@ -1345,7 +1345,7 @@
 A boolen expression can be changed in incidental ways and still be equivalent.
 This method converts the expression into a normalized form so that it can be
 compared to other normalized expressions without incidental differences
-affecting the comparision.
+affecting the comparison.
 
 =item flatten
 
--- a/lib/UR/Context.pm
+++ b/lib/UR/Context.pm
@@ -3337,7 +3337,7 @@
 
 C<$should_load> is a flag indicating whether the Context should load objects
 satisfying the rule from external data sources.  A true value means it should
-always ask the relevent data sources, even if the Context believes the 
+always ask the relevant data sources, even if the Context believes the
 requested data is in the object cache,  A false but defined value means the
 Context should not ask the data sources for new data, but only return what
 is currently in the cache matching the rule.  The value C<undef> means the
@@ -3379,7 +3379,7 @@
 changes will be applied to whatever Context the transaction is a part of.
 if the current context is a L<UR::Context::Process> context, then C<commit()>
 pushes the changes to the underlying L<UR::Context::Root> context, meaning 
-that those changes will be applied to the relevent data sources.
+that those changes will be applied to the relevant data sources.
 
 In the usual case, where no transactions are in play and all data sources
 are RDBMS databases, calling C<commit()> will cause the program to begin
@@ -3615,7 +3615,7 @@
 
 When a request is made that will hit one or more data sources,
 C<_resolve_query_plan_for_ds_and_bxt> is used to call a method of the same name
-on the data source.  It retuns a hashref used by many other parts of the 
+on the data source.  It returns a hashref used by many other parts of the
 object loading system, and describes what data source to use, how to query
 that data source to get the objects, how to use the raw data returned by
 the data source to construct objects and how to resolve any delegated
@@ -3781,7 +3781,7 @@
 
   @objs3 = ChildClass->get(param_1 => 'foo');
 
-again, the first request has already loaded all the relevent data, and
+again, the first request has already loaded all the relevant data, and
 therefore won't query the data source.
 
 =item _sync_databases
@@ -3883,7 +3883,7 @@
 exception.
 
 Ghost objects are not included in a get() request on the regular class,
-though the app can ask for them specificly using
+though the app can ask for them specifically using
 C<MyClass::Ghost-E<gt>get(%params)>.
 
 Ghost classes do not have ghost classes themselves.  Calling create() or
--- a/lib/UR/Context/Process.pm
+++ b/lib/UR/Context/Process.pm
@@ -4,7 +4,7 @@
 
 =head1 NAME
 
-UR::Context::Process - Impliments a generic interface to the current application.
+UR::Context::Process - Implements a generic interface to the current application.
 
 =head1 SYNOPSIS
 
@@ -226,7 +226,7 @@
 
 This method is used to access and set the GNU-standard package name
 for the package to which this program belongs.  This is does B<NOT>
-refer-to a Perl package.  It allows a set of spefic programs to be
+refer-to a Perl package.  It allows a set of specific programs to be
 grouped together under a common name, which is used in standard
 message output, and is used in the output of the C<version> subroutine
 (see L<"version"> output.
--- a/lib/UR/DataSource.pod
+++ b/lib/UR/DataSource.pod
@@ -19,7 +19,7 @@
 
 =head1 DESCRIPTION
 
-Data source instances represent a logical souce of data to the application.
+Data source instances represent a logical source of data to the application.
 Most of them are likely to be some kind of relational database, but not all
 are.  UR::DataSource is an abstract base class inherited by other data
 sources.
--- a/lib/UR/DataSource/FileMux.pm
+++ b/lib/UR/DataSource/FileMux.pm
@@ -687,7 +687,7 @@
 in the rule, and the value of that parameter is used to complete the file's pathname,
 via the file_resolver() function.  Note that even though the 'thing_type' parameter
 is not actually stored in the file, its value for the loaded objects gets filled in
-because that paremeter exists in the constant_values() configuration list, and in
+because that parameter exists in the constant_values() configuration list, and in
 the get() request.
 
 =head2 Configuration
--- a/lib/UR/DataSource/Filesystem.pm
+++ b/lib/UR/DataSource/Filesystem.pm
@@ -1811,7 +1811,7 @@
 
 =head1 DESCRIPTION
 
-A Filesystem data source object represents one or more files on the fileystem.
+A Filesystem data source object represents one or more files on the filesystem.
 In the simplest case, the object's 'path' property names a file that stores
 the data.  
 
@@ -1911,7 +1911,7 @@
 
 =head2 Path specification
 
-Besides refering to just one file on the filesystem, the path spec is a
+Besides referingt to just one file on the filesystem, the path spec is a
 recipe for finding files in a directory tree.  If a class using a Filesystem
 data source does not have 'table_name' metadata, then the path specification
 must resolve to file names.  Alternatively, classes may specify their
--- a/lib/UR/ModuleBase.pm
+++ b/lib/UR/ModuleBase.pm
@@ -243,12 +243,12 @@
 
 =head1 C<AUTOLOAD>
 
-This package impliments AUTOLOAD so that derived classes can use
+This package implements AUTOLOAD so that derived classes can use
 AUTOSUB instead of AUTOLOAD.
 
 When a class or object has a method called which is not found in the
 final class or any derived classes, perl checks up the tree for
-AUTOLOAD.  We impliment AUTOLOAD at the top of the tree, and then
+AUTOLOAD.  We implement AUTOLOAD at the top of the tree, and then
 check each class in the tree in order for an AUTOSUB method.  Where a
 class implements AUTOSUB, it will receive a function name as its first
 parameter, and it is expected to return either a subroutine reference,
@@ -264,7 +264,7 @@
 On an object with a complex inheritance tree, AUTOLOAD is only found
 once, after which, there is no way to indicate that the given AUTOLOAD
 has failed and that the inheritance tree trek should continue for
-other AUTOLOADS which might impliment the given method.
+other AUTOLOADS which might implement the given method.
 
 Example:
 
--- a/lib/UR/Object.pm
+++ b/lib/UR/Object.pm
@@ -61,7 +61,7 @@
 
 sub __context__ {
     # In UR, a "context" handles inter-object references so they can cross
-    # process boundaries, and interact with persistance systems automatically.
+    # process boundaries, and interact with persistence systems automatically.
 
     # For efficiency, all context switches update a package-level value.
 
@@ -887,7 +887,7 @@
 
 UR uses that separation to automatically handle I/O.  It provides a query API,
 and manages the difference between the state of entities in the application,
-and their state in external persistance systems.  It aims to do so transparently,
+and their state in external persistence systems.  It aims to do so transparently,
 keeping I/O logic orthogonally to "business logic", and hopefully making code
 around I/O unnecessary to write at all for most programs.
 
@@ -1315,7 +1315,7 @@
 
 =head2 Meta API
 
-The folowing methods allow the application to interrogate UR for information
+The following methods allow the application to interrogate UR for information
 about the object in question.
 
 =over 4
--- a/lib/UR/Object/Property.pm
+++ b/lib/UR/Object/Property.pm
@@ -563,7 +563,7 @@
 =item is_volatile => Boolean
 
 Indicates this property can be changed by a mechanism other than its normal
-accessor method.  Signals are not emmitted even when it does change via
+accessor method.  Signals are not emitted even when it does change via
 its normal accessor method.
 
 =item is_classwide => Boolean
@@ -640,7 +640,7 @@
 
 =item where => ARRAY
 
-Supplies additional filters for indirect properies.  For example:
+Supplies additional filters for indirect properties.  For example:
 
   foos => { is => 'Some::Foo', reverse_as => 'some', is_many => 1 },
   blue_foos => { via => 'foos', where => [ color => 'blue' ] },
--- a/lib/UR/Object/Tag.pm
+++ b/lib/UR/Object/Tag.pm
@@ -107,7 +107,7 @@
 will write view components which use attributes, and will ignore
 them rather than plug-in at this low level to augment/mangle/supress.
 
-The filter will be given an object reference and a refrence to an
+The filter will be given an object reference and a reference to an
 array of attributes which are tentatively to be delivered for the
 object.
 
--- a/lib/UR/Object/Type.pod
+++ b/lib/UR/Object/Type.pod
@@ -303,8 +303,8 @@
   @names = $class_obj->ancestry_property_names
 
 Returns a list of property names of the parent classes and their inheritance
-heirarchy.  The list may include duplicates if a property is overridden
-somewhere in the heirarchy.
+hierarchy.  The list may include duplicates if a property is overridden
+somewhere in the hierarchy.
 
 =item ancestry_property_metas
 
@@ -316,8 +316,8 @@
 =item all_property_names
 
 Returns a list of property names of the given class and its inheritance
-heirarchy.  The list may include duplicates if a property is overridden
-somewhere in the heirarchy.
+hierarchy.  The list may include duplicates if a property is overridden
+somewhere in the hierarchy.
 
 =item all_property_metas
 
@@ -354,9 +354,9 @@
   @property_objs = $class_obj->all_id_property_metas;
 
 Returns the property names or L<UR::Object::Property> objects for either
-the parent classes and their inheritance heirarchy, or for the given
-class and all of its inheritance heirarchy.  The lists may include duplicates
-if properties are overridden somewhere in the heirarchy.
+the parent classes and their inheritance hierarchy, or for the given
+class and all of its inheritance hierarchy.  The lists may include duplicates
+if properties are overridden somewhere in the hierarchy.
 
 =item unique_property_set_hashref
 
@@ -388,7 +388,7 @@
 
   @names = $class_obj->ancestry_table_names
 
-Returns a list of table names in the class's inheritance heirarchy.
+Returns a list of table names in the class's inheritance hierarchy.
 
 =item direct_column_names
 
--- a/lib/UR/Object/Type/AccessorWriter.pm
+++ b/lib/UR/Object/Type/AccessorWriter.pm
@@ -1959,7 +1959,7 @@
 
 Creates a calculated accessor called $accessor_name.  If the $is_constant
 flag is true, then the accessor runs the calculation once, caches the result,
-and returns that result for subseqent calls to the accessor.
+and returns that result for subsequent calls to the accessor.
 
 $calculation_src can be one of: coderef, string containing Perl code, or
 the name of a module under UR::Object::Type::AccessorWriter which has a
--- a/lib/UR/Role.pm
+++ b/lib/UR/Role.pm
@@ -208,7 +208,7 @@
 class also overloads that same operator.
 
 An exception is also thrown if composed roles define incompatible 'fallback'
-behavior.  If a role does not specify 'fallback', or explicity sets it to
+behavior.  If a role does not specify 'fallback', or explicitly sets it to
 C<undef>, it is compatible with other values.  A Role that sets its 'fallback'
 value to true or false is only compatible with other roles' values of undef
 or the same true or false value.
--- a/lib/UR/Role/Param.pm
+++ b/lib/UR/Role/Param.pm
@@ -174,7 +174,7 @@
 =head1 DESCRIPTION
 
 Roles can be configured by declaring variabls with the C<RoleParam> attribute.
-These variables aquire values by calling C<create()> on the role's name and
+These variables acquire values by calling C<create()> on the role's name and
 giving values for all the role's parameters.  More information about declaring
 and using these parameters is described in the "Parameterized Roles" section of
 L<UR::Role>.
--- a/lib/UR/Service/RPC/Executer.pm
+++ b/lib/UR/Service/RPC/Executer.pm
@@ -175,7 +175,7 @@
 It deserializes the message and calls authenticate.  If authentication fails,
 it immediately passes the message object back to the caller.
 
-If authentication succeedes, it calls the appropriate method in the Executor
+If authentication succeeds, it calls the appropriate method in the Executor
 package, and creates a new Message object with the return value to pass back
 to the caller.
 
