From: Ansgar Burchardt <ansgar@43-1.org>
Subject: Fix tests in t/12-error.t
Date: Fri, 28 May 2010 23:53:25 +0900

--- libmoosex-types-structured-perl.orig/t/12-error.t
+++ libmoosex-types-structured-perl/t/12-error.t
@@ -23,19 +23,19 @@
 ## Let's check all the expected validation errors for tuple
 
 like $simple_tuple->validate({a=>1,b=>2}),
- qr/Validation failed for 'simple_tuple' failed with value { a: 1, b: 2 }/,
+ qr/Validation failed for 'simple_tuple' (?:failed )?with value { a: 1, b: 2 }/,
  'Wrong basic type';
 
 like $simple_tuple->validate(['a','b']),
- qr/failed for 'simple_tuple' failed with value \[ "a", "b" \]/,
+ qr/failed for 'simple_tuple' (?:failed )?with value \[ "a", "b" \]/,
  'Correctly failed due to "a" not an Int';
  
 like $simple_tuple->validate([1,$simple_tuple]),
- qr/Validation failed for 'simple_tuple' failed with value \[ 1, MooseX::Meta::TypeConstraint::Structured/,
+ qr/Validation failed for 'simple_tuple' (?:failed )?with value \[ 1, MooseX::Meta::TypeConstraint::Structured/,
  'Correctly failed due to object not a Str';
 
 like $simple_tuple->validate([1]),
- qr/Validation failed for 'Str' failed with value NULL/,
+ qr/Validation failed for 'Str' (?:failed )?with value NULL/,
  'Not enought values';
 
 like $simple_tuple->validate([1,'hello','too many']),
@@ -45,19 +45,19 @@
 ## And the same thing for dicts [name=>Str,age=>Int]
 
 like $simple_dict->validate([1,2]),
- qr/ failed with value \[ 1, 2 \]/,
+ qr/ (?:failed )?with value \[ 1, 2 \]/,
  'Wrong basic type';
  
 like $simple_dict->validate({name=>'John',age=>'a'}),
- qr/failed for 'Int' failed with value a/,
+ qr/failed for 'Int' (?:failed )?with value a/,
  'Correctly failed due to age not an Int';
  
 like $simple_dict->validate({name=>$simple_dict,age=>1}),
- qr/failed with value { age: 1, name: MooseX:/,
+ qr/(?:failed )?with value { age: 1, name: MooseX:/,
  'Correctly failed due to object not a Str';
 
 like $simple_dict->validate({name=>'John'}),
- qr/failed for 'Int' failed with value NULL/,
+ qr/failed for 'Int' (?:failed )?with value NULL/,
  'Not enought values';
 
 like $simple_dict->validate({name=>'Vincent', age=>15,extra=>'morethanIneed'}),
@@ -70,15 +70,15 @@
  my $optional_dict = subtype 'optional_dict', as Dict[name=>Str,age=>Optional[Int]];
  
  like $optional_tuple->validate({a=>1,b=>2}),
- qr/Validation failed for 'optional_tuple' failed with value { a: 1, b: 2 }/,
+ qr/Validation failed for 'optional_tuple' (?:failed )?with value { a: 1, b: 2 }/,
  'Wrong basic type';
 
 like $optional_tuple->validate(['a','b']),
- qr/failed for 'Int' failed with value a/,
+ qr/failed for 'Int' (?:failed )?with value a/,
  'Correctly failed due to "a" not an Int';
  
 like $optional_tuple->validate([1,$simple_tuple]),
- qr/failed for 'MooseX::Types::Structured::Optional\[Str\]' failed with value MooseX/,
+ qr/failed for 'MooseX::Types::Structured::Optional\[Str\]' (?:failed )?with value MooseX/,
  'Correctly failed due to object not a Str';
 
 like $optional_tuple->validate([1,'hello','too many']),
@@ -86,15 +86,15 @@
  'Too Many values';
 
 like $optional_dict->validate([1,2]),
- qr/ failed with value \[ 1, 2 \]/,
+ qr/ (?:failed )?with value \[ 1, 2 \]/,
  'Wrong basic type';
  
 like $optional_dict->validate({name=>'John',age=>'a'}),
- qr/Validation failed for 'MooseX::Types::Structured::Optional\[Int\]' failed with value a/,
+ qr/Validation failed for 'MooseX::Types::Structured::Optional\[Int\]' (?:failed )?with value a/,
  'Correctly failed due to age not an Int';
  
 like $optional_dict->validate({name=>$simple_dict,age=>1}),
- qr/failed with value { age: 1, name: MooseX:/,
+ qr/(?:failed )?with value { age: 1, name: MooseX:/,
  'Correctly failed due to object not a Str';
 
 like $optional_dict->validate({name=>'Vincent', age=>15,extra=>'morethanIneed'}),
