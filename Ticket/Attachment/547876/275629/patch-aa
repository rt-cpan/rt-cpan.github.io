--- lib/Pod/Text.pm.orig	2008-12-17 12:24:32.000000000 +0000
+++ lib/Pod/Text.pm	2008-12-17 12:25:02.000000000 +0000
@@ -30,9 +30,9 @@
 
 use Carp qw(carp croak);
 use Exporter ();
-use Pod::Simple ();
+use Pod::Simple::Select ();
 
-@ISA = qw(Pod::Simple Exporter);
+@ISA = qw(Pod::Simple::Select Exporter);
 
 # We have to export pod2text for backward compatibility.
 @EXPORT = qw(pod2text);
@@ -141,27 +141,22 @@
 
 # Add a block of text to the contents of the current node, formatting it
 # according to the current formatting instructions as we do.
-sub _handle_text {
+sub _handle_selected_text {
     my ($self, $text) = @_;
+
     my $tag = $$self{PENDING}[-1];
     $$tag[1] .= $text;
-}
 
-# Given an element name, get the corresponding method name.
-sub method_for_element {
-    my ($self, $element) = @_;
-    $element =~ tr/-/_/;
-    $element =~ tr/A-Z/a-z/;
-    $element =~ tr/_a-z0-9//cd;
-    return $element;
+    return;
 }
 
 # Handle the start of a new element.  If cmd_element is defined, assume that
 # we need to collect the entire tree for this element before passing it to the
 # element method, and create a new tree into which we'll collect blocks of
 # text and nested elements.  Otherwise, if start_element is defined, call it.
-sub _handle_element_start {
+sub _handle_selected_element_start {
     my ($self, $element, $attrs) = @_;
+
     my $method = $self->method_for_element ($element);
 
     # If we have a command handler, we need to accumulate the contents of the
@@ -172,13 +167,16 @@
         my $method = 'start_' . $method;
         $self->$method ($attrs, '');
     }
+
+    return;
 }
 
 # Handle the end of an element.  If we had a cmd_ method for this element,
 # this is where we pass along the text that we've accumulated.  Otherwise, if
 # we have an end_ method for the element, call that.
-sub _handle_element_end {
+sub _handle_selected_element_end {
     my ($self, $element) = @_;
+
     my $method = $self->method_for_element ($element);
 
     # If we have a command handler, pull off the pending text and pass it to
@@ -198,6 +196,8 @@
         my $method = 'end_' . $method;
         $self->$method ();
     }
+
+    return;
 }
 
 ##############################################################################
@@ -277,9 +277,9 @@
     my $margin = $$self{opt_indent} + $$self{opt_margin};
 
     # Initialize a few per-document variables.
+    $$self{PENDING} = [[]];         # Pending output.
     $$self{INDENTS} = [];       # Stack of indentations.
     $$self{MARGIN}  = $margin;  # Default left margin.
-    $$self{PENDING} = [[]];     # Pending output.
 
     # We have to redo encoding handling for each document.
     delete $$self{CHECKED_ENCODING};
@@ -297,7 +297,7 @@
         eval { binmode ($$self{output_fh}, ':encoding(UTF-8)') };
     }
 
-    return '';
+    return $self->SUPER::start_document(@_);
 }
 
 ##############################################################################
