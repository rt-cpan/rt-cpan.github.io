PERL_DL_NONLAZY=1 /usr/bin/perl "-MExtUtils::Command::MM" "-MTest::Harness" "-e" "undef *Test::Harness::Switches; test_harness(1, 'blib/lib', 'blib/arch')" t/*.t t/regression/*.t
t/00-load.t .......................................... 
1..1
ok 1 - use Finance::InteractiveBrokers::SWIG;
ok
t/79-Finance-InteractiveBrokers-SWIG-IBAPI.t ......... 
ok 1 - use Finance::InteractiveBrokers::SWIG::IBAPI;
ok 2 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('new')
ok 3 - An object of class 'Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient' isa 'Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient'
ok 4 - runtime and static versions are equal
ok 5 - pm and library build times are equal
ok 6 - Finance::InteractiveBrokers::SWIG::IBAPI->can('TIEHASH')
ok 7 - Finance::InteractiveBrokers::SWIG::IBAPI->can('CLEAR')
ok 8 - Finance::InteractiveBrokers::SWIG::IBAPI->can('FIRSTKEY')
ok 9 - Finance::InteractiveBrokers::SWIG::IBAPI->can('NEXTKEY')
ok 10 - Finance::InteractiveBrokers::SWIG::IBAPI->can('FETCH')
ok 11 - Finance::InteractiveBrokers::SWIG::IBAPI->can('STORE')
ok 12 - Finance::InteractiveBrokers::SWIG::IBAPI->can('this')
ok 13 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('DESTROY')
ok 14 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('DISOWN')
ok 15 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('ACQUIRE')
ok 16 - Finance::InteractiveBrokers::SWIG::IBAPI::ComboLeg->can('new')
ok 17 - Finance::InteractiveBrokers::SWIG::IBAPI::ComboLeg->can('DESTROY')
ok 18 - Finance::InteractiveBrokers::SWIG::IBAPI::ComboLeg->can('DISOWN')
ok 19 - Finance::InteractiveBrokers::SWIG::IBAPI::ComboLeg->can('ACQUIRE')
ok 20 - Finance::InteractiveBrokers::SWIG::IBAPI::UnderComp->can('new')
ok 21 - Finance::InteractiveBrokers::SWIG::IBAPI::UnderComp->can('DESTROY')
ok 22 - Finance::InteractiveBrokers::SWIG::IBAPI::UnderComp->can('DISOWN')
ok 23 - Finance::InteractiveBrokers::SWIG::IBAPI::UnderComp->can('ACQUIRE')
ok 24 - Finance::InteractiveBrokers::SWIG::IBAPI::Contract->can('new')
ok 25 - Finance::InteractiveBrokers::SWIG::IBAPI::Contract->can('DESTROY')
ok 26 - Finance::InteractiveBrokers::SWIG::IBAPI::Contract->can('DISOWN')
ok 27 - Finance::InteractiveBrokers::SWIG::IBAPI::Contract->can('ACQUIRE')
ok 28 - Finance::InteractiveBrokers::SWIG::IBAPI::ContractDetails->can('new')
ok 29 - Finance::InteractiveBrokers::SWIG::IBAPI::ContractDetails->can('DESTROY')
ok 30 - Finance::InteractiveBrokers::SWIG::IBAPI::ContractDetails->can('DISOWN')
ok 31 - Finance::InteractiveBrokers::SWIG::IBAPI::ContractDetails->can('ACQUIRE')
ok 32 - Finance::InteractiveBrokers::SWIG::IBAPI::Order->can('new')
ok 33 - Finance::InteractiveBrokers::SWIG::IBAPI::Order->can('DESTROY')
ok 34 - Finance::InteractiveBrokers::SWIG::IBAPI::Order->can('DISOWN')
ok 35 - Finance::InteractiveBrokers::SWIG::IBAPI::Order->can('ACQUIRE')
ok 36 - Finance::InteractiveBrokers::SWIG::IBAPI::OrderState->can('new')
ok 37 - Finance::InteractiveBrokers::SWIG::IBAPI::OrderState->can('DESTROY')
ok 38 - Finance::InteractiveBrokers::SWIG::IBAPI::OrderState->can('DISOWN')
ok 39 - Finance::InteractiveBrokers::SWIG::IBAPI::OrderState->can('ACQUIRE')
ok 40 - Finance::InteractiveBrokers::SWIG::IBAPI::Execution->can('new')
ok 41 - Finance::InteractiveBrokers::SWIG::IBAPI::Execution->can('DESTROY')
ok 42 - Finance::InteractiveBrokers::SWIG::IBAPI::Execution->can('DISOWN')
ok 43 - Finance::InteractiveBrokers::SWIG::IBAPI::Execution->can('ACQUIRE')
ok 44 - Finance::InteractiveBrokers::SWIG::IBAPI::ExecutionFilter->can('new')
ok 45 - Finance::InteractiveBrokers::SWIG::IBAPI::ExecutionFilter->can('DESTROY')
ok 46 - Finance::InteractiveBrokers::SWIG::IBAPI::ExecutionFilter->can('DISOWN')
ok 47 - Finance::InteractiveBrokers::SWIG::IBAPI::ExecutionFilter->can('ACQUIRE')
ok 48 - Finance::InteractiveBrokers::SWIG::IBAPI::ScannerSubscription->can('new')
ok 49 - Finance::InteractiveBrokers::SWIG::IBAPI::ScannerSubscription->can('DESTROY')
ok 50 - Finance::InteractiveBrokers::SWIG::IBAPI::ScannerSubscription->can('DISOWN')
ok 51 - Finance::InteractiveBrokers::SWIG::IBAPI::ScannerSubscription->can('ACQUIRE')
ok 52 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('processMessages')
ok 53 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('setSelectTimeout')
ok 54 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('eConnect')
ok 55 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('eDisconnect')
ok 56 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('isConnected')
ok 57 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqCurrentTime')
ok 58 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('serverVersion')
ok 59 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('setServerLogLevel')
ok 60 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('checkMessages')
ok 61 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('TwsConnectionTime')
ok 62 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqMktData')
ok 63 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('cancelMktData')
ok 64 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('calculateImpliedVolatility')
ok 65 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('cancelCalculateImpliedVolatility')
ok 66 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('calculateOptionPrice')
ok 67 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('cancelCalculateOptionPrice')
ok 68 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('placeOrder')
ok 69 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('cancelOrder')
ok 70 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqOpenOrders')
ok 71 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqAllOpenOrders')
ok 72 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqAutoOpenOrders')
ok 73 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqIds')
ok 74 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('exerciseOptions')
ok 75 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqAccountUpdates')
ok 76 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqExecutions')
ok 77 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqContractDetails')
ok 78 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqMktDepth')
ok 79 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('cancelMktDepth')
ok 80 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqNewsBulletins')
ok 81 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('cancelNewsBulletins')
ok 82 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqManagedAccts')
ok 83 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('requestFA')
ok 84 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('replaceFA')
ok 85 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqHistoricalData')
ok 86 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('cancelHistoricalData')
ok 87 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqScannerParameters')
ok 88 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqScannerSubscription')
ok 89 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('cancelScannerSubscription')
ok 90 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqRealTimeBars')
ok 91 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('cancelRealTimeBars')
ok 92 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqFundamentalData')
ok 93 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('cancelFundamentalData')
ok 94 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqMarketDataType')
ok 95 - Finance::InteractiveBrokers::SWIG::IBAPI::IBAPIClient->can('reqGlobalCancel')
ok 96 - F::IB::SWIG::IBAPI::IBAPIClient::winError not present
ok 97 - F::IB::SWIG::IBAPI::IBAPIClient::error not present
ok 98 - F::IB::SWIG::IBAPI::IBAPIClient::connectionClosed not present
ok 99 - F::IB::SWIG::IBAPI::IBAPIClient::currentTime not present
ok 100 - F::IB::SWIG::IBAPI::IBAPIClient::tickPrice not present
ok 101 - F::IB::SWIG::IBAPI::IBAPIClient::tickSize not present
ok 102 - F::IB::SWIG::IBAPI::IBAPIClient::tickOptionComputation not present
ok 103 - F::IB::SWIG::IBAPI::IBAPIClient::tickGeneric not present
ok 104 - F::IB::SWIG::IBAPI::IBAPIClient::tickString not present
ok 105 - F::IB::SWIG::IBAPI::IBAPIClient::tickEFP not present
ok 106 - F::IB::SWIG::IBAPI::IBAPIClient::tickSnapshotEnd not present
ok 107 - F::IB::SWIG::IBAPI::IBAPIClient::orderStatus not present
ok 108 - F::IB::SWIG::IBAPI::IBAPIClient::openOrder not present
ok 109 - F::IB::SWIG::IBAPI::IBAPIClient::nextValidId not present
ok 110 - F::IB::SWIG::IBAPI::IBAPIClient::updateAccountValue not present
ok 111 - F::IB::SWIG::IBAPI::IBAPIClient::updatePortfolio not present
ok 112 - F::IB::SWIG::IBAPI::IBAPIClient::updateAccountTime not present
ok 113 - F::IB::SWIG::IBAPI::IBAPIClient::updateNewsBulletin not present
ok 114 - F::IB::SWIG::IBAPI::IBAPIClient::contractDetails not present
ok 115 - F::IB::SWIG::IBAPI::IBAPIClient::contractDetailsEnd not present
ok 116 - F::IB::SWIG::IBAPI::IBAPIClient::bondContractDetails not present
ok 117 - F::IB::SWIG::IBAPI::IBAPIClient::execDetails not present
ok 118 - F::IB::SWIG::IBAPI::IBAPIClient::execDetailsEnd not present
ok 119 - F::IB::SWIG::IBAPI::IBAPIClient::updateMktDepth not present
ok 120 - F::IB::SWIG::IBAPI::IBAPIClient::updateMktDepthL2 not present
ok 121 - F::IB::SWIG::IBAPI::IBAPIClient::managedAccounts not present
ok 122 - F::IB::SWIG::IBAPI::IBAPIClient::receiveFA not present
ok 123 - F::IB::SWIG::IBAPI::IBAPIClient::historicalData not present
ok 124 - F::IB::SWIG::IBAPI::IBAPIClient::scannerParameters not present
ok 125 - F::IB::SWIG::IBAPI::IBAPIClient::scannerData not present
ok 126 - F::IB::SWIG::IBAPI::IBAPIClient::scannerDataEnd not present
ok 127 - F::IB::SWIG::IBAPI::IBAPIClient::realtimeBar not present
ok 128 - F::IB::SWIG::IBAPI::IBAPIClient::fundamentalData not present
ok 129 - F::IB::SWIG::IBAPI::IBAPIClient::deltaNeutralValidation not present
ok 130 - F::IB::SWIG::IBAPI::IBAPIClient::openOrderEnd not present
ok 131 - F::IB::SWIG::IBAPI::IBAPIClient::accountDownloadEnd not present
ok 132 - F::IB::SWIG::IBAPI::IBAPIClient::marketDataType not present
1..132
ok
t/88-Finance-InteractiveBrokers-SWIG-EventHandler.t .. 
ok 1 - use Finance::InteractiveBrokers::SWIG::EventHandler;
ok 2 - Object is correctly undef
ok 3 - Requires subclass properly
ok 4 - require 'TestEventHandler.pm';
ok 5 - An object of class 'TestEventHandler' isa 'TestEventHandler'
ok 6 - An object of class 'TestEventHandler' isa 'Finance::InteractiveBrokers::SWIG::EventHandler'
ok 7 - api_version()
ok 8 - An object of class 'Finance::InteractiveBrokers::API' isa 'Finance::InteractiveBrokers::API'
ok 9 - override() correct
ok 10 - invalid event: kjwrlkajs
ok 11 - invalid event: opixzpcoi
ok 12 - invalid event: wnanmf
ok 13 - TestEventHandler: winError
ok 14 - TestEventHandler: error
ok 15 - TestEventHandler: connectionClosed
ok 16 - TestEventHandler: currentTime
ok 17 - TestEventHandler: tickPrice
ok 18 - TestEventHandler: tickSize
ok 19 - TestEventHandler: tickOptionComputation
ok 20 - TestEventHandler: tickGeneric
ok 21 - TestEventHandler: tickString
ok 22 - TestEventHandler: tickEFP
ok 23 - TestEventHandler: tickSnapshotEnd
ok 24 - TestEventHandler: orderStatus
ok 25 - TestEventHandler: openOrder
ok 26 - TestEventHandler: nextValidId
ok 27 - TestEventHandler: updateAccountValue
ok 28 - TestEventHandler: updatePortfolio
ok 29 - TestEventHandler: updateAccountTime
ok 30 - TestEventHandler: updateNewsBulletin
ok 31 - TestEventHandler: contractDetails
ok 32 - TestEventHandler: contractDetailsEnd
ok 33 - TestEventHandler: bondContractDetails
ok 34 - TestEventHandler: execDetails
ok 35 - TestEventHandler: execDetailsEnd
ok 36 - TestEventHandler: updateMktDepth
ok 37 - TestEventHandler: updateMktDepthL2
ok 38 - TestEventHandler: managedAccounts
ok 39 - TestEventHandler: receiveFA
ok 40 - TestEventHandler: historicalData
ok 41 - TestEventHandler: scannerParameters
ok 42 - TestEventHandler: scannerData
ok 43 - TestEventHandler: scannerDataEnd
ok 44 - TestEventHandler: realtimeBar
ok 45 - TestEventHandler: fundamentalData
ok 46 - TestEventHandler: deltaNeutralValidation
ok 47 - TestEventHandler: openOrderEnd
ok 48 - TestEventHandler: accountDownloadEnd
ok 49 - TestEventHandler: marketDataType
1..49
ok
t/89-Finance-InteractiveBrokers-SWIG.t ............... 
ok 1 - use Finance::InteractiveBrokers::SWIG;
ok 2 - Object undef
ok 3 - No handler passed
ok 4 - Object undef
ok 5 - Invalid handler passed
ok 6 - An object of class 'Finance::InteractiveBrokers::SWIG' isa 'Finance::InteractiveBrokers::SWIG'
ok 7 - An object of class 'TestEventHandler' isa 'Finance::InteractiveBrokers::SWIG::EventHandler'
ok 8 - An object of class 'TestEventHandler' isa 'TestEventHandler'
ok 9 - An object of class 'Finance::InteractiveBrokers::API' isa 'Finance::InteractiveBrokers::API'
ok 10 - api_version()
ok 11 - api_methods() correct
ok 12 - invalid method: gorsplatch
ok 13 - invalid method: freen
ok 14 - invalid method: basjhdahdjh
ok 15 - valid method: processMessages
ok 16 - processMessages retval correct
ok 17 - valid method: setSelectTimeout
ok 18 - setSelectTimeout retval correct
ok 19 - valid method: eConnect
ok 20 - eConnect retval correct
ok 21 - valid method: eDisconnect
ok 22 - eDisconnect retval correct
ok 23 - valid method: isConnected
ok 24 - isConnected retval correct
ok 25 - valid method: reqCurrentTime
ok 26 - reqCurrentTime retval correct
ok 27 - valid method: serverVersion
ok 28 - serverVersion retval correct
ok 29 - valid method: setServerLogLevel
ok 30 - setServerLogLevel retval correct
ok 31 - valid method: checkMessages
ok 32 - checkMessages retval correct
ok 33 - valid method: TwsConnectionTime
ok 34 - TwsConnectionTime retval correct
ok 35 - valid method: reqMktData
ok 36 - reqMktData retval correct
ok 37 - valid method: cancelMktData
ok 38 - cancelMktData retval correct
ok 39 - valid method: calculateImpliedVolatility
ok 40 - calculateImpliedVolatility retval correct
ok 41 - valid method: cancelCalculateImpliedVolatility
ok 42 - cancelCalculateImpliedVolatility retval correct
ok 43 - valid method: calculateOptionPrice
ok 44 - calculateOptionPrice retval correct
ok 45 - valid method: cancelCalculateOptionPrice
ok 46 - cancelCalculateOptionPrice retval correct
ok 47 - valid method: placeOrder
ok 48 - placeOrder retval correct
ok 49 - valid method: cancelOrder
ok 50 - cancelOrder retval correct
ok 51 - valid method: reqOpenOrders
ok 52 - reqOpenOrders retval correct
ok 53 - valid method: reqAllOpenOrders
ok 54 - reqAllOpenOrders retval correct
ok 55 - valid method: reqAutoOpenOrders
ok 56 - reqAutoOpenOrders retval correct
ok 57 - valid method: reqIds
ok 58 - reqIds retval correct
ok 59 - valid method: exerciseOptions
ok 60 - exerciseOptions retval correct
ok 61 - valid method: reqAccountUpdates
ok 62 - reqAccountUpdates retval correct
ok 63 - valid method: reqExecutions
ok 64 - reqExecutions retval correct
ok 65 - valid method: reqContractDetails
ok 66 - reqContractDetails retval correct
ok 67 - valid method: reqMktDepth
ok 68 - reqMktDepth retval correct
ok 69 - valid method: cancelMktDepth
ok 70 - cancelMktDepth retval correct
ok 71 - valid method: reqNewsBulletins
ok 72 - reqNewsBulletins retval correct
ok 73 - valid method: cancelNewsBulletins
ok 74 - cancelNewsBulletins retval correct
ok 75 - valid method: reqManagedAccts
ok 76 - reqManagedAccts retval correct
ok 77 - valid method: requestFA
ok 78 - requestFA retval correct
ok 79 - valid method: replaceFA
ok 80 - replaceFA retval correct
ok 81 - valid method: reqHistoricalData
ok 82 - reqHistoricalData retval correct
ok 83 - valid method: cancelHistoricalData
ok 84 - cancelHistoricalData retval correct
ok 85 - valid method: reqScannerParameters
ok 86 - reqScannerParameters retval correct
ok 87 - valid method: reqScannerSubscription
ok 88 - reqScannerSubscription retval correct
ok 89 - valid method: cancelScannerSubscription
ok 90 - cancelScannerSubscription retval correct
ok 91 - valid method: reqRealTimeBars
ok 92 - reqRealTimeBars retval correct
ok 93 - valid method: cancelRealTimeBars
ok 94 - cancelRealTimeBars retval correct
ok 95 - valid method: reqFundamentalData
ok 96 - reqFundamentalData retval correct
ok 97 - valid method: cancelFundamentalData
ok 98 - cancelFundamentalData retval correct
ok 99 - valid method: reqMarketDataType
ok 100 - reqMarketDataType retval correct
ok 101 - valid method: reqGlobalCancel
ok 102 - reqGlobalCancel retval correct
ok 103 - TestEventHandler: winError
ok 104 - TestEventHandler: error
ok 105 - TestEventHandler: connectionClosed
ok 106 - TestEventHandler: currentTime
ok 107 - TestEventHandler: tickPrice
ok 108 - TestEventHandler: tickSize
ok 109 - TestEventHandler: tickOptionComputation
ok 110 - TestEventHandler: tickGeneric
ok 111 - TestEventHandler: tickString
ok 112 - TestEventHandler: tickEFP
ok 113 - TestEventHandler: tickSnapshotEnd
ok 114 - TestEventHandler: orderStatus
ok 115 - TestEventHandler: openOrder
ok 116 - TestEventHandler: nextValidId
ok 117 - TestEventHandler: updateAccountValue
ok 118 - TestEventHandler: updatePortfolio
ok 119 - TestEventHandler: updateAccountTime
ok 120 - TestEventHandler: updateNewsBulletin
ok 121 - TestEventHandler: contractDetails
ok 122 - TestEventHandler: contractDetailsEnd
ok 123 - TestEventHandler: bondContractDetails
ok 124 - TestEventHandler: execDetails
ok 125 - TestEventHandler: execDetailsEnd
ok 126 - TestEventHandler: updateMktDepth
ok 127 - TestEventHandler: updateMktDepthL2
ok 128 - TestEventHandler: managedAccounts
ok 129 - TestEventHandler: receiveFA
ok 130 - TestEventHandler: historicalData
ok 131 - TestEventHandler: scannerParameters
ok 132 - TestEventHandler: scannerData
ok 133 - TestEventHandler: scannerDataEnd
ok 134 - TestEventHandler: realtimeBar
ok 135 - TestEventHandler: fundamentalData
ok 136 - TestEventHandler: deltaNeutralValidation
ok 137 - TestEventHandler: openOrderEnd
ok 138 - TestEventHandler: accountDownloadEnd
ok 139 - TestEventHandler: marketDataType
1..139
ok
t/boilerplate.t ...................................... 
1..3
ok 1 - README contains no boilerplate text
ok 2 - Changes contains no boilerplate text
ok 3 - lib/Finance/InteractiveBrokers/SWIG.pm contains no boilerplate text
ok
t/manifest.t ......................................... skipped: Author tests not required for installation
t/pod-coverage.t ..................................... skipped: Test::Pod::Coverage 1.08 required for testing POD coverage
t/pod.t .............................................. skipped: Test::Pod 1.22 required for testing POD
t/regression/001-fibswig-resolve_host.t .............. 
1..4
ok 1 - use Finance::InteractiveBrokers::SWIG;
ok 2 - Hostname exists # TODO DNS resolution may not work everywhere.
ok 3 - Addresses existed # TODO DNS resolution may not work everywhere.
ok 4 - Addresses returned more than 0 values # TODO DNS resolution may not work everywhere.
ok
t/regression/002-fibswig-typedef-ibstring.t .......... 
1..4
ok 1 - use Finance::InteractiveBrokers::SWIG;
ok 2 - use Finance::InteractiveBrokers::SWIG::IBAPI;
ok 3 - An object of class 'Finance::InteractiveBrokers::SWIG::IBAPI::Contract' isa 'Finance::InteractiveBrokers::SWIG::IBAPI::Contract'
# 
ok 4 - No exception thrown when using IBString
ok
t/regression/003-fibswig-timeout.t ................... 
1..5
ok 1 - use Finance::InteractiveBrokers::SWIG;
ok 2 - use Finance::InteractiveBrokers::SWIG::IBAPI;
ok 3 - use TestEventHandler;
# 
ok 4 - No exception thrown when using setSelectTimeout(42)
# 
ok 5 - No exception thrown when using setSelectTimeout(-42)
ok
All tests successful.

Test Summary Report
-------------------
t/regression/001-fibswig-resolve_host.t            (Wstat: 0 Tests: 4 Failed: 0)
  TODO passed:   2-4
Files=11, Tests=337,  1 wallclock secs ( 0.12 usr  0.02 sys +  0.86 cusr  0.06 csys =  1.06 CPU)
Result: PASS
