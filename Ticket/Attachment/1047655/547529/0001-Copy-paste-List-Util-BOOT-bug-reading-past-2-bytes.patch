[#CPAN 72700] https://rt.cpan.org/Public/Bug/Display.html?id=72700

From fcda72764b78c8512a04347f3f18fb7549582f0a Mon Sep 17 00:00:00 2001
From: Reini Urban <rurban@x-ray.at>
Date: Wed, 23 Nov 2011 18:10:26 -0600
Subject: [PATCH] Copy&paste List::Util BOOT bug, reading past 2 bytes
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="------------1.7.5.4"

This is a multi-part message in MIME format.
--------------1.7.5.4
Content-Type: text/plain; charset=UTF-8; format=fixed
Content-Transfer-Encoding: 8bit


See http://blogs.perl.org/users/rurban/2011/11/adventures-with-clang-and-asan.html
how I found these and many more invalid memory read+write bugs with clang and Google ASan.

This does not look security relevant to me.
---
 cpan/List-Util/ListUtil.xs |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)


--------------1.7.5.4
Content-Type: text/x-patch; name="0001-Copy-paste-List-Util-BOOT-bug-reading-past-2-bytes.patch"
Content-Transfer-Encoding: 8bit
Content-Disposition: attachment; filename="0001-Copy-paste-List-Util-BOOT-bug-reading-past-2-bytes.patch"

diff --git a/cpan/List-Util/ListUtil.xs b/cpan/List-Util/ListUtil.xs
index 7da9b95..eacdde4 100644
--- a/cpan/List-Util/ListUtil.xs
+++ b/cpan/List-Util/ListUtil.xs
@@ -595,7 +595,7 @@ BOOT:
     varav = GvAVn(vargv);
 #endif
     if (SvTYPE(rmcgv) != SVt_PVGV)
-	gv_init(rmcgv, lu_stash, "List::Util", 12, TRUE);
+	gv_init(rmcgv, lu_stash, "List::Util", 10, TRUE);
     rmcsv = GvSVn(rmcgv);
 #ifndef SvWEAKREF
     av_push(varav, newSVpv("weaken",6));

--------------1.7.5.4--


