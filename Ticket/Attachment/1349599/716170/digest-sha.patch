Description: use Digest::SHA instead of Digest::SHA1
Origin: vendor
Bug: https://rt.cpan.org/Ticket/Display.html?id=68181
Forwarded: no
Author: gregor herrmann <gregoa@debian.org>
Last-Update: 2011-08-08

--- a/Build.PL
+++ b/Build.PL
@@ -10,7 +10,7 @@
     dist_version_from   => 'lib/Net/XMPP.pm',
     requires => {
         'XML::Stream' => 1.22,
-        'Digest::SHA1' => 1.02,
+        'Digest::SHA' => 0,
     	},
     create_makefile_pl => 'passthrough',
 );
--- a/lib/Net/XMPP/Protocol.pm
+++ b/lib/Net/XMPP/Protocol.pm
@@ -1880,12 +1880,12 @@
     #--------------------------------------------------------------------------
     if ($authType eq "zerok")
     {
-        my $hashA = Digest::SHA1::sha1_hex(delete($args{password}));
-        $args{hash} = Digest::SHA1::sha1_hex($hashA.$token);
+        my $hashA = Digest::SHA::sha1_hex(delete($args{password}));
+        $args{hash} = Digest::SHA::sha1_hex($hashA.$token);
 
         for (1..$sequence)
         {
-            $args{hash} = Digest::SHA1::sha1_hex($args{hash});
+            $args{hash} = Digest::SHA::sha1_hex($args{hash});
         }
     }
 
@@ -1900,7 +1900,7 @@
     if ($authType eq "digest")
     {
         my $password = delete($args{password});
-        $args{digest} = Digest::SHA1::sha1_hex($self->GetStreamID().$password);
+        $args{digest} = Digest::SHA::sha1_hex($self->GetStreamID().$password);
     }
 
     #--------------------------------------------------------------------------
--- a/META.yml
+++ b/META.yml
@@ -9,7 +9,7 @@
   license: |-
     http://opensource.org/licenses/artistic-license.php
 requires:
-  Digest::SHA1: 1.02
+  Digest::SHA: 0
   XML::Stream: 1.22
 provides:
   Net::XMPP:
--- a/lib/Net/XMPP.pm
+++ b/lib/Net/XMPP.pm
@@ -219,7 +219,7 @@
 use XML::Stream 1.22 qw( Node );
 use Time::Local;
 use Carp;
-use Digest::SHA1;
+use Digest::SHA;
 use Authen::SASL;
 use MIME::Base64;
 use POSIX;
