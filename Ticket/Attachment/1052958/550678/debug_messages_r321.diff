Index: SSLeay.xs
===================================================================
--- SSLeay.xs	(revision 321)
+++ SSLeay.xs	(working copy)
@@ -196,6 +196,7 @@
 {
     int i;
  
+    warn("DEBUG: init - begin\n");
     /* initialize static locking */
     if ( !CRYPTO_get_locking_callback() ) {        
 #if OPENSSL_VERSION_NUMBER < 0x10000000L
@@ -204,6 +205,7 @@
         if ( !CRYPTO_THREADID_get_callback() ) {
 #endif
     
+            warn("DEBUG: setting static locking\n");
             New(0, GLOBAL_openssl_mutex, CRYPTO_num_locks(), perl_mutex);	
             if (!GLOBAL_openssl_mutex) return;    
             for (i=0; i<CRYPTO_num_locks(); i++) MUTEX_INIT(&GLOBAL_openssl_mutex[i]);
@@ -225,11 +227,13 @@
     if ( !CRYPTO_get_dynlock_create_callback() &&
          !CRYPTO_get_dynlock_lock_callback() &&
          !CRYPTO_get_dynlock_destroy_callback() ) {        
+        warn("DEBUG: setting dynamic locking\n");
         CRYPTO_set_dynlock_create_callback(openssl_dynlocking_create_function);
         CRYPTO_set_dynlock_lock_callback(openssl_dynlocking_lock_function);
         CRYPTO_set_dynlock_destroy_callback(openssl_dynlocking_destroy_function);        
     }
 #endif   
+    warn("DEBUG: init - end\n");
 }
 
 #endif
@@ -945,6 +949,7 @@
 
 BOOT:
     {
+    warn("DEBUG: BOOT start\n");
     MY_CXT_INIT;
     LIB_initialized = 0;
 #ifdef USE_ITHREADS
@@ -958,6 +963,7 @@
     MY_CXT.ssleay_ctx_cert_verify_cbs = (HV*)NULL;
     MY_CXT.ssleay_session_secret_cbs = (HV*)NULL;
     MY_CXT.tid = get_my_thread_id();
+    warn("DEBUG: BOOT done: tid=%d my_perl=%p\n", MY_CXT.tid, my_perl);
     }
 
 void
@@ -972,6 +978,7 @@
     MY_CXT.ssleay_ctx_cert_verify_cbs = (HV*)NULL;
     MY_CXT.ssleay_session_secret_cbs = (HV*)NULL;
     MY_CXT.tid = get_my_thread_id();
+    warn("DEBUG: CLONE tid=%d my_perl=%p\n", MY_CXT.tid, my_perl);
 
 double
 constant(name)
