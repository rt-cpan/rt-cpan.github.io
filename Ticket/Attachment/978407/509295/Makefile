# This Makefile is for the Pango extension to perl.
#
# It was generated automatically by MakeMaker version
# 6.56 (Revision: 65600) from the contents of
# Makefile.PL. Don't edit this file, edit Makefile.PL instead.
#
#       ANY CHANGES MADE HERE WILL BE LOST!
#
#   MakeMaker ARGV: ()
#

#   MakeMaker Parameters:

#     ABSTRACT_FROM => q[lib/Pango.pm]
#     BUILD_REQUIRES => {  }
#     DL_FUNCS => { Pango=>[] }
#     FUNCLIST => [q[newSVPangoRectangle], q[SvPangoRectangle], q[gtk2perl_pango_attribute_get_type], q[gtk2perl_pango_attribute_register_custom_type], q[gtk2perl_pango_attr_iterator_get_type], q[gtk2perl_pango_layout_iter_get_type], q[gtk2perl_pango_layout_line_get_type], q[gtk2perl_pango_script_iter_get_type]]
#     INC => q[-mms-bitfields -IC:/sources/glibbin/include/pango-1.0 -IC:/sources/glibbin/include/glib-2.0 -IC:/sources/glibbin/lib/glib-2.0/include -I./build -IC:/sources/glibbin/include/cairo -IC:/sources/glibbin/include -IC:/sources/glibbin/include/freetype2 -IC:/sources/glibbin/include/libpng14 -IC:\perl512\site\lib\Glib\Install -I. -IC:\perl512\site\lib\Cairo\Install -Ibuild]
#     LIBS => q[-LC:/perl512/site/lib/auto/Glib -lGlib -LC:/perl512/site/lib/auto/Cairo -lCairo -LC:/sources/glibbin/lib -lpango-1.0 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lglib-2.0 -lintl -lpangocairo-1.0 -lcairo -lfreetype]
#     MAN3PODS => { $(INST_LIB)\Pango\FontDescription.pod=>q[$(INST_MAN3DIR)/Pango::FontDescription.$(MAN3EXT)], $(INST_LIB)\Pango\Context.pod=>q[$(INST_MAN3DIR)/Pango::Context.$(MAN3EXT)], $(INST_LIB)\Pango\Cairo.pod=>q[$(INST_MAN3DIR)/Pango::Cairo.$(MAN3EXT)], $(INST_LIB)\Pango\Font.pod=>q[$(INST_MAN3DIR)/Pango::Font.$(MAN3EXT)], $(INST_LIB)\Pango\FontMetrics.pod=>q[$(INST_MAN3DIR)/Pango::FontMetrics.$(MAN3EXT)], $(INST_LIB)\Pango\AttrScale.pod=>q[$(INST_MAN3DIR)/Pango::AttrScale.$(MAN3EXT)], $(INST_LIB)\Pango\LayoutLine.pod=>q[$(INST_MAN3DIR)/Pango::LayoutLine.$(MAN3EXT)], $(INST_LIB)\Pango\AttrFallback.pod=>q[$(INST_MAN3DIR)/Pango::AttrFallback.$(MAN3EXT)], $(INST_LIB)\Pango\Renderer.pod=>q[$(INST_MAN3DIR)/Pango::Renderer.$(MAN3EXT)], $(INST_LIB)/$(FULLEXT)/index.pod=>q[$(INST_MAN3DIR)/$(NAME)::index.$(MAN3EXT)], $(INST_LIB)\Pango\AttrShape.pod=>q[$(INST_MAN3DIR)/Pango::AttrShape.$(MAN3EXT)], $(INST_LIB)\Pango\Layout.pod=>q[$(INST_MAN3DIR)/Pango::Layout.$(MAN3EXT)], $(INST_LIB)\Pango\Script.pod=>q[$(INST_MAN3DIR)/Pango::Script.$(MAN3EXT)], $(INST_LIB)\Pango\AttrLanguage.pod=>q[$(INST_MAN3DIR)/Pango::AttrLanguage.$(MAN3EXT)], $(INST_LIB)\Pango\AttrForeground.pod=>q[$(INST_MAN3DIR)/Pango::AttrForeground.$(MAN3EXT)], $(INST_LIB)\Pango\FontMap.pod=>q[$(INST_MAN3DIR)/Pango::FontMap.$(MAN3EXT)], $(INST_LIB)\Pango\Language.pod=>q[$(INST_MAN3DIR)/Pango::Language.$(MAN3EXT)], $(INST_LIB)\Pango\FontFamily.pod=>q[$(INST_MAN3DIR)/Pango::FontFamily.$(MAN3EXT)], $(INST_LIB)\Pango\AttrFamily.pod=>q[$(INST_MAN3DIR)/Pango::AttrFamily.$(MAN3EXT)], $(INST_LIB)\Pango\FontFace.pod=>q[$(INST_MAN3DIR)/Pango::FontFace.$(MAN3EXT)], $(INST_LIB)\Pango\Color.pod=>q[$(INST_MAN3DIR)/Pango::Color.$(MAN3EXT)], $(INST_LIB)\Pango\AttrStrikethroughColor.pod=>q[$(INST_MAN3DIR)/Pango::AttrStrikethroughColor.$(MAN3EXT)], $(INST_LIB)\Pango\AttrStrikethrough.pod=>q[$(INST_MAN3DIR)/Pango::AttrStrikethrough.$(MAN3EXT)], $(INST_LIB)\Pango\AttrVariant.pod=>q[$(INST_MAN3DIR)/Pango::AttrVariant.$(MAN3EXT)], $(INST_LIB)\Pango\AttrUnderlineColor.pod=>q[$(INST_MAN3DIR)/Pango::AttrUnderlineColor.$(MAN3EXT)], $(INST_LIB)\Pango\AttrIterator.pod=>q[$(INST_MAN3DIR)/Pango::AttrIterator.$(MAN3EXT)], $(INST_LIB)\Pango\AttrFontDesc.pod=>q[$(INST_MAN3DIR)/Pango::AttrFontDesc.$(MAN3EXT)], $(INST_LIB)\Pango\Cairo\Font.pod=>q[$(INST_MAN3DIR)/Pango::Cairo::Font.$(MAN3EXT)], $(INST_LIB)\Pango\AttrSize.pod=>q[$(INST_MAN3DIR)/Pango::AttrSize.$(MAN3EXT)], $(INST_LIB)\Pango\AttrStretch.pod=>q[$(INST_MAN3DIR)/Pango::AttrStretch.$(MAN3EXT)], $(INST_LIB)\Pango\AttrGravity.pod=>q[$(INST_MAN3DIR)/Pango::AttrGravity.$(MAN3EXT)], $(INST_LIB)\Pango\Fontset.pod=>q[$(INST_MAN3DIR)/Pango::Fontset.$(MAN3EXT)], $(INST_LIB)\Pango\version.pod=>q[$(INST_MAN3DIR)/Pango::version.$(MAN3EXT)], $(INST_LIB)\Pango\AttrStyle.pod=>q[$(INST_MAN3DIR)/Pango::AttrStyle.$(MAN3EXT)], $(INST_LIB)\Pango\AttrRise.pod=>q[$(INST_MAN3DIR)/Pango::AttrRise.$(MAN3EXT)], $(INST_LIB)\Pango\TabArray.pod=>q[$(INST_MAN3DIR)/Pango::TabArray.$(MAN3EXT)], $(INST_LIB)\Pango\AttrLetterSpacing.pod=>q[$(INST_MAN3DIR)/Pango::AttrLetterSpacing.$(MAN3EXT)], lib/Pango.pm=>q[$(INST_MAN3DIR)/Pango.$(MAN3EXT)], $(INST_LIB)\Pango\AttrString.pod=>q[$(INST_MAN3DIR)/Pango::AttrString.$(MAN3EXT)], $(INST_LIB)\Pango\AttrBackground.pod=>q[$(INST_MAN3DIR)/Pango::AttrBackground.$(MAN3EXT)], $(INST_LIB)\Pango\Cairo\FontMap.pod=>q[$(INST_MAN3DIR)/Pango::Cairo::FontMap.$(MAN3EXT)], $(INST_LIB)\Pango\AttrList.pod=>q[$(INST_MAN3DIR)/Pango::AttrList.$(MAN3EXT)], $(INST_LIB)\Pango\ScriptIter.pod=>q[$(INST_MAN3DIR)/Pango::ScriptIter.$(MAN3EXT)], $(INST_LIB)\Pango\LayoutIter.pod=>q[$(INST_MAN3DIR)/Pango::LayoutIter.$(MAN3EXT)], $(INST_LIB)\Pango\Cairo\Context.pod=>q[$(INST_MAN3DIR)/Pango::Cairo::Context.$(MAN3EXT)], $(INST_LIB)\Pango\AttrColor.pod=>q[$(INST_MAN3DIR)/Pango::AttrColor.$(MAN3EXT)], $(INST_LIB)\Pango\AttrInt.pod=>q[$(INST_MAN3DIR)/Pango::AttrInt.$(MAN3EXT)], $(INST_LIB)\Pango\AttrUnderline.pod=>q[$(INST_MAN3DIR)/Pango::AttrUnderline.$(MAN3EXT)], $(INST_LIB)\Pango\AttrGravityHint.pod=>q[$(INST_MAN3DIR)/Pango::AttrGravityHint.$(MAN3EXT)], $(INST_LIB)\Pango\Matrix.pod=>q[$(INST_MAN3DIR)/Pango::Matrix.$(MAN3EXT)], $(INST_LIB)\Pango\AttrWeight.pod=>q[$(INST_MAN3DIR)/Pango::AttrWeight.$(MAN3EXT)], $(INST_LIB)\Pango\Gravity.pod=>q[$(INST_MAN3DIR)/Pango::Gravity.$(MAN3EXT)], $(INST_LIB)\Pango\Attribute.pod=>q[$(INST_MAN3DIR)/Pango::Attribute.$(MAN3EXT)] }
#     META_MERGE => { no_index=>{ file=>[q[xs/Pango.xs], q[xs/PangoAttributes.xs], q[xs/PangoContext.xs], q[xs/PangoFont.xs], q[xs/PangoFontset.xs], q[xs/PangoFontMap.xs], q[xs/PangoLayout.xs], q[xs/PangoRenderer.xs], q[xs/PangoScript.xs], q[xs/PangoTabs.xs], q[xs/PangoTypes.xs], q[xs/PangoCairo.xs], q[xs/PangoGravity.xs], q[xs/PangoMatrix.xs]] }, configure_requires=>{ Glib=>q[1.220], ExtUtils::Depends=>q[0.300], Cairo=>q[1.000], ExtUtils::PkgConfig=>q[1.030] } }
#     NAME => q[Pango]
#     OBJECT => q[xs/Pango$(OBJ_EXT) xs/PangoAttributes$(OBJ_EXT) xs/PangoContext$(OBJ_EXT) xs/PangoFont$(OBJ_EXT) xs/PangoFontset$(OBJ_EXT) xs/PangoFontMap$(OBJ_EXT) xs/PangoLayout$(OBJ_EXT) xs/PangoRenderer$(OBJ_EXT) xs/PangoScript$(OBJ_EXT) xs/PangoTabs$(OBJ_EXT) xs/PangoTypes$(OBJ_EXT) xs/PangoCairo$(OBJ_EXT) xs/PangoGravity$(OBJ_EXT) xs/PangoMatrix$(OBJ_EXT)]
#     PM => { build/IFiles.pm=>q[$(INST_ARCHLIB)/$(FULLEXT)/Install/Files.pm], pango-perl.h=>q[$(INST_ARCHLIB)/$(FULLEXT)/Install/pango-perl.h], build/pango-perl-autogen.h=>q[$(INST_ARCHLIB)/$(FULLEXT)/Install/pango-perl-autogen.h], C:\sources\Pango-1.222\build\pango-perl.typemap=>q[$(INST_ARCHLIB)/$(FULLEXT)/Install/pango-perl.typemap], build/pango-perl-versions.h=>q[$(INST_ARCHLIB)/$(FULLEXT)/Install/pango-perl-versions.h], C:\sources\Pango-1.222\pango.typemap=>q[$(INST_ARCHLIB)/$(FULLEXT)/Install/pango.typemap], doctypes=>q[$(INST_ARCHLIB)/$(FULLEXT)/Install/doctypes], lib/Pango.pm=>q[$(INST_LIBDIR)/Pango.pm] }
#     PREREQ_PM => { ExtUtils::Depends=>q[0.300], Glib=>q[1.220], ExtUtils::PkgConfig=>q[1.030], Cairo=>q[1.000] }
#     TYPEMAPS => [q[C:\sources\Pango-1.222\build\pango-perl.typemap], q[C:\sources\Pango-1.222\pango.typemap], q[C:\perl512\site\lib\Glib\Install\typemap], q[C:\perl512\site\lib\Cairo\Install\cairo-perl-auto.typemap], q[C:\perl512\site\lib\Cairo\Install\cairo-perl.typemap]]
#     VERSION_FROM => q[lib/Pango.pm]
#     XS => { xs/Pango.xs=>q[xs/Pango.c], xs/PangoFontMap.xs=>q[xs/PangoFontMap.c], xs/PangoFont.xs=>q[xs/PangoFont.c], xs/PangoFontset.xs=>q[xs/PangoFontset.c], xs/PangoRenderer.xs=>q[xs/PangoRenderer.c], xs/PangoGravity.xs=>q[xs/PangoGravity.c], xs/PangoTypes.xs=>q[xs/PangoTypes.c], xs/PangoMatrix.xs=>q[xs/PangoMatrix.c], xs/PangoCairo.xs=>q[xs/PangoCairo.c], xs/PangoContext.xs=>q[xs/PangoContext.c], xs/PangoScript.xs=>q[xs/PangoScript.c], xs/PangoTabs.xs=>q[xs/PangoTabs.c], xs/PangoAttributes.xs=>q[xs/PangoAttributes.c], xs/PangoLayout.xs=>q[xs/PangoLayout.c] }
#     XSPROTOARG => q[-noprototypes]
#     clean => { FILES=>q[xs/Pango$(OBJ_EXT) xs/PangoAttributes$(OBJ_EXT) xs/PangoContext$(OBJ_EXT) xs/PangoFont$(OBJ_EXT) xs/PangoFontset$(OBJ_EXT) xs/PangoFontMap$(OBJ_EXT) xs/PangoLayout$(OBJ_EXT) xs/PangoRenderer$(OBJ_EXT) xs/PangoScript$(OBJ_EXT) xs/PangoTabs$(OBJ_EXT) xs/PangoTypes$(OBJ_EXT) xs/PangoCairo$(OBJ_EXT) xs/PangoGravity$(OBJ_EXT) xs/PangoMatrix$(OBJ_EXT)] }
#     macro => { INST_DYNAMIC_LIB=>q[$(INST_ARCHAUTODIR)/$(BASEEXT)$(LIB_EXT)] }

# --- MakeMaker post_initialize section:


# --- MakeMaker const_config section:

# These definitions are from config.sh (via C:/perl512/lib/Config.pm).
# They may have been overridden via Makefile.PL or on the command line.
AR = lib
CC = cl
CCCDLFLAGS =  
CCDLFLAGS =  
DLEXT = dll
DLSRC = dl_win32.xs
EXE_EXT = .exe
FULL_AR = 
LD = link
LDDLFLAGS = -dll -nologo -nodefaultlib -debug  -libpath:"c:\perl512\lib\CORE"  -machine:x86
LDFLAGS = -nologo -nodefaultlib -debug  -libpath:"c:\perl512\lib\CORE"  -machine:x86
LIBC = msvcrt.lib
LIB_EXT = .lib
OBJ_EXT = .obj
OSNAME = MSWin32
OSVERS = 5.1
RANLIB = rem
SITELIBEXP = c:\perl512\site\lib
SITEARCHEXP = c:\perl512\site\lib
SO = dll
VENDORARCHEXP = 
VENDORLIBEXP = 


# --- MakeMaker constants section:
AR_STATIC_ARGS = cr
DIRFILESEP = ^\
DFSEP = $(DIRFILESEP)
NAME = Pango
NAME_SYM = Pango
VERSION = 1.222
VERSION_MACRO = VERSION
VERSION_SYM = 1_222
DEFINE_VERSION = -D$(VERSION_MACRO)=\"$(VERSION)\"
XS_VERSION = 1.222
XS_VERSION_MACRO = XS_VERSION
XS_DEFINE_VERSION = -D$(XS_VERSION_MACRO)=\"$(XS_VERSION)\"
INST_ARCHLIB = blib\arch
INST_SCRIPT = blib\script
INST_BIN = blib\bin
INST_LIB = blib\lib
INST_MAN1DIR = blib\man1
INST_MAN3DIR = blib\man3
MAN1EXT = 1
MAN3EXT = 3
INSTALLDIRS = site
DESTDIR = 
PREFIX = $(SITEPREFIX)
PERLPREFIX = c:\perl512
SITEPREFIX = c:\perl512\site
VENDORPREFIX = 
INSTALLPRIVLIB = c:\perl512\lib
DESTINSTALLPRIVLIB = $(DESTDIR)$(INSTALLPRIVLIB)
INSTALLSITELIB = c:\perl512\site\lib
DESTINSTALLSITELIB = $(DESTDIR)$(INSTALLSITELIB)
INSTALLVENDORLIB = 
DESTINSTALLVENDORLIB = $(DESTDIR)$(INSTALLVENDORLIB)
INSTALLARCHLIB = c:\perl512\lib
DESTINSTALLARCHLIB = $(DESTDIR)$(INSTALLARCHLIB)
INSTALLSITEARCH = c:\perl512\site\lib
DESTINSTALLSITEARCH = $(DESTDIR)$(INSTALLSITEARCH)
INSTALLVENDORARCH = 
DESTINSTALLVENDORARCH = $(DESTDIR)$(INSTALLVENDORARCH)
INSTALLBIN = c:\perl512\bin
DESTINSTALLBIN = $(DESTDIR)$(INSTALLBIN)
INSTALLSITEBIN = c:\perl512\bin
DESTINSTALLSITEBIN = $(DESTDIR)$(INSTALLSITEBIN)
INSTALLVENDORBIN = 
DESTINSTALLVENDORBIN = $(DESTDIR)$(INSTALLVENDORBIN)
INSTALLSCRIPT = c:\perl512\bin
DESTINSTALLSCRIPT = $(DESTDIR)$(INSTALLSCRIPT)
INSTALLSITESCRIPT = $(INSTALLSCRIPT)
DESTINSTALLSITESCRIPT = $(DESTDIR)$(INSTALLSITESCRIPT)
INSTALLVENDORSCRIPT = 
DESTINSTALLVENDORSCRIPT = $(DESTDIR)$(INSTALLVENDORSCRIPT)
INSTALLMAN1DIR = c:\perl512\man\man1
DESTINSTALLMAN1DIR = $(DESTDIR)$(INSTALLMAN1DIR)
INSTALLSITEMAN1DIR = $(INSTALLMAN1DIR)
DESTINSTALLSITEMAN1DIR = $(DESTDIR)$(INSTALLSITEMAN1DIR)
INSTALLVENDORMAN1DIR = 
DESTINSTALLVENDORMAN1DIR = $(DESTDIR)$(INSTALLVENDORMAN1DIR)
INSTALLMAN3DIR = c:\perl512\man\man3
DESTINSTALLMAN3DIR = $(DESTDIR)$(INSTALLMAN3DIR)
INSTALLSITEMAN3DIR = $(INSTALLMAN3DIR)
DESTINSTALLSITEMAN3DIR = $(DESTDIR)$(INSTALLSITEMAN3DIR)
INSTALLVENDORMAN3DIR = 
DESTINSTALLVENDORMAN3DIR = $(DESTDIR)$(INSTALLVENDORMAN3DIR)
PERL_LIB = c:\perl512\lib
PERL_ARCHLIB = c:\perl512\lib
LIBPERL_A = libperl.lib
FIRST_MAKEFILE = Makefile
MAKEFILE_OLD = Makefile.old
MAKE_APERL_FILE = Makefile.aperl
PERLMAINCC = $(CC)
PERL_INC = C:\perl512\lib\CORE
PERL = C:\perl512\bin\perl.exe
FULLPERL = C:\perl512\bin\perl.exe
ABSPERL = $(PERL)
PERLRUN = $(PERL)
FULLPERLRUN = $(FULLPERL)
ABSPERLRUN = $(ABSPERL)
PERLRUNINST = $(PERLRUN) "-I$(INST_ARCHLIB)" "-I$(INST_LIB)"
FULLPERLRUNINST = $(FULLPERLRUN) "-I$(INST_ARCHLIB)" "-I$(INST_LIB)"
ABSPERLRUNINST = $(ABSPERLRUN) "-I$(INST_ARCHLIB)" "-I$(INST_LIB)"
PERL_CORE = 0
PERM_DIR = 755
PERM_RW = 644
PERM_RWX = 755

MAKEMAKER   = C:/perl512/lib/ExtUtils/MakeMaker.pm
MM_VERSION  = 6.56
MM_REVISION = 65600

# FULLEXT = Pathname for extension directory (eg Foo/Bar/Oracle).
# BASEEXT = Basename part of FULLEXT. May be just equal FULLEXT. (eg Oracle)
# PARENT_NAME = NAME without BASEEXT and no trailing :: (eg Foo::Bar)
# DLBASE  = Basename part of dynamic library. May be just equal BASEEXT.
MAKE = nmake
FULLEXT = Pango
BASEEXT = Pango
PARENT_NAME = 
DLBASE = $(BASEEXT)
VERSION_FROM = lib/Pango.pm
INC = -mms-bitfields -IC:/sources/glibbin/include/pango-1.0 -IC:/sources/glibbin/include/glib-2.0 -IC:/sources/glibbin/lib/glib-2.0/include -I./build -IC:/sources/glibbin/include/cairo -IC:/sources/glibbin/include -IC:/sources/glibbin/include/freetype2 -IC:/sources/glibbin/include/libpng14 -IC:\perl512\site\lib\Glib\Install -I. -IC:\perl512\site\lib\Cairo\Install -Ibuild
OBJECT = xs/Pango$(OBJ_EXT) xs/PangoAttributes$(OBJ_EXT) xs/PangoContext$(OBJ_EXT) xs/PangoFont$(OBJ_EXT) xs/PangoFontset$(OBJ_EXT) xs/PangoFontMap$(OBJ_EXT) xs/PangoLayout$(OBJ_EXT) xs/PangoRenderer$(OBJ_EXT) xs/PangoScript$(OBJ_EXT) xs/PangoTabs$(OBJ_EXT) xs/PangoTypes$(OBJ_EXT) xs/PangoCairo$(OBJ_EXT) xs/PangoGravity$(OBJ_EXT) xs/PangoMatrix$(OBJ_EXT)
LDFROM = $(OBJECT)
LINKTYPE = dynamic
BOOTDEP = 

# Handy lists of source code files:
XS_FILES = xs/Pango.xs \
	xs/PangoAttributes.xs \
	xs/PangoCairo.xs \
	xs/PangoContext.xs \
	xs/PangoFont.xs \
	xs/PangoFontMap.xs \
	xs/PangoFontset.xs \
	xs/PangoGravity.xs \
	xs/PangoLayout.xs \
	xs/PangoMatrix.xs \
	xs/PangoRenderer.xs \
	xs/PangoScript.xs \
	xs/PangoTabs.xs \
	xs/PangoTypes.xs
C_FILES  = 
O_FILES  = 
H_FILES  = pango-perl.h
MAN1PODS = 
MAN3PODS = $(INST_LIB)/$(FULLEXT)/index.pod \
	$(INST_LIB)\Pango\AttrBackground.pod \
	$(INST_LIB)\Pango\AttrColor.pod \
	$(INST_LIB)\Pango\AttrFallback.pod \
	$(INST_LIB)\Pango\AttrFamily.pod \
	$(INST_LIB)\Pango\AttrFontDesc.pod \
	$(INST_LIB)\Pango\AttrForeground.pod \
	$(INST_LIB)\Pango\AttrGravity.pod \
	$(INST_LIB)\Pango\AttrGravityHint.pod \
	$(INST_LIB)\Pango\AttrInt.pod \
	$(INST_LIB)\Pango\AttrIterator.pod \
	$(INST_LIB)\Pango\AttrLanguage.pod \
	$(INST_LIB)\Pango\AttrLetterSpacing.pod \
	$(INST_LIB)\Pango\AttrList.pod \
	$(INST_LIB)\Pango\AttrRise.pod \
	$(INST_LIB)\Pango\AttrScale.pod \
	$(INST_LIB)\Pango\AttrShape.pod \
	$(INST_LIB)\Pango\AttrSize.pod \
	$(INST_LIB)\Pango\AttrStretch.pod \
	$(INST_LIB)\Pango\AttrStrikethrough.pod \
	$(INST_LIB)\Pango\AttrStrikethroughColor.pod \
	$(INST_LIB)\Pango\AttrString.pod \
	$(INST_LIB)\Pango\AttrStyle.pod \
	$(INST_LIB)\Pango\AttrUnderline.pod \
	$(INST_LIB)\Pango\AttrUnderlineColor.pod \
	$(INST_LIB)\Pango\AttrVariant.pod \
	$(INST_LIB)\Pango\AttrWeight.pod \
	$(INST_LIB)\Pango\Attribute.pod \
	$(INST_LIB)\Pango\Cairo.pod \
	$(INST_LIB)\Pango\Cairo\Context.pod \
	$(INST_LIB)\Pango\Cairo\Font.pod \
	$(INST_LIB)\Pango\Cairo\FontMap.pod \
	$(INST_LIB)\Pango\Color.pod \
	$(INST_LIB)\Pango\Context.pod \
	$(INST_LIB)\Pango\Font.pod \
	$(INST_LIB)\Pango\FontDescription.pod \
	$(INST_LIB)\Pango\FontFace.pod \
	$(INST_LIB)\Pango\FontFamily.pod \
	$(INST_LIB)\Pango\FontMap.pod \
	$(INST_LIB)\Pango\FontMetrics.pod \
	$(INST_LIB)\Pango\Fontset.pod \
	$(INST_LIB)\Pango\Gravity.pod \
	$(INST_LIB)\Pango\Language.pod \
	$(INST_LIB)\Pango\Layout.pod \
	$(INST_LIB)\Pango\LayoutIter.pod \
	$(INST_LIB)\Pango\LayoutLine.pod \
	$(INST_LIB)\Pango\Matrix.pod \
	$(INST_LIB)\Pango\Renderer.pod \
	$(INST_LIB)\Pango\Script.pod \
	$(INST_LIB)\Pango\ScriptIter.pod \
	$(INST_LIB)\Pango\TabArray.pod \
	$(INST_LIB)\Pango\version.pod \
	lib/Pango.pm

# Where is the Config information that we are using/depend on
CONFIGDEP = $(PERL_ARCHLIB)$(DFSEP)Config.pm $(PERL_INC)$(DFSEP)config.h

# Where to build things
INST_LIBDIR      = $(INST_LIB)
INST_ARCHLIBDIR  = $(INST_ARCHLIB)

INST_AUTODIR     = $(INST_LIB)\auto\$(FULLEXT)
INST_ARCHAUTODIR = $(INST_ARCHLIB)\auto\$(FULLEXT)

INST_STATIC      = $(INST_ARCHAUTODIR)\$(BASEEXT)$(LIB_EXT)
INST_DYNAMIC     = $(INST_ARCHAUTODIR)\$(DLBASE).$(DLEXT)
INST_BOOT        = $(INST_ARCHAUTODIR)\$(BASEEXT).bs

# Extra linker info
EXPORT_LIST        = $(BASEEXT).def
PERL_ARCHIVE       = $(PERL_INC)\perl512.lib
PERL_ARCHIVE_AFTER = 


TO_INST_PM = C:\sources\Pango-1.222\build\pango-perl.typemap \
	C:\sources\Pango-1.222\pango.typemap \
	build/IFiles.pm \
	build/pango-perl-autogen.h \
	build/pango-perl-versions.h \
	doctypes \
	lib/Pango.pm \
	pango-perl.h

PM_TO_BLIB = build/IFiles.pm \
	$(INST_ARCHLIB)/$(FULLEXT)/Install/Files.pm \
	pango-perl.h \
	$(INST_ARCHLIB)/$(FULLEXT)/Install/pango-perl.h \
	build/pango-perl-autogen.h \
	$(INST_ARCHLIB)/$(FULLEXT)/Install/pango-perl-autogen.h \
	C:\sources\Pango-1.222\build\pango-perl.typemap \
	$(INST_ARCHLIB)/$(FULLEXT)/Install/pango-perl.typemap \
	build/pango-perl-versions.h \
	$(INST_ARCHLIB)/$(FULLEXT)/Install/pango-perl-versions.h \
	C:\sources\Pango-1.222\pango.typemap \
	$(INST_ARCHLIB)/$(FULLEXT)/Install/pango.typemap \
	doctypes \
	$(INST_ARCHLIB)/$(FULLEXT)/Install/doctypes \
	lib/Pango.pm \
	$(INST_LIBDIR)/Pango.pm


# --- MakeMaker platform_constants section:
MM_Win32_VERSION = 6.56


# --- MakeMaker tool_autosplit section:
# Usage: $(AUTOSPLITFILE) FileToSplit AutoDirToSplitInto
AUTOSPLITFILE = $(ABSPERLRUN)  -e "use AutoSplit;  autosplit($$ARGV[0], $$ARGV[1], 0, 1, 1)" --



# --- MakeMaker tool_xsubpp section:

XSUBPPDIR = C:\perl512\lib\ExtUtils
XSUBPP = $(XSUBPPDIR)$(DFSEP)xsubpp
XSUBPPRUN = $(PERLRUN) $(XSUBPP)
XSPROTOARG = -noprototypes
XSUBPPDEPS = C:\perl512\lib\ExtUtils\typemap C:\sources\Pango-1.222\build\pango-perl.typemap C:\sources\Pango-1.222\pango.typemap C:\perl512\site\lib\Glib\Install\typemap C:\perl512\site\lib\Cairo\Install\cairo-perl-auto.typemap C:\perl512\site\lib\Cairo\Install\cairo-perl.typemap $(XSUBPP)
XSUBPPARGS = -typemap C:\perl512\lib\ExtUtils\typemap -typemap C:\sources\Pango-1.222\build\pango-perl.typemap -typemap C:\sources\Pango-1.222\pango.typemap -typemap C:\perl512\site\lib\Glib\Install\typemap -typemap C:\perl512\site\lib\Cairo\Install\cairo-perl-auto.typemap -typemap C:\perl512\site\lib\Cairo\Install\cairo-perl.typemap
XSUBPP_EXTRA_ARGS = 


# --- MakeMaker tools_other section:
CHMOD = $(ABSPERLRUN) -MExtUtils::Command -e "chmod" --
CP = $(ABSPERLRUN) -MExtUtils::Command -e "cp" --
MV = $(ABSPERLRUN) -MExtUtils::Command -e "mv" --
NOOP = rem
NOECHO = 
RM_F = $(ABSPERLRUN) -MExtUtils::Command -e "rm_f" --
RM_RF = $(ABSPERLRUN) -MExtUtils::Command -e "rm_rf" --
TEST_F = $(ABSPERLRUN) -MExtUtils::Command -e "test_f" --
TOUCH = $(ABSPERLRUN) -MExtUtils::Command -e "touch" --
UMASK_NULL = umask 0
DEV_NULL = > NUL
MKPATH = $(ABSPERLRUN) -MExtUtils::Command -e "mkpath" --
EQUALIZE_TIMESTAMP = $(ABSPERLRUN) -MExtUtils::Command -e "eqtime" --
FALSE = $(ABSPERLRUN)  -e "exit 1" --
TRUE = $(ABSPERLRUN)  -e "exit 0" --
ECHO = $(ABSPERLRUN) -l -e "print qq{@ARGV}" --
ECHO_N = $(ABSPERLRUN)  -e "print qq{@ARGV}" --
UNINST = 0
VERBINST = 0
MOD_INSTALL = $(ABSPERLRUN) -MExtUtils::Install -e "install([ from_to => {@ARGV}, verbose => '$(VERBINST)', uninstall_shadows => '$(UNINST)', dir_mode => '$(PERM_DIR)' ]);" --
DOC_INSTALL = $(ABSPERLRUN) -MExtUtils::Command::MM -e "perllocal_install" --
UNINSTALL = $(ABSPERLRUN) -MExtUtils::Command::MM -e "uninstall" --
WARN_IF_OLD_PACKLIST = $(ABSPERLRUN) -MExtUtils::Command::MM -e "warn_if_old_packlist" --
MACROSTART = 
MACROEND = 
USEMAKEFILE = -f
FIXIN = pl2bat.bat


# --- MakeMaker makemakerdflt section:
makemakerdflt : all
	$(NOECHO) $(NOOP)


# --- MakeMaker dist section:
TAR = tar
TARFLAGS = cvf
ZIP = zip
ZIPFLAGS = -r
COMPRESS = gzip --best
SUFFIX = .gz
SHAR = shar
PREOP = $(NOECHO) $(NOOP)
POSTOP = $(NOECHO) $(NOOP)
TO_UNIX = $(NOECHO) $(NOOP)
CI = ci -u
RCS_LABEL = rcs -Nv$(VERSION_SYM): -q
DIST_CP = best
DIST_DEFAULT = tardist
DISTNAME = Pango
DISTVNAME = Pango-1.222


# --- MakeMaker macro section:
INST_DYNAMIC_LIB = $(INST_ARCHAUTODIR)/$(BASEEXT)$(LIB_EXT)


# --- MakeMaker depend section:


# --- MakeMaker cflags section:

CCFLAGS = -nologo -GF -W3 -Od -MD -Zi -DDEBUGGING -DWIN32 -D_CONSOLE -DNO_STRICT -DHAVE_DES_FCRYPT -DPERL_IMPLICIT_CONTEXT -DPERL_IMPLICIT_SYS -DUSE_PERLIO
OPTIMIZE = -Od -MD -Zi -DDEBUGGING
PERLTYPE = 


# --- MakeMaker const_loadlibs section:

# Pango might depend on some other libraries:
# See ExtUtils::Liblist for details
#
EXTRALIBS = C:\perl512\site\lib\auto\Glib\Glib.lib C:\perl512\site\lib\auto\Cairo\Cairo.lib C:\sources\glibbin\lib\pango-1.0.lib C:\sources\glibbin\lib\gobject-2.0.lib C:\sources\glibbin\lib\gmodule-2.0.lib C:\sources\glibbin\lib\gthread-2.0.lib C:\sources\glibbin\lib\glib-2.0.lib C:\sources\glibbin\lib\libintl.lib C:\sources\glibbin\lib\pangocairo-1.0.lib C:\perl512\site\lib\auto\Cairo\cairo.lib C:\sources\glibbin\lib\freetype.lib "c:\Program Files\Microsoft Visual Studio .NET 2003\VC7\lib\oldnames.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\kernel32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\user32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\gdi32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\winspool.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\comdlg32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\advapi32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\shell32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\ole32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\oleaut32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\netapi32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\uuid.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\ws2_32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\mpr.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\winmm.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\version.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\odbc32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\odbccp32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\comctl32.lib" "c:\Program Files\Microsoft Visual Studio .NET 2003\VC7\lib\msvcrt.lib"
LDLOADLIBS = C:\perl512\site\lib\auto\Glib\Glib.lib C:\perl512\site\lib\auto\Cairo\Cairo.lib C:\sources\glibbin\lib\pango-1.0.lib C:\sources\glibbin\lib\gobject-2.0.lib C:\sources\glibbin\lib\gmodule-2.0.lib C:\sources\glibbin\lib\gthread-2.0.lib C:\sources\glibbin\lib\glib-2.0.lib C:\sources\glibbin\lib\libintl.lib C:\sources\glibbin\lib\pangocairo-1.0.lib C:\perl512\site\lib\auto\Cairo\cairo.lib C:\sources\glibbin\lib\freetype.lib "c:\Program Files\Microsoft Visual Studio .NET 2003\VC7\lib\oldnames.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\kernel32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\user32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\gdi32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\winspool.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\comdlg32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\advapi32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\shell32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\ole32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\oleaut32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\netapi32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\uuid.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\ws2_32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\mpr.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\winmm.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\version.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\odbc32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\odbccp32.lib" "C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\lib\comctl32.lib" "c:\Program Files\Microsoft Visual Studio .NET 2003\VC7\lib\msvcrt.lib"
BSLOADLIBS = 


# --- MakeMaker const_cccmd section:
CCCMD = $(CC) -c $(PASTHRU_INC) $(INC) \
	$(CCFLAGS) $(OPTIMIZE) \
	$(PERLTYPE) $(MPOLLUTE) $(DEFINE_VERSION) \
	$(XS_DEFINE_VERSION) /Fo$@

# --- MakeMaker post_constants section:


# --- MakeMaker pasthru section:
PASTHRU = -nologo

# --- MakeMaker special_targets section:
.SUFFIXES : .xs .c .C .cpp .i .s .cxx .cc $(OBJ_EXT)

.PHONY: all config static dynamic test linkext manifest blibdirs clean realclean disttest distdir



# --- MakeMaker c_o section:

.c.i:
	cl -nologo -E -c $(PASTHRU_INC) $(INC) \
	$(CCFLAGS) $(OPTIMIZE) \
	$(PERLTYPE) $(MPOLLUTE) $(DEFINE_VERSION) \
	$(XS_DEFINE_VERSION) /Fo$@ $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.c > $*.i

.c.s:
	$(NOECHO) $(ECHO) [ CC $< ]
	$(NOECHO) $(CCCMD) -S $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.c

.c$(OBJ_EXT):
	$(NOECHO) $(ECHO) [ CC $< ]
	$(NOECHO) $(CCCMD) $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.c

.cpp$(OBJ_EXT):
	$(NOECHO) $(ECHO) [ CC $< ]
	$(NOECHO) $(CCCMD) $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.cpp

.cxx$(OBJ_EXT):
	$(NOECHO) $(ECHO) [ CC $< ]
	$(NOECHO) $(CCCMD) $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.cxx

.cc$(OBJ_EXT):
	$(NOECHO) $(ECHO) [ CC $< ]
	$(NOECHO) $(CCCMD) $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.cc

# --- MakeMaker xs_c section:

.xs.c:
	$(NOECHO) $(ECHO) [ XS $< ]
	$(NOECHO) $(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) $(XSUBPP_EXTRA_ARGS) $*.xs > $*.xsc && $(MV) $*.xsc $*.c

# --- MakeMaker xs_o section:


# --- MakeMaker top_targets section:
all :: pure_all
	$(NOECHO) $(NOOP)


pure_all :: config pm_to_blib subdirs linkext
	$(NOECHO) $(NOOP)

subdirs :: $(MYEXTLIB)
	$(NOECHO) $(NOOP)

config :: $(FIRST_MAKEFILE) blibdirs
	$(NOECHO) $(NOOP)

help :
	perldoc ExtUtils::MakeMaker


# --- MakeMaker blibdirs section:
blibdirs : $(INST_LIBDIR)$(DFSEP).exists $(INST_ARCHLIB)$(DFSEP).exists $(INST_AUTODIR)$(DFSEP).exists $(INST_ARCHAUTODIR)$(DFSEP).exists $(INST_BIN)$(DFSEP).exists $(INST_SCRIPT)$(DFSEP).exists $(INST_MAN1DIR)$(DFSEP).exists $(INST_MAN3DIR)$(DFSEP).exists
	$(NOECHO) $(NOOP)

# Backwards compat with 6.18 through 6.25
blibdirs.ts : blibdirs
	$(NOECHO) $(NOOP)

$(INST_LIBDIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_LIBDIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_LIBDIR)
	$(NOECHO) $(TOUCH) $(INST_LIBDIR)$(DFSEP).exists

$(INST_ARCHLIB)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_ARCHLIB)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_ARCHLIB)
	$(NOECHO) $(TOUCH) $(INST_ARCHLIB)$(DFSEP).exists

$(INST_AUTODIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_AUTODIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_AUTODIR)
	$(NOECHO) $(TOUCH) $(INST_AUTODIR)$(DFSEP).exists

$(INST_ARCHAUTODIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_ARCHAUTODIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_ARCHAUTODIR)
	$(NOECHO) $(TOUCH) $(INST_ARCHAUTODIR)$(DFSEP).exists

$(INST_BIN)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_BIN)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_BIN)
	$(NOECHO) $(TOUCH) $(INST_BIN)$(DFSEP).exists

$(INST_SCRIPT)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_SCRIPT)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_SCRIPT)
	$(NOECHO) $(TOUCH) $(INST_SCRIPT)$(DFSEP).exists

$(INST_MAN1DIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_MAN1DIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_MAN1DIR)
	$(NOECHO) $(TOUCH) $(INST_MAN1DIR)$(DFSEP).exists

$(INST_MAN3DIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_MAN3DIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_MAN3DIR)
	$(NOECHO) $(TOUCH) $(INST_MAN3DIR)$(DFSEP).exists



# --- MakeMaker linkext section:

linkext :: $(LINKTYPE)
	$(NOECHO) $(NOOP)


# --- MakeMaker dlsyms section:

Pango.def: Makefile.PL
	$(PERLRUN) -MExtUtils::Mksymlists \
     -e "Mksymlists('NAME'=>\"Pango\", 'DLBASE' => '$(BASEEXT)', 'DL_FUNCS' => { Pango=>[] }, 'FUNCLIST' => [q[newSVPangoRectangle], q[SvPangoRectangle], q[gtk2perl_pango_attribute_get_type], q[gtk2perl_pango_attribute_register_custom_type], q[gtk2perl_pango_attr_iterator_get_type], q[gtk2perl_pango_layout_iter_get_type], q[gtk2perl_pango_layout_line_get_type], q[gtk2perl_pango_script_iter_get_type]], 'IMPORTS' => {  }, 'DL_VARS' => []);"


# --- MakeMaker dynamic section:

dynamic :: $(FIRST_MAKEFILE) $(INST_DYNAMIC) $(INST_BOOT)
	$(NOECHO) $(NOOP)


# --- MakeMaker dynamic_bs section:
BOOTSTRAP = $(BASEEXT).bs

# As Mkbootstrap might not write a file (if none is required)
# we use touch to prevent make continually trying to remake it.
# The DynaLoader only reads a non-empty file.
$(BOOTSTRAP) : $(FIRST_MAKEFILE) $(BOOTDEP) $(INST_ARCHAUTODIR)$(DFSEP).exists
	$(NOECHO) $(ECHO) "Running Mkbootstrap for $(NAME) ($(BSLOADLIBS))"
	$(NOECHO) $(PERLRUN) \
		"-MExtUtils::Mkbootstrap" \
		-e "Mkbootstrap('$(BASEEXT)','$(BSLOADLIBS)');"
	$(NOECHO) $(TOUCH) $@
	$(CHMOD) $(PERM_RW) $@

$(INST_BOOT) : $(BOOTSTRAP) $(INST_ARCHAUTODIR)$(DFSEP).exists
	$(NOECHO) $(RM_RF) $@
	- $(CP) $(BOOTSTRAP) $@
	$(CHMOD) $(PERM_RW) $@


# --- MakeMaker dynamic_lib section:

# This section creates the dynamically loadable $(INST_DYNAMIC)
# from $(OBJECT) and possibly $(MYEXTLIB).
OTHERLDFLAGS = 
INST_DYNAMIC_DEP = 

$(INST_DYNAMIC): $(OBJECT) $(MYEXTLIB) $(BOOTSTRAP) $(INST_ARCHAUTODIR)$(DFSEP).exists $(EXPORT_LIST) $(PERL_ARCHIVE) $(INST_DYNAMIC_DEP)
	$(NOECHO) $(ECHO) [ LD $@ ]
	$(NOECHO) $(LD) -out:$@ $(LDDLFLAGS) $(LDFROM) $(OTHERLDFLAGS) $(MYEXTLIB) $(PERL_ARCHIVE) $(LDLOADLIBS) -def:$(EXPORT_LIST)
	if exist $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;2
	if exist $@.manifest del $@.manifest
	$(CHMOD) $(PERM_RWX) $@

# --- MakeMaker static section:

## $(INST_PM) has been moved to the all: target.
## It remains here for awhile to allow for old usage: "make static"
static :: $(FIRST_MAKEFILE) $(INST_STATIC)
	$(NOECHO) $(NOOP)


# --- MakeMaker static_lib section:
$(INST_STATIC): $(OBJECT) $(MYEXTLIB) $(INST_ARCHAUTODIR)$(DFSEP).exists
	$(RM_RF) $@
	$(AR) -out:$@ $(OBJECT)
	$(CHMOD) $(PERM_RWX) $@
	$(NOECHO) $(ECHO) "$(EXTRALIBS)" > $(INST_ARCHAUTODIR)\extralibs.ld

# --- MakeMaker manifypods section:

POD2MAN_EXE = $(PERLRUN) "-MExtUtils::Command::MM" -e pod2man "--"
POD2MAN = $(POD2MAN_EXE)


manifypods : pure_all  \
	$(INST_LIB)\Pango\FontDescription.pod \
	$(INST_LIB)\Pango\Context.pod \
	$(INST_LIB)\Pango\Cairo.pod \
	$(INST_LIB)\Pango\Font.pod \
	$(INST_LIB)\Pango\FontMetrics.pod \
	$(INST_LIB)\Pango\AttrScale.pod \
	$(INST_LIB)\Pango\LayoutLine.pod \
	$(INST_LIB)\Pango\AttrFallback.pod \
	$(INST_LIB)\Pango\Renderer.pod \
	$(INST_LIB)/$(FULLEXT)/index.pod \
	$(INST_LIB)\Pango\AttrShape.pod \
	$(INST_LIB)\Pango\Layout.pod \
	$(INST_LIB)\Pango\Script.pod \
	$(INST_LIB)\Pango\AttrLanguage.pod \
	$(INST_LIB)\Pango\AttrForeground.pod \
	$(INST_LIB)\Pango\FontMap.pod \
	$(INST_LIB)\Pango\Language.pod \
	$(INST_LIB)\Pango\FontFamily.pod \
	$(INST_LIB)\Pango\AttrFamily.pod \
	$(INST_LIB)\Pango\FontFace.pod \
	$(INST_LIB)\Pango\Color.pod \
	$(INST_LIB)\Pango\AttrStrikethroughColor.pod \
	$(INST_LIB)\Pango\AttrStrikethrough.pod \
	$(INST_LIB)\Pango\AttrVariant.pod \
	$(INST_LIB)\Pango\AttrUnderlineColor.pod \
	$(INST_LIB)\Pango\AttrIterator.pod \
	$(INST_LIB)\Pango\AttrFontDesc.pod \
	$(INST_LIB)\Pango\Cairo\Font.pod \
	$(INST_LIB)\Pango\AttrSize.pod \
	$(INST_LIB)\Pango\AttrStretch.pod \
	$(INST_LIB)\Pango\AttrGravity.pod \
	$(INST_LIB)\Pango\Fontset.pod \
	$(INST_LIB)\Pango\version.pod \
	$(INST_LIB)\Pango\AttrStyle.pod \
	$(INST_LIB)\Pango\AttrRise.pod \
	$(INST_LIB)\Pango\TabArray.pod \
	$(INST_LIB)\Pango\AttrLetterSpacing.pod \
	lib/Pango.pm \
	$(INST_LIB)\Pango\AttrString.pod \
	$(INST_LIB)\Pango\AttrBackground.pod \
	$(INST_LIB)\Pango\Cairo\FontMap.pod \
	$(INST_LIB)\Pango\AttrList.pod \
	$(INST_LIB)\Pango\ScriptIter.pod \
	$(INST_LIB)\Pango\LayoutIter.pod \
	$(INST_LIB)\Pango\Cairo\Context.pod \
	$(INST_LIB)\Pango\AttrColor.pod \
	$(INST_LIB)\Pango\AttrInt.pod \
	$(INST_LIB)\Pango\AttrUnderline.pod \
	$(INST_LIB)\Pango\AttrGravityHint.pod \
	$(INST_LIB)\Pango\Matrix.pod \
	$(INST_LIB)\Pango\AttrWeight.pod \
	$(INST_LIB)\Pango\Gravity.pod \
	$(INST_LIB)\Pango\Attribute.pod
	$(NOECHO) $(POD2MAN) --section=3 --perm_rw=$(PERM_RW) \
	  $(INST_LIB)\Pango\FontDescription.pod $(INST_MAN3DIR)/Pango::FontDescription.$(MAN3EXT) \
	  $(INST_LIB)\Pango\Context.pod $(INST_MAN3DIR)/Pango::Context.$(MAN3EXT) \
	  $(INST_LIB)\Pango\Cairo.pod $(INST_MAN3DIR)/Pango::Cairo.$(MAN3EXT) \
	  $(INST_LIB)\Pango\Font.pod $(INST_MAN3DIR)/Pango::Font.$(MAN3EXT) \
	  $(INST_LIB)\Pango\FontMetrics.pod $(INST_MAN3DIR)/Pango::FontMetrics.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrScale.pod $(INST_MAN3DIR)/Pango::AttrScale.$(MAN3EXT) \
	  $(INST_LIB)\Pango\LayoutLine.pod $(INST_MAN3DIR)/Pango::LayoutLine.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrFallback.pod $(INST_MAN3DIR)/Pango::AttrFallback.$(MAN3EXT) \
	  $(INST_LIB)\Pango\Renderer.pod $(INST_MAN3DIR)/Pango::Renderer.$(MAN3EXT) \
	  $(INST_LIB)/$(FULLEXT)/index.pod $(INST_MAN3DIR)/$(NAME)::index.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrShape.pod $(INST_MAN3DIR)/Pango::AttrShape.$(MAN3EXT) \
	  $(INST_LIB)\Pango\Layout.pod $(INST_MAN3DIR)/Pango::Layout.$(MAN3EXT) \
	  $(INST_LIB)\Pango\Script.pod $(INST_MAN3DIR)/Pango::Script.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrLanguage.pod $(INST_MAN3DIR)/Pango::AttrLanguage.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrForeground.pod $(INST_MAN3DIR)/Pango::AttrForeground.$(MAN3EXT) \
	  $(INST_LIB)\Pango\FontMap.pod $(INST_MAN3DIR)/Pango::FontMap.$(MAN3EXT) \
	  $(INST_LIB)\Pango\Language.pod $(INST_MAN3DIR)/Pango::Language.$(MAN3EXT) 
	$(NOECHO) $(POD2MAN) --section=3 --perm_rw=$(PERM_RW) \
	  $(INST_LIB)\Pango\FontFamily.pod $(INST_MAN3DIR)/Pango::FontFamily.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrFamily.pod $(INST_MAN3DIR)/Pango::AttrFamily.$(MAN3EXT) \
	  $(INST_LIB)\Pango\FontFace.pod $(INST_MAN3DIR)/Pango::FontFace.$(MAN3EXT) \
	  $(INST_LIB)\Pango\Color.pod $(INST_MAN3DIR)/Pango::Color.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrStrikethroughColor.pod $(INST_MAN3DIR)/Pango::AttrStrikethroughColor.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrStrikethrough.pod $(INST_MAN3DIR)/Pango::AttrStrikethrough.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrVariant.pod $(INST_MAN3DIR)/Pango::AttrVariant.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrUnderlineColor.pod $(INST_MAN3DIR)/Pango::AttrUnderlineColor.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrIterator.pod $(INST_MAN3DIR)/Pango::AttrIterator.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrFontDesc.pod $(INST_MAN3DIR)/Pango::AttrFontDesc.$(MAN3EXT) \
	  $(INST_LIB)\Pango\Cairo\Font.pod $(INST_MAN3DIR)/Pango::Cairo::Font.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrSize.pod $(INST_MAN3DIR)/Pango::AttrSize.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrStretch.pod $(INST_MAN3DIR)/Pango::AttrStretch.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrGravity.pod $(INST_MAN3DIR)/Pango::AttrGravity.$(MAN3EXT) \
	  $(INST_LIB)\Pango\Fontset.pod $(INST_MAN3DIR)/Pango::Fontset.$(MAN3EXT) \
	  $(INST_LIB)\Pango\version.pod $(INST_MAN3DIR)/Pango::version.$(MAN3EXT) 
	$(NOECHO) $(POD2MAN) --section=3 --perm_rw=$(PERM_RW) \
	  $(INST_LIB)\Pango\AttrStyle.pod $(INST_MAN3DIR)/Pango::AttrStyle.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrRise.pod $(INST_MAN3DIR)/Pango::AttrRise.$(MAN3EXT) \
	  $(INST_LIB)\Pango\TabArray.pod $(INST_MAN3DIR)/Pango::TabArray.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrLetterSpacing.pod $(INST_MAN3DIR)/Pango::AttrLetterSpacing.$(MAN3EXT) \
	  lib/Pango.pm $(INST_MAN3DIR)/Pango.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrString.pod $(INST_MAN3DIR)/Pango::AttrString.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrBackground.pod $(INST_MAN3DIR)/Pango::AttrBackground.$(MAN3EXT) \
	  $(INST_LIB)\Pango\Cairo\FontMap.pod $(INST_MAN3DIR)/Pango::Cairo::FontMap.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrList.pod $(INST_MAN3DIR)/Pango::AttrList.$(MAN3EXT) \
	  $(INST_LIB)\Pango\ScriptIter.pod $(INST_MAN3DIR)/Pango::ScriptIter.$(MAN3EXT) \
	  $(INST_LIB)\Pango\LayoutIter.pod $(INST_MAN3DIR)/Pango::LayoutIter.$(MAN3EXT) \
	  $(INST_LIB)\Pango\Cairo\Context.pod $(INST_MAN3DIR)/Pango::Cairo::Context.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrColor.pod $(INST_MAN3DIR)/Pango::AttrColor.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrInt.pod $(INST_MAN3DIR)/Pango::AttrInt.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrUnderline.pod $(INST_MAN3DIR)/Pango::AttrUnderline.$(MAN3EXT) \
	  $(INST_LIB)\Pango\AttrGravityHint.pod $(INST_MAN3DIR)/Pango::AttrGravityHint.$(MAN3EXT) \
	  $(INST_LIB)\Pango\Matrix.pod $(INST_MAN3DIR)/Pango::Matrix.$(MAN3EXT) 
	$(NOECHO) $(POD2MAN) --section=3 --perm_rw=$(PERM_RW) \
	  $(INST_LIB)\Pango\AttrWeight.pod $(INST_MAN3DIR)/Pango::AttrWeight.$(MAN3EXT) \
	  $(INST_LIB)\Pango\Gravity.pod $(INST_MAN3DIR)/Pango::Gravity.$(MAN3EXT) \
	  $(INST_LIB)\Pango\Attribute.pod $(INST_MAN3DIR)/Pango::Attribute.$(MAN3EXT) 




# --- MakeMaker processPL section:


# --- MakeMaker installbin section:


# --- MakeMaker subdirs section:

# none

# --- MakeMaker clean_subdirs section:
clean_subdirs :
	$(NOECHO) $(NOOP)


# --- MakeMaker clean section:

# Delete temporary files but do not touch installed files. We don't delete
# the Makefile here so a later make realclean still has a makefile to use.

clean :: clean_subdirs
	- $(RM_F) \
	  core.[0-9] $(BASEEXT).bso \
	  pm_to_blib.ts xs/PangoGravity.c \
	  core.[0-9][0-9][0-9][0-9] xs/PangoTabs.c \
	  perl$(EXE_EXT) tmon.out \
	  *$(OBJ_EXT) pm_to_blib \
	  blibdirs.ts xs/PangoCairo.c \
	  *perl.core core.*perl.*.? \
	  $(BASEEXT).def core.[0-9][0-9][0-9] \
	  mon.out lib$(BASEEXT).def \
	  perl.exe xs/PangoContext.c \
	  perlmain.c so_locations \
	  $(BASEEXT).exp xs/PangoFontMap.c \
	  xs/PangoAttributes.c *$(LIB_EXT) \
	  core xs/PangoFontset.c \
	  core.[0-9][0-9] $(INST_ARCHAUTODIR)\extralibs.ld \
	  $(BASEEXT).x $(BOOTSTRAP) \
	  $(INST_ARCHAUTODIR)\extralibs.all xs/PangoTypes.c \
	  xs/Pango.c core.[0-9][0-9][0-9][0-9][0-9] \
	  xs/PangoMatrix.c xs/PangoFont.c \
	  $(MAKE_APERL_FILE) perl \
	  xs/PangoLayout.c xs/PangoRenderer.c \
	  xs/PangoScript.c 
	- $(RM_RF) \
	  xs/PangoCairo$(OBJ_EXT) xs/PangoLayout$(OBJ_EXT) \
	  xs/PangoTypes$(OBJ_EXT) xs/PangoRenderer$(OBJ_EXT) \
	  *.pdb xs/PangoFontMap$(OBJ_EXT) \
	  xs/PangoContext$(OBJ_EXT) xs/PangoFontset$(OBJ_EXT) \
	  xs/PangoScript$(OBJ_EXT) xs/Pango$(OBJ_EXT) \
	  xs/PangoMatrix$(OBJ_EXT) xs/PangoAttributes$(OBJ_EXT) \
	  xs/PangoFont$(OBJ_EXT) blib \
	  xs/PangoGravity$(OBJ_EXT) xs/PangoTabs$(OBJ_EXT) 
	- $(MV) $(FIRST_MAKEFILE) $(MAKEFILE_OLD) $(DEV_NULL)


# --- MakeMaker realclean_subdirs section:
realclean_subdirs :
	$(NOECHO) $(NOOP)


# --- MakeMaker realclean section:
# Delete temporary files (via clean) and also delete dist files
realclean purge ::  clean realclean_subdirs
	- $(RM_F) \
	  $(OBJECT) $(MAKEFILE_OLD) \
	  $(FIRST_MAKEFILE) 
	- $(RM_RF) \
	  $(DISTVNAME) 


# --- MakeMaker metafile section:
metafile : create_distdir
	$(NOECHO) $(ECHO) Generating META.yml
	$(NOECHO) $(ECHO) "--- #YAML:1.0" > META_new.yml
	$(NOECHO) $(ECHO) "name:               Pango" >> META_new.yml
	$(NOECHO) $(ECHO) "version:            1.222" >> META_new.yml
	$(NOECHO) $(ECHO) "abstract:           Layout and render international text" >> META_new.yml
	$(NOECHO) $(ECHO) "author:  []" >> META_new.yml
	$(NOECHO) $(ECHO) "license:            unknown" >> META_new.yml
	$(NOECHO) $(ECHO) "distribution_type:  module" >> META_new.yml
	$(NOECHO) $(ECHO) "configure_requires:" >> META_new.yml
	$(NOECHO) $(ECHO) "    Cairo:                1.000" >> META_new.yml
	$(NOECHO) $(ECHO) "    ExtUtils::Depends:    0.300" >> META_new.yml
	$(NOECHO) $(ECHO) "    ExtUtils::MakeMaker:  0" >> META_new.yml
	$(NOECHO) $(ECHO) "    ExtUtils::PkgConfig:  1.030" >> META_new.yml
	$(NOECHO) $(ECHO) "    Glib:                 1.220" >> META_new.yml
	$(NOECHO) $(ECHO) "build_requires:" >> META_new.yml
	$(NOECHO) $(ECHO) "    ExtUtils::MakeMaker:  0" >> META_new.yml
	$(NOECHO) $(ECHO) "requires:" >> META_new.yml
	$(NOECHO) $(ECHO) "    Cairo:                1.000" >> META_new.yml
	$(NOECHO) $(ECHO) "    ExtUtils::Depends:    0.300" >> META_new.yml
	$(NOECHO) $(ECHO) "    ExtUtils::PkgConfig:  1.030" >> META_new.yml
	$(NOECHO) $(ECHO) "    Glib:                 1.220" >> META_new.yml
	$(NOECHO) $(ECHO) "no_index:" >> META_new.yml
	$(NOECHO) $(ECHO) "    directory:" >> META_new.yml
	$(NOECHO) $(ECHO) "        - t" >> META_new.yml
	$(NOECHO) $(ECHO) "        - inc" >> META_new.yml
	$(NOECHO) $(ECHO) "    file:" >> META_new.yml
	$(NOECHO) $(ECHO) "        - xs/Pango.xs" >> META_new.yml
	$(NOECHO) $(ECHO) "        - xs/PangoAttributes.xs" >> META_new.yml
	$(NOECHO) $(ECHO) "        - xs/PangoContext.xs" >> META_new.yml
	$(NOECHO) $(ECHO) "        - xs/PangoFont.xs" >> META_new.yml
	$(NOECHO) $(ECHO) "        - xs/PangoFontset.xs" >> META_new.yml
	$(NOECHO) $(ECHO) "        - xs/PangoFontMap.xs" >> META_new.yml
	$(NOECHO) $(ECHO) "        - xs/PangoLayout.xs" >> META_new.yml
	$(NOECHO) $(ECHO) "        - xs/PangoRenderer.xs" >> META_new.yml
	$(NOECHO) $(ECHO) "        - xs/PangoScript.xs" >> META_new.yml
	$(NOECHO) $(ECHO) "        - xs/PangoTabs.xs" >> META_new.yml
	$(NOECHO) $(ECHO) "        - xs/PangoTypes.xs" >> META_new.yml
	$(NOECHO) $(ECHO) "        - xs/PangoCairo.xs" >> META_new.yml
	$(NOECHO) $(ECHO) "        - xs/PangoGravity.xs" >> META_new.yml
	$(NOECHO) $(ECHO) "        - xs/PangoMatrix.xs" >> META_new.yml
	$(NOECHO) $(ECHO) "generated_by:       ExtUtils::MakeMaker version 6.56" >> META_new.yml
	$(NOECHO) $(ECHO) "meta-spec:" >> META_new.yml
	$(NOECHO) $(ECHO) "    url:      http://module-build.sourceforge.net/META-spec-v1.4.html" >> META_new.yml
	$(NOECHO) $(ECHO) "    version:  1.4" >> META_new.yml
	-$(NOECHO) $(MV) META_new.yml $(DISTVNAME)/META.yml


# --- MakeMaker signature section:
signature :
	cpansign -s


# --- MakeMaker dist_basics section:
distclean :: realclean distcheck
	$(NOECHO) $(NOOP)

distcheck :
	$(PERLRUN) "-MExtUtils::Manifest=fullcheck" -e fullcheck

skipcheck :
	$(PERLRUN) "-MExtUtils::Manifest=skipcheck" -e skipcheck

manifest :
	$(PERLRUN) "-MExtUtils::Manifest=mkmanifest" -e mkmanifest

veryclean : realclean
	$(RM_F) *~ */*~ *.orig */*.orig *.bak */*.bak *.old */*.old 



# --- MakeMaker dist_core section:

dist : $(DIST_DEFAULT) $(FIRST_MAKEFILE)
	$(NOECHO) $(ABSPERLRUN) -l -e "print 'Warning: Makefile possibly out of date with $(VERSION_FROM)'\
    if -e '$(VERSION_FROM)' and -M '$(VERSION_FROM)' < -M '$(FIRST_MAKEFILE)';" --

tardist : $(DISTVNAME).tar$(SUFFIX)
	$(NOECHO) $(NOOP)

uutardist : $(DISTVNAME).tar$(SUFFIX)
	uuencode $(DISTVNAME).tar$(SUFFIX) $(DISTVNAME).tar$(SUFFIX) > $(DISTVNAME).tar$(SUFFIX)_uu

$(DISTVNAME).tar$(SUFFIX) : distdir
	$(PREOP)
	$(TO_UNIX)
	$(TAR) $(TARFLAGS) $(DISTVNAME).tar $(DISTVNAME)
	$(RM_RF) $(DISTVNAME)
	$(COMPRESS) $(DISTVNAME).tar
	$(POSTOP)

zipdist : $(DISTVNAME).zip
	$(NOECHO) $(NOOP)

$(DISTVNAME).zip : distdir
	$(PREOP)
	$(ZIP) $(ZIPFLAGS) $(DISTVNAME).zip $(DISTVNAME)
	$(RM_RF) $(DISTVNAME)
	$(POSTOP)

shdist : distdir
	$(PREOP)
	$(SHAR) $(DISTVNAME) > $(DISTVNAME).shar
	$(RM_RF) $(DISTVNAME)
	$(POSTOP)


# --- MakeMaker distdir section:
create_distdir :
	$(RM_RF) $(DISTVNAME)
	$(PERLRUN) "-MExtUtils::Manifest=manicopy,maniread" \
		-e "manicopy(maniread(),'$(DISTVNAME)', '$(DIST_CP)');"

distdir : create_distdir distmeta 
	$(NOECHO) $(NOOP)



# --- MakeMaker dist_test section:
disttest : distdir
	cd $(DISTVNAME)
	$(ABSPERLRUN) Makefile.PL 
	$(MAKE) $(PASTHRU)
	$(MAKE) test $(PASTHRU)
	cd ..



# --- MakeMaker dist_ci section:

ci :
	$(PERLRUN) "-MExtUtils::Manifest=maniread" \
	  -e "@all = keys %{ maniread() };" \
	  -e "print(qq{Executing $(CI) @all\n}); system(qq{$(CI) @all});" \
	  -e "print(qq{Executing $(RCS_LABEL) ...\n}); system(qq{$(RCS_LABEL) @all});"


# --- MakeMaker distmeta section:
distmeta : create_distdir metafile
	$(NOECHO) cd $(DISTVNAME)
	$(ABSPERLRUN) -MExtUtils::Manifest=maniadd -e "eval { maniadd({q{META.yml} => q{Module meta-data (added by MakeMaker)}}) } \
    or print \"Could not add META.yml to MANIFEST: $${'@'}\n\"" --
	cd ..



# --- MakeMaker distsignature section:
distsignature : create_distdir
	$(NOECHO) cd $(DISTVNAME)
	$(ABSPERLRUN) -MExtUtils::Manifest=maniadd -e "eval { maniadd({q{SIGNATURE} => q{Public-key signature (added by MakeMaker)}}) } \
    or print \"Could not add SIGNATURE to MANIFEST: $${'@'}\n\"" --
	cd ..
	$(NOECHO) cd $(DISTVNAME)
	$(TOUCH) SIGNATURE
	cd ..
	cd $(DISTVNAME)
	cpansign -s
	cd ..



# --- MakeMaker install section:

install :: pure_install doc_install
	$(NOECHO) $(NOOP)

install_perl :: pure_perl_install doc_perl_install
	$(NOECHO) $(NOOP)

install_site :: pure_site_install doc_site_install
	$(NOECHO) $(NOOP)

install_vendor :: pure_vendor_install doc_vendor_install
	$(NOECHO) $(NOOP)

pure_install :: pure_$(INSTALLDIRS)_install
	$(NOECHO) $(NOOP)

doc_install :: doc_$(INSTALLDIRS)_install
	$(NOECHO) $(NOOP)

pure__install : pure_site_install
	$(NOECHO) $(ECHO) INSTALLDIRS not defined, defaulting to INSTALLDIRS=site

doc__install : doc_site_install
	$(NOECHO) $(ECHO) INSTALLDIRS not defined, defaulting to INSTALLDIRS=site

pure_perl_install :: all
	$(NOECHO) $(MOD_INSTALL) \
		read $(PERL_ARCHLIB)\auto\$(FULLEXT)\.packlist \
		write $(DESTINSTALLARCHLIB)\auto\$(FULLEXT)\.packlist \
		$(INST_LIB) $(DESTINSTALLPRIVLIB) \
		$(INST_ARCHLIB) $(DESTINSTALLARCHLIB) \
		$(INST_BIN) $(DESTINSTALLBIN) \
		$(INST_SCRIPT) $(DESTINSTALLSCRIPT) \
		$(INST_MAN1DIR) $(DESTINSTALLMAN1DIR) \
		$(INST_MAN3DIR) $(DESTINSTALLMAN3DIR)
	$(NOECHO) $(WARN_IF_OLD_PACKLIST) \
		$(SITEARCHEXP)\auto\$(FULLEXT)


pure_site_install :: all
	$(NOECHO) $(MOD_INSTALL) \
		read $(SITEARCHEXP)\auto\$(FULLEXT)\.packlist \
		write $(DESTINSTALLSITEARCH)\auto\$(FULLEXT)\.packlist \
		$(INST_LIB) $(DESTINSTALLSITELIB) \
		$(INST_ARCHLIB) $(DESTINSTALLSITEARCH) \
		$(INST_BIN) $(DESTINSTALLSITEBIN) \
		$(INST_SCRIPT) $(DESTINSTALLSITESCRIPT) \
		$(INST_MAN1DIR) $(DESTINSTALLSITEMAN1DIR) \
		$(INST_MAN3DIR) $(DESTINSTALLSITEMAN3DIR)
	$(NOECHO) $(WARN_IF_OLD_PACKLIST) \
		$(PERL_ARCHLIB)\auto\$(FULLEXT)

pure_vendor_install :: all
	$(NOECHO) $(MOD_INSTALL) \
		read $(VENDORARCHEXP)\auto\$(FULLEXT)\.packlist \
		write $(DESTINSTALLVENDORARCH)\auto\$(FULLEXT)\.packlist \
		$(INST_LIB) $(DESTINSTALLVENDORLIB) \
		$(INST_ARCHLIB) $(DESTINSTALLVENDORARCH) \
		$(INST_BIN) $(DESTINSTALLVENDORBIN) \
		$(INST_SCRIPT) $(DESTINSTALLVENDORSCRIPT) \
		$(INST_MAN1DIR) $(DESTINSTALLVENDORMAN1DIR) \
		$(INST_MAN3DIR) $(DESTINSTALLVENDORMAN3DIR)

doc_perl_install :: all
	$(NOECHO) $(ECHO) Appending installation info to $(DESTINSTALLARCHLIB)/perllocal.pod
	-$(NOECHO) $(MKPATH) $(DESTINSTALLARCHLIB)
	-$(NOECHO) $(DOC_INSTALL) \
		"Module" "$(NAME)" \
		"installed into" "$(INSTALLPRIVLIB)" \
		LINKTYPE "$(LINKTYPE)" \
		VERSION "$(VERSION)" \
		EXE_FILES "$(EXE_FILES)" \
		>> $(DESTINSTALLARCHLIB)\perllocal.pod

doc_site_install :: all
	$(NOECHO) $(ECHO) Appending installation info to $(DESTINSTALLARCHLIB)/perllocal.pod
	-$(NOECHO) $(MKPATH) $(DESTINSTALLARCHLIB)
	-$(NOECHO) $(DOC_INSTALL) \
		"Module" "$(NAME)" \
		"installed into" "$(INSTALLSITELIB)" \
		LINKTYPE "$(LINKTYPE)" \
		VERSION "$(VERSION)" \
		EXE_FILES "$(EXE_FILES)" \
		>> $(DESTINSTALLARCHLIB)\perllocal.pod

doc_vendor_install :: all
	$(NOECHO) $(ECHO) Appending installation info to $(DESTINSTALLARCHLIB)/perllocal.pod
	-$(NOECHO) $(MKPATH) $(DESTINSTALLARCHLIB)
	-$(NOECHO) $(DOC_INSTALL) \
		"Module" "$(NAME)" \
		"installed into" "$(INSTALLVENDORLIB)" \
		LINKTYPE "$(LINKTYPE)" \
		VERSION "$(VERSION)" \
		EXE_FILES "$(EXE_FILES)" \
		>> $(DESTINSTALLARCHLIB)\perllocal.pod


uninstall :: uninstall_from_$(INSTALLDIRS)dirs
	$(NOECHO) $(NOOP)

uninstall_from_perldirs ::
	$(NOECHO) $(UNINSTALL) $(PERL_ARCHLIB)\auto\$(FULLEXT)\.packlist

uninstall_from_sitedirs ::
	$(NOECHO) $(UNINSTALL) $(SITEARCHEXP)\auto\$(FULLEXT)\.packlist

uninstall_from_vendordirs ::
	$(NOECHO) $(UNINSTALL) $(VENDORARCHEXP)\auto\$(FULLEXT)\.packlist


# --- MakeMaker force section:
# Phony target to force checking subdirectories.
FORCE :
	$(NOECHO) $(NOOP)


# --- MakeMaker perldepend section:

PERL_HDRS = \
	$(PERL_INC)/EXTERN.h		\
	$(PERL_INC)/INTERN.h		\
	$(PERL_INC)/XSUB.h		\
	$(PERL_INC)/av.h		\
	$(PERL_INC)/cc_runtime.h	\
	$(PERL_INC)/config.h		\
	$(PERL_INC)/cop.h		\
	$(PERL_INC)/cv.h		\
	$(PERL_INC)/dosish.h		\
	$(PERL_INC)/embed.h		\
	$(PERL_INC)/embedvar.h		\
	$(PERL_INC)/fakethr.h		\
	$(PERL_INC)/form.h		\
	$(PERL_INC)/gv.h		\
	$(PERL_INC)/handy.h		\
	$(PERL_INC)/hv.h		\
	$(PERL_INC)/intrpvar.h		\
	$(PERL_INC)/iperlsys.h		\
	$(PERL_INC)/keywords.h		\
	$(PERL_INC)/mg.h		\
	$(PERL_INC)/nostdio.h		\
	$(PERL_INC)/op.h		\
	$(PERL_INC)/opcode.h		\
	$(PERL_INC)/patchlevel.h	\
	$(PERL_INC)/perl.h		\
	$(PERL_INC)/perlio.h		\
	$(PERL_INC)/perlsdio.h		\
	$(PERL_INC)/perlsfio.h		\
	$(PERL_INC)/perlvars.h		\
	$(PERL_INC)/perly.h		\
	$(PERL_INC)/pp.h		\
	$(PERL_INC)/pp_proto.h		\
	$(PERL_INC)/proto.h		\
	$(PERL_INC)/regcomp.h		\
	$(PERL_INC)/regexp.h		\
	$(PERL_INC)/regnodes.h		\
	$(PERL_INC)/scope.h		\
	$(PERL_INC)/sv.h		\
	$(PERL_INC)/thread.h		\
	$(PERL_INC)/unixish.h		\
	$(PERL_INC)/util.h

$(OBJECT) : $(PERL_HDRS)

xs/Pango.c xs/PangoFontMap.c xs/PangoFont.c xs/PangoFontset.c xs/PangoRenderer.c xs/PangoGravity.c xs/PangoTypes.c xs/PangoMatrix.c xs/PangoCairo.c xs/PangoContext.c xs/PangoScript.c xs/PangoTabs.c xs/PangoAttributes.c xs/PangoLayout.c : $(XSUBPPDEPS)


# --- MakeMaker makefile section:

$(OBJECT) : $(FIRST_MAKEFILE)

# We take a very conservative approach here, but it's worth it.
# We move Makefile to Makefile.old here to avoid gnu make looping.
$(FIRST_MAKEFILE) : Makefile.PL $(CONFIGDEP)
	$(NOECHO) $(ECHO) "Makefile out-of-date with respect to $?"
	$(NOECHO) $(ECHO) "Cleaning current config before rebuilding Makefile..."
	-$(NOECHO) $(RM_F) $(MAKEFILE_OLD)
	-$(NOECHO) $(MV)   $(FIRST_MAKEFILE) $(MAKEFILE_OLD)
	- $(MAKE) $(USEMAKEFILE) $(MAKEFILE_OLD) clean $(DEV_NULL)
	$(PERLRUN) Makefile.PL 
	$(NOECHO) $(ECHO) "==> Your Makefile has been rebuilt. <=="
	$(NOECHO) $(ECHO) "==> Please rerun the $(MAKE) command.  <=="
	$(FALSE)



# --- MakeMaker staticmake section:

# --- MakeMaker makeaperl section ---
MAP_TARGET    = perl
FULLPERL      = C:\perl512\bin\perl.exe

$(MAP_TARGET) :: static $(MAKE_APERL_FILE)
	$(MAKE) $(USEMAKEFILE) $(MAKE_APERL_FILE) $@

$(MAKE_APERL_FILE) : $(FIRST_MAKEFILE) pm_to_blib
	$(NOECHO) $(ECHO) Writing \"$(MAKE_APERL_FILE)\" for this $(MAP_TARGET)
	$(NOECHO) $(PERLRUNINST) \
		Makefile.PL DIR= \
		MAKEFILE=$(MAKE_APERL_FILE) LINKTYPE=static \
		MAKEAPERL=1 NORECURS=1 CCCDLFLAGS=


# --- MakeMaker test section:

TEST_VERBOSE=0
TEST_TYPE=test_$(LINKTYPE)
TEST_FILE = test.pl
TEST_FILES = t/*.t
TESTDB_SW = -d

testdb :: testdb_$(LINKTYPE)

test :: $(TEST_TYPE) subdirs-test

subdirs-test ::
	$(NOECHO) $(NOOP)


test_dynamic :: pure_all
	$(FULLPERLRUN) "-MExtUtils::Command::MM" "-e" "test_harness($(TEST_VERBOSE), '$(INST_LIB)', '$(INST_ARCHLIB)')" $(TEST_FILES)

testdb_dynamic :: pure_all
	$(FULLPERLRUN) $(TESTDB_SW) "-I$(INST_LIB)" "-I$(INST_ARCHLIB)" $(TEST_FILE)

test_ : test_dynamic

test_static :: pure_all $(MAP_TARGET)
	./$(MAP_TARGET) "-MExtUtils::Command::MM" "-e" "test_harness($(TEST_VERBOSE), '$(INST_LIB)', '$(INST_ARCHLIB)')" $(TEST_FILES)

testdb_static :: pure_all $(MAP_TARGET)
	./$(MAP_TARGET) $(TESTDB_SW) "-I$(INST_LIB)" "-I$(INST_ARCHLIB)" $(TEST_FILE)



# --- MakeMaker ppd section:
# Creates a PPD (Perl Package Description) for a binary distribution.
ppd :
	$(NOECHO) $(ECHO) "<SOFTPKG NAME=\"$(DISTNAME)\" VERSION=\"1.222\">" > $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "    <ABSTRACT>Layout and render international text</ABSTRACT>" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "    <AUTHOR></AUTHOR>" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "    <IMPLEMENTATION>" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Cairo::\" VERSION=\"1\" />" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"ExtUtils::Depends\" VERSION=\"0.3\" />" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"ExtUtils::PkgConfig\" VERSION=\"1.03\" />" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Glib::\" VERSION=\"1.22\" />" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "        <ARCHITECTURE NAME=\"MSWin32-x86-multi-thread-5.12\" />" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "        <CODEBASE HREF=\"\" />" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "    </IMPLEMENTATION>" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "</SOFTPKG>" >> $(DISTNAME).ppd


# --- MakeMaker pm_to_blib section:

pm_to_blib : $(FIRST_MAKEFILE) $(TO_INST_PM)
	$(NOECHO) $(ABSPERLRUN) -MExtUtils::Install -e "pm_to_blib({@ARGV}, '$(INST_LIB)\auto', q[$(PM_FILTER)], '$(PERM_DIR)')" -- \
	  build/IFiles.pm $(INST_ARCHLIB)/$(FULLEXT)/Install/Files.pm \
	  pango-perl.h $(INST_ARCHLIB)/$(FULLEXT)/Install/pango-perl.h \
	  build/pango-perl-autogen.h $(INST_ARCHLIB)/$(FULLEXT)/Install/pango-perl-autogen.h \
	  C:\sources\Pango-1.222\build\pango-perl.typemap $(INST_ARCHLIB)/$(FULLEXT)/Install/pango-perl.typemap \
	  build/pango-perl-versions.h $(INST_ARCHLIB)/$(FULLEXT)/Install/pango-perl-versions.h \
	  C:\sources\Pango-1.222\pango.typemap $(INST_ARCHLIB)/$(FULLEXT)/Install/pango.typemap \
	  doctypes $(INST_ARCHLIB)/$(FULLEXT)/Install/doctypes \
	  lib/Pango.pm $(INST_LIBDIR)/Pango.pm 
	$(NOECHO) $(TOUCH) pm_to_blib


# --- MakeMaker selfdocument section:


# --- MakeMaker postamble section:

pango-perl.h.gch: pango-perl.h
	$(CCCMD) $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) pango-perl.h

precompiled-headers: pango-perl.h.gch

realclean ::
	-$(RM_RF) build perl-$(DISTNAME).spec pango-perl.h.gch 

BLIB_DONE=build/blib_done_$(LINKTYPE)

build/blib_done_dynamic :: $(INST_DYNAMIC)
	$(NOECHO) $(TOUCH) $@

build/blib_done_static :: $(INST_STATIC)
	$(NOECHO) $(TOUCH) $@

build/blib_done_ :: build/blib_done_dynamic
	$(NOECHO) $(TOUCH) $@

# documentation stuff
$(INST_LIB)/Glib/GenPod.pm $(INST_LIB)/Glib/ParseXSDoc.pm: pm_to_blib

build/doc.pl :: Makefile xs/Pango.xs xs/PangoAttributes.xs xs/PangoContext.xs xs/PangoFont.xs xs/PangoFontset.xs xs/PangoFontMap.xs xs/PangoLayout.xs xs/PangoRenderer.xs xs/PangoScript.xs xs/PangoTabs.xs xs/PangoTypes.xs xs/PangoCairo.xs xs/PangoGravity.xs xs/PangoMatrix.xs
	$(NOECHO) $(ECHO) Parsing XS files...
	$(NOECHO) C:\perl512\bin\perl.exe -I $(INST_LIB) -I $(INST_ARCHLIB) -MGlib::ParseXSDoc \
		-e "xsdocparse (qw(xs/Pango.xs xs/PangoAttributes.xs xs/PangoContext.xs xs/PangoFont.xs xs/PangoFontset.xs xs/PangoFontMap.xs xs/PangoLayout.xs xs/PangoRenderer.xs xs/PangoScript.xs xs/PangoTabs.xs xs/PangoTypes.xs xs/PangoCairo.xs xs/PangoGravity.xs xs/PangoMatrix.xs))" > $@

# passing all of these files through the single podindex file, which is 
# created at the same time, prevents problems with -j4 where xsdoc2pod would 
# have multiple instances
$(INST_LIB)\Pango\Attribute.pod $(INST_LIB)\Pango\FontMap.pod $(INST_LIB)\Pango\FontDescription.pod $(INST_LIB)\Pango\AttrUnderlineColor.pod $(INST_LIB)\Pango\Cairo\Context.pod $(INST_LIB)\Pango\Fontset.pod $(INST_LIB)\Pango\Font.pod $(INST_LIB)\Pango\AttrShape.pod $(INST_LIB)\Pango\AttrFontDesc.pod $(INST_LIB)\Pango\AttrColor.pod $(INST_LIB)\Pango\Renderer.pod $(INST_LIB)\Pango\version.pod $(INST_LIB)\Pango\Gravity.pod $(INST_LIB)\Pango\AttrRise.pod $(INST_LIB)\Pango\AttrForeground.pod $(INST_LIB)\Pango\AttrFamily.pod $(INST_LIB)\Pango\FontMetrics.pod $(INST_LIB)\Pango\Cairo\Font.pod $(INST_LIB)\Pango\AttrIterator.pod $(INST_LIB)\Pango\AttrString.pod $(INST_LIB)\Pango\Color.pod $(INST_LIB)\Pango\AttrScale.pod $(INST_LIB)\Pango\Context.pod $(INST_LIB)\Pango\AttrLetterSpacing.pod $(INST_LIB)\Pango\Cairo.pod $(INST_LIB)\Pango\AttrList.pod $(INST_LIB)\Pango\Cairo\FontMap.pod $(INST_LIB)\Pango\AttrLanguage.pod $(INST_LIB)\Pango\Script.pod $(INST_LIB)\Pango\Matrix.pod $(INST_LIB)\Pango\AttrStretch.pod $(INST_LIB)\Pango\AttrUnderline.pod $(INST_LIB)\Pango\FontFace.pod $(INST_LIB)\Pango\AttrGravityHint.pod $(INST_LIB)\Pango\ScriptIter.pod $(INST_LIB)\Pango\FontFamily.pod $(INST_LIB)\Pango\Language.pod $(INST_LIB)\Pango\AttrStrikethroughColor.pod $(INST_LIB)\Pango\LayoutIter.pod $(INST_LIB)\Pango\AttrInt.pod $(INST_LIB)\Pango\AttrStrikethrough.pod $(INST_LIB)\Pango\Layout.pod $(INST_LIB)\Pango\AttrWeight.pod $(INST_LIB)\Pango\AttrStyle.pod $(INST_LIB)\Pango\AttrGravity.pod $(INST_LIB)\Pango\TabArray.pod $(INST_LIB)\Pango\LayoutLine.pod $(INST_LIB)\Pango\AttrSize.pod $(INST_LIB)\Pango\AttrVariant.pod $(INST_LIB)\Pango\AttrBackground.pod $(INST_LIB)\Pango\AttrFallback.pod :: build/podindex

build/podindex :: $(BLIB_DONE) Makefile build/doc.pl $(POD_DEPENDS)
	$(NOECHO) $(ECHO) Generating POD...
	$(NOECHO) C:\perl512\bin\perl.exe -I $(INST_LIB) -I $(INST_ARCHLIB) -MGlib::GenPod -M$(NAME) \
		-e "add_types (qq(doctypes), qq(C\:\\perl512\\site\\lib\\Glib\\Install\\doctypes), qq(C\:\\perl512\\site\\lib\\Cairo\\Install\\doctypes));  Glib::GenPod::set_copyright(qq/Copyright (C) 2003-2011 by the gtk2-perl team.\n\nThis software is licensed under the LGPL.  See L<Pango> for a full notice.\n/); Glib::GenPod::set_main_mod(qq(Pango)); $(POD_SET) xsdoc2pod(q(build/doc.pl), q($(INST_LIB)), q(build/podindex));"

$(INST_LIB)/$(FULLEXT)/:
	C:\perl512\bin\perl.exe -MExtUtils::Command -e mkpath $@

$(INST_LIB)/$(FULLEXT)/index.pod :: $(INST_LIB)/$(FULLEXT)/ build/podindex
	$(NOECHO) $(ECHO) Creating POD index...
	$(NOECHO) C:\perl512\bin\perl.exe -e "print qq(\n=head1 NAME\n\n$(NAME) - API Reference Pod Index\n\n=head1 PAGES\n\n=over\n\n)" \
		> $(INST_LIB)/$(FULLEXT)/index.pod
	$(NOECHO) C:\perl512\bin\perl.exe -ne "print q(=item L<) . (split q( ))[1] . qq(>\n\n);" < build/podindex >> $(INST_LIB)/$(FULLEXT)/index.pod
	$(NOECHO) C:\perl512\bin\perl.exe -e "print qq(=back\n\n);" >> $(INST_LIB)/$(FULLEXT)/index.pod


# End.
