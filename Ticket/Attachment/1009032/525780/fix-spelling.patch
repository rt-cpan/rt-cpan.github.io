Description: Fix some spelling errors found by lintian.
Origin: vendor
Forwarded: no
Author: Alessandro Ghedini <al3xbio@gmail.com>
Last-Update: 2011-10-22

--- a/lib/Git/Repository/Command.pm
+++ b/lib/Git/Repository/Command.pm
@@ -264,7 +264,7 @@
 =back
 
 If the C<Git::Repository> object has its own option hash, it will be used
-to provide default values that can be overriden by the actual option hash
+to provide default values that can be overridden by the actual option hash
 passed to C<new()>.
 
 If several option hashes are passed to C<new()>, they will all be merged,
--- a/lib/Git/Repository/Log/Iterator.pm
+++ b/lib/Git/Repository/Log/Iterator.pm
@@ -102,7 +102,7 @@
 of C<--pretty=raw>, and so will force the the C<--pretty> option
 (in case C<format.pretty> is defined in the Git configuration).
 
-Extra ouput (like patches) will be stored in the C<extra> parameter of
+Extra output (like patches) will be stored in the C<extra> parameter of
 the C<Git::Repository::Log> object. Decorations will be lost.
 
 When unsupported options are recognized in the parameter list, C<new()>
--- a/lib/Git/Repository.pm
+++ b/lib/Git/Repository.pm
@@ -343,7 +343,7 @@
 
 However, the C<GIT_DIR> and C<GIT_WORK_TREE> environment variables are
 special: if the command is run in the context of a C<Git::Repository>
-object, they will be overriden by the object's C<git_dir> and
+object, they will be overridden by the object's C<git_dir> and
 C<work_tree> attributes, respectively. It is however still possible to
 override them if necessary, using the C<env> option.
 
