diff --git a/cpan/Time-HiRes/HiRes.xs b/cpan/Time-HiRes/HiRes.xs
index 69eee69..397212c 100644
--- a/cpan/Time-HiRes/HiRes.xs
+++ b/cpan/Time-HiRes/HiRes.xs
@@ -461,20 +461,20 @@ hrt_usleep(unsigned long usec)
 #if defined(HAS_SETITIMER) && defined(ITIMER_REAL)
 
 static int
-hrt_ualarm_itimero(struct itimerval* itv, int usec, int uinterval)
+hrt_ualarm_itimero(struct itimerval *oitv, int usec, int uinterval)
 {
-   itv->it_value.tv_sec = usec / IV_1E6;
-   itv->it_value.tv_usec = usec % IV_1E6;
-   itv->it_interval.tv_sec = uinterval / IV_1E6;
-   itv->it_interval.tv_usec = uinterval % IV_1E6;
-   return setitimer(ITIMER_REAL, itv, 0);
+   struct itimerval itv;
+   itv.it_value.tv_sec = usec / IV_1E6;
+   itv.it_value.tv_usec = usec % IV_1E6;
+   itv.it_interval.tv_sec = uinterval / IV_1E6;
+   itv.it_interval.tv_usec = uinterval % IV_1E6;
+   return setitimer(ITIMER_REAL, &itv, oitv);
 }
 
 int
 hrt_ualarm_itimer(int usec, int uinterval)
 {
-  struct itimerval itv;
-  return hrt_ualarm_itimero(&itv, usec, uinterval);
+  return hrt_ualarm_itimero(NULL, usec, uinterval);
 }
 
 #ifdef HAS_UALARM
@@ -914,9 +914,11 @@ ualarm(useconds,uinterval=0)
 	  {
 	        struct itimerval itv;
 	        if (hrt_ualarm_itimero(&itv, useconds, uinterval)) {
-		  RETVAL = itv.it_value.tv_sec + IV_1E6 * itv.it_value.tv_usec;
-		} else {
+		  /* To conform to ualarm's interface, we're actually ignoring
+		     an error here.  */
 		  RETVAL = 0;
+		} else {
+		  RETVAL = itv.it_value.tv_sec * IV_1E6 + itv.it_value.tv_usec;
 		}
 	  }
 #else
@@ -942,9 +944,11 @@ alarm(seconds,interval=0)
 	  {
 	        struct itimerval itv;
 	        if (hrt_ualarm_itimero(&itv, useconds, uinterval)) {
-		  RETVAL = (NV)itv.it_value.tv_sec + (NV)itv.it_value.tv_usec / NV_1E6;
-		} else {
+		  /* To conform to alarm's interface, we're actually ignoring
+		     an error here.  */
 		  RETVAL = 0;
+		} else {
+		  RETVAL = itv.it_value.tv_sec + ((NV)itv.it_value.tv_usec) / NV_1E6;
 		}
 	  }
 #else
diff --git a/cpan/Time-HiRes/t/HiRes.t b/cpan/Time-HiRes/t/HiRes.t
index 373c328..db25fea 100644
--- a/cpan/Time-HiRes/t/HiRes.t
+++ b/cpan/Time-HiRes/t/HiRes.t
@@ -12,7 +12,7 @@ BEGIN {
     }
 }
 
-BEGIN { $| = 1; print "1..40\n"; }
+BEGIN { $| = 1; print "1..48\n"; }
 
 END { print "not ok 1\n" unless $loaded }
 
@@ -746,7 +746,7 @@ if ($^O =~ /^(cygwin|MSWin)/) {
 }
 
 unless ($can_subsecond_alarm) {
-    skip 39..40;
+    skip 39..44;
 } else {
     {
 	my $alrm;
@@ -764,6 +764,48 @@ unless ($can_subsecond_alarm) {
 	1 while time() - $t0 <= 2;
 	print $alrm ? "ok 40\n" : "not ok 40\n";
     }
+
+    {
+	my $alrm = 0;
+	$SIG{ALRM} = sub { $alrm++ };
+	my $got = Time::HiRes::alarm(2.7);
+	ok(41, $got == 0, $got);
+
+	my $t0 = time();
+	1 while time() - $t0 <= 1;
+
+	$got = Time::HiRes::alarm(0);
+	ok(42, $got > 0 && $got <= 1.7, $got);
+
+	ok(43, $alrm == 0, $alrm);
+
+	$got = Time::HiRes::alarm(0);
+	ok(44, $got == 0, $got);
+    }
+}
+
+if ($have_ualarm) {
+    {
+	my $alrm = 0;
+	$SIG{ALRM} = sub { $alrm++ };
+	my $got = Time::HiRes::ualarm(500_000);
+	ok(45, $got == 0, $got);
+
+	my $t0 = Time::HiRes::time();
+	my $t1;
+	do {
+	    $t1 = Time::HiRes::time();
+	} while $t1 - $t0 <= 0.3;
+	print "# t0 = $t0\n# t1 = $t1\n# t1 - t0 = ", ($t1 - $t0), "\n";
+
+	$got = Time::HiRes::ualarm(0);
+	ok(46, $got > 0 && $got < 300_000, $got);
+
+	ok(47, $alrm == 0, $alrm);
+
+	$got = Time::HiRes::ualarm(0);
+	ok(48, $got == 0, $got);
+    }
 }
 
 END {
