


 PPPPOOOODDDD2222MMMMAAAANNNN((((1111))))                     ppppeeeerrrrllll vvvv5555....11116666....2222                      PPPPOOOODDDD2222MMMMAAAANNNN((((1111))))
9 UUUUsssseeeerrrr CCCCoooonnnnttttrrrriiiibbbbuuuutttteeeedddd PPPPeeeerrrrllll DDDDooooccccuuuummmmeeeennnnttttaaaattttiiiioooonnnn     UUUUsssseeeerrrr CCCCoooonnnnttttrrrriiiibbbbuuuutttteeeedddd PPPPeeeerrrrllll DDDDooooccccuuuummmmeeeennnnttttaaaattttiiiioooonnnn
9                                 2222000011113333----11110000----00006666



 NNNNAAAAMMMMEEEE
      pod2man - Convert POD data to formatted *roff input

 SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
      pod2man [--------cccceeeennnntttteeeerrrr=_s_t_r_i_n_g] [--------ddddaaaatttteeee=_s_t_r_i_n_g] [--------eeeerrrrrrrroooorrrrssss=_s_t_y_l_e]
          [--------ffffiiiixxxxeeeedddd=_f_o_n_t] [--------ffffiiiixxxxeeeeddddbbbboooolllldddd=_f_o_n_t] [--------ffffiiiixxxxeeeeddddiiiittttaaaalllliiiicccc=_f_o_n_t]
          [--------ffffiiiixxxxeeeeddddbbbboooollllddddiiiittttaaaalllliiiicccc=_f_o_n_t] [--------nnnnaaaammmmeeee=_n_a_m_e] [--------nnnnoooouuuurrrrllllssss]
          [--------ooooffffffffiiiicccciiiiaaaallll] [--------qqqquuuuooootttteeeessss=_q_u_o_t_e_s] [--------rrrreeeelllleeeeaaaasssseeee[=_v_e_r_s_i_o_n]]
          [--------sssseeeeccccttttiiiioooonnnn=_m_a_n_e_x_t] [--------ssssttttddddeeeerrrrrrrr] [--------uuuuttttffff8888] [--------vvvveeeerrrrbbbboooosssseeee]
          [_i_n_p_u_t [_o_u_t_p_u_t] ...]

      pod2man --------hhhheeeellllpppp

 DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
      ppppoooodddd2222mmmmaaaannnn is a front-end for Pod::Man, using it to generate *roff input
      from POD source.  The resulting *roff code is suitable for display on
      a terminal using _n_r_o_f_f(1), normally via _m_a_n(1), or printing using
      _t_r_o_f_f(1).

      _i_n_p_u_t is the file to read for POD source (the POD can be embedded in
      code).  If _i_n_p_u_t isn't given, it defaults to "STDIN".  _o_u_t_p_u_t, if
      given, is the file to which to write the formatted output.  If _o_u_t_p_u_t
      isn't given, the formatted output is written to "STDOUT".  Several POD
      files can be processed in the same ppppoooodddd2222mmmmaaaannnn invocation (saving module
      load and compile times) by providing multiple pairs of _i_n_p_u_t and
      _o_u_t_p_u_t files on the command line.

      --------sssseeeeccccttttiiiioooonnnn, --------rrrreeeelllleeeeaaaasssseeee, --------cccceeeennnntttteeeerrrr, --------ddddaaaatttteeee, and --------ooooffffffffiiiicccciiiiaaaallll can be used to
      set the headers and footers to use; if not given, Pod::Man will assume
      various defaults.  See below or Pod::Man for details.

      ppppoooodddd2222mmmmaaaannnn assumes that your *roff formatters have a fixed-width font
      named "CW".  If yours is called something else (like "CR"), use
      --------ffffiiiixxxxeeeedddd to specify it.  This generally only matters for troff output
      for printing.  Similarly, you can set the fonts used for bold, italic,
      and bold italic fixed-width output.

      Besides the obvious pod conversions, Pod::Man, and therefore pod2man
      also takes care of formatting _f_u_n_c(), func(n), and simple variable
      references like $foo or @bar so you don't have to use code escapes for
      them; complex expressions like $fred{'stuff'} will still need to be
      escaped, though.  It also translates dashes that aren't used as
      hyphens into en dashes, makes long dashes--like this--into proper em
      dashes, fixes "paired quotes," and takes care of several other troff-
      specific tweaks.  See Pod::Man for complete information.

 OOOOPPPPTTTTIIIIOOOONNNNSSSS
      ----cccc _s_t_r_i_n_g, --------cccceeeennnntttteeeerrrr=_s_t_r_i_n_g
          Sets the centered page header to _s_t_r_i_n_g.  The default is "User



                                    - 1 -      Formatted:  February 12, 2014






 PPPPOOOODDDD2222MMMMAAAANNNN((((1111))))                     ppppeeeerrrrllll vvvv5555....11116666....2222                      PPPPOOOODDDD2222MMMMAAAANNNN((((1111))))
9 UUUUsssseeeerrrr CCCCoooonnnnttttrrrriiiibbbbuuuutttteeeedddd PPPPeeeerrrrllll DDDDooooccccuuuummmmeeeennnnttttaaaattttiiiioooonnnn     UUUUsssseeeerrrr CCCCoooonnnnttttrrrriiiibbbbuuuutttteeeedddd PPPPeeeerrrrllll DDDDooooccccuuuummmmeeeennnnttttaaaattttiiiioooonnnn
9                                 2222000011113333----11110000----00006666



          Contributed Perl Documentation", but also see --------ooooffffffffiiiicccciiiiaaaallll below.

      ----dddd _s_t_r_i_n_g, --------ddddaaaatttteeee=_s_t_r_i_n_g
          Set the left-hand footer string to this value.  By default, the
          modification date of the input file will be used, or the current
          date if input comes from "STDIN".

      ----eeeerrrrrrrroooorrrrssss=_s_t_y_l_e
          Set the error handling style.  "die" says to throw an exception on
          any POD formatting error.  "stderr" says to report errors on
          standard error, but not to throw an exception.  "pod" says to
          include a POD ERRORS section in the resulting documentation
          summarizing the errors.  "none" ignores POD errors entirely, as
          much as possible.

          The default is "die".

      --------ffffiiiixxxxeeeedddd=_f_o_n_t
          The fixed-width font to use for verbatim text and code.  Defaults
          to "CW".  Some systems may want "CR" instead.  Only matters for
          _t_r_o_f_f(1) output.

      --------ffffiiiixxxxeeeeddddbbbboooolllldddd=_f_o_n_t
          Bold version of the fixed-width font.  Defaults to "CB".  Only
          matters for _t_r_o_f_f(1) output.

      --------ffffiiiixxxxeeeeddddiiiittttaaaalllliiiicccc=_f_o_n_t
          Italic version of the fixed-width font (actually, something of a
          misnomer, since most fixed-width fonts only have an oblique
          version, not an italic version).  Defaults to "CI".  Only matters
          for _t_r_o_f_f(1) output.

      --------ffffiiiixxxxeeeeddddbbbboooollllddddiiiittttaaaalllliiiicccc=_f_o_n_t
          Bold italic (probably actually oblique) version of the fixed-width
          font.  Pod::Man doesn't assume you have this, and defaults to
          "CB".  Some systems (such as Solaris) have this font available as
          "CX".  Only matters for _t_r_o_f_f(1) output.

      ----hhhh, --------hhhheeeellllpppp
          Print out usage information.

      ----llll, --------llllaaaaxxxx
          No longer used.  ppppoooodddd2222mmmmaaaannnn used to check its input for validity as a
          manual page, but this should now be done by _p_o_d_c_h_e_c_k_e_r(1) instead.
          Accepted for backward compatibility; this option no longer does
          anything.

      ----nnnn _n_a_m_e, --------nnnnaaaammmmeeee=_n_a_m_e
          Set the name of the manual page to _n_a_m_e.  Without this option, the



                                    - 2 -      Formatted:  February 12, 2014






 PPPPOOOODDDD2222MMMMAAAANNNN((((1111))))                     ppppeeeerrrrllll vvvv5555....11116666....2222                      PPPPOOOODDDD2222MMMMAAAANNNN((((1111))))
9 UUUUsssseeeerrrr CCCCoooonnnnttttrrrriiiibbbbuuuutttteeeedddd PPPPeeeerrrrllll DDDDooooccccuuuummmmeeeennnnttttaaaattttiiiioooonnnn     UUUUsssseeeerrrr CCCCoooonnnnttttrrrriiiibbbbuuuutttteeeedddd PPPPeeeerrrrllll DDDDooooccccuuuummmmeeeennnnttttaaaattttiiiioooonnnn
9                                 2222000011113333----11110000----00006666



          manual name is set to the uppercased base name of the file being
          converted unless the manual section is 3, in which case the path
          is parsed to see if it is a Perl module path.  If it is, a path
          like ".../lib/Pod/Man.pm" is converted into a name like
          "Pod::Man".  This option, if given, overrides any automatic
          determination of the name.

          Note that this option is probably not useful when converting
          multiple POD files at once.  The convention for Unix man pages for
          commands is for the man page title to be in all-uppercase even if
          the command isn't.

      --------nnnnoooouuuurrrrllllssss
          Normally, L<> formatting codes with a URL but anchor text are
          formatted to show both the anchor text and the URL.  In other
          words:

              L<foo|http://example.com/>

          is formatted as:

              foo <http://example.com/>

          This flag, if given, suppresses the URL when anchor text is given,
          so this example would be formatted as just "foo".  This can
          produce less cluttered output in cases where the URLs are not
          particularly important.

      ----oooo, --------ooooffffffffiiiicccciiiiaaaallll
          Set the default header to indicate that this page is part of the
          standard Perl release, if --------cccceeeennnntttteeeerrrr is not also given.

      ----qqqq _q_u_o_t_e_s, --------qqqquuuuooootttteeeessss=_q_u_o_t_e_s
          Sets the quote marks used to surround C<> text to _q_u_o_t_e_s.  If
          _q_u_o_t_e_s is a single character, it is used as both the left and
          right quote; if _q_u_o_t_e_s is two characters, the first character is
          used as the left quote and the second as the right quoted; and if
          _q_u_o_t_e_s is four characters, the first two are used as the left
          quote and the second two as the right quote.

          _q_u_o_t_e_s may also be set to the special value "none", in which case
          no quote marks are added around C<> text (but the font is still
          changed for troff output).

      ----rrrr, --------rrrreeeelllleeeeaaaasssseeee
          Set the centered footer.  By default, this is the version of Perl
          you run ppppoooodddd2222mmmmaaaannnn under.  Note that some system an macro sets assume
          that the centered footer will be a modification date and will
          prepend something like "Last modified: "; if this is the case, you



                                    - 3 -      Formatted:  February 12, 2014






 PPPPOOOODDDD2222MMMMAAAANNNN((((1111))))                     ppppeeeerrrrllll vvvv5555....11116666....2222                      PPPPOOOODDDD2222MMMMAAAANNNN((((1111))))
9 UUUUsssseeeerrrr CCCCoooonnnnttttrrrriiiibbbbuuuutttteeeedddd PPPPeeeerrrrllll DDDDooooccccuuuummmmeeeennnnttttaaaattttiiiioooonnnn     UUUUsssseeeerrrr CCCCoooonnnnttttrrrriiiibbbbuuuutttteeeedddd PPPPeeeerrrrllll DDDDooooccccuuuummmmeeeennnnttttaaaattttiiiioooonnnn
9                                 2222000011113333----11110000----00006666



          may want to set --------rrrreeeelllleeeeaaaasssseeee to the last modified date and --------ddddaaaatttteeee to
          the version number.

      ----ssss, --------sssseeeeccccttttiiiioooonnnn
          Set the section for the ".TH" macro.  The standard section
          numbering convention is to use 1 for user commands, 2 for system
          calls, 3 for functions, 4 for devices, 5 for file formats, 6 for
          games, 7 for miscellaneous information, and 8 for administrator
          commands.  There is a lot of variation here, however; some systems
          (like Solaris) use 4 for file formats, 5 for miscellaneous
          information, and 7 for devices.  Still others use 1m instead of 8,
          or some mix of both.  About the only section numbers that are
          reliably consistent are 1, 2, and 3.

          By default, section 1 will be used unless the file ends in ".pm",
          in which case section 3 will be selected.

      --------ssssttttddddeeeerrrrrrrr
          By default, ppppoooodddd2222mmmmaaaannnn dies if any errors are detected in the POD
          input.  If --------ssssttttddddeeeerrrrrrrr is given and no --------eeeerrrrrrrroooorrrrssss flag is present,
          errors are sent to standard error, but ppppoooodddd2222mmmmaaaannnn does not abort.
          This is equivalent to "--errors=stderr" and is supported for
          backward compatibility.

      ----uuuu, --------uuuuttttffff8888
          By default, ppppoooodddd2222mmmmaaaannnn produces the most conservative possible *roff
          output to try to ensure that it will work with as many different
          *roff implementations as possible.  Many *roff implementations
          cannot handle non-ASCII characters, so this means all non-ASCII
          characters are converted either to a *roff escape sequence that
          tries to create a properly accented character (at least for troff
          output) or to "X".

          This option says to instead output literal UTF-8 characters.  If
          your *roff implementation can handle it, this is the best output
          format to use and avoids corruption of documents containing non-
          ASCII characters.  However, be warned that *roff source with
          literal UTF-8 characters is not supported by many implementations
          and may even result in segfaults and other bad behavior.

          Be aware that, when using this option, the input encoding of your
          POD source must be properly declared unless it is US-ASCII or
          Latin-1.  POD input without an "=encoding" command will be assumed
          to be in Latin-1, and if it's actually in UTF-8, the output will
          be double-encoded.  See _p_e_r_l_p_o_d(1) for more information on the
          "=encoding" command.

      ----vvvv, --------vvvveeeerrrrbbbboooosssseeee
          Print out the name of each output file as it is being generated.



                                    - 4 -      Formatted:  February 12, 2014






 PPPPOOOODDDD2222MMMMAAAANNNN((((1111))))                     ppppeeeerrrrllll vvvv5555....11116666....2222                      PPPPOOOODDDD2222MMMMAAAANNNN((((1111))))
9 UUUUsssseeeerrrr CCCCoooonnnnttttrrrriiiibbbbuuuutttteeeedddd PPPPeeeerrrrllll DDDDooooccccuuuummmmeeeennnnttttaaaattttiiiioooonnnn     UUUUsssseeeerrrr CCCCoooonnnnttttrrrriiiibbbbuuuutttteeeedddd PPPPeeeerrrrllll DDDDooooccccuuuummmmeeeennnnttttaaaattttiiiioooonnnn
9                                 2222000011113333----11110000----00006666



 EEEEXXXXIIIITTTT SSSSTTTTAAAATTTTUUUUSSSS
      As long as all documents processed result in some output, even if that
      output includes errata (a "POD ERRORS" section generated with
      "--errors=pod"), ppppoooodddd2222mmmmaaaannnn will exit with status 0.  If any of the
      documents being processed do not result in an output document, ppppoooodddd2222mmmmaaaannnn
      will exit with status 1.  If there are syntax errors in a POD document
      being processed and the error handling style is set to the default of
      "die", ppppoooodddd2222mmmmaaaannnn will abort immediately with exit status 255.

 DDDDIIIIAAAAGGGGNNNNOOOOSSSSTTTTIIIICCCCSSSS
      If ppppoooodddd2222mmmmaaaannnn fails with errors, see Pod::Man and Pod::Simple for
      information about what those errors might mean.

 EEEEXXXXAAAAMMMMPPPPLLLLEEEESSSS
          pod2man program > program.1
          pod2man SomeModule.pm /usr/perl/man/man3/SomeModule.3
          pod2man --section=7 note.pod > note.7

      If you would like to print out a lot of man page continuously, you
      probably want to set the C and D registers to set contiguous page
      numbering and even/odd paging, at least on some versions of _m_a_n(7).

          troff -man -rC1 -rD1 perl.1 perldata.1 perlsyn.1 ...

      To get index entries on "STDERR", turn on the F register, as in:

          troff -man -rF1 perl.1

      The indexing merely outputs messages via ".tm" for each major page,
      section, subsection, item, and any "X<>" directives.  See Pod::Man for
      more details.

 BBBBUUUUGGGGSSSS
      Lots of this documentation is duplicated from Pod::Man.

 SSSSEEEEEEEE AAAALLLLSSSSOOOO
      Pod::Man, Pod::Simple, _m_a_n(1), _n_r_o_f_f(1), _p_e_r_l_p_o_d(1), _p_o_d_c_h_e_c_k_e_r(1),
      _p_e_r_l_p_o_d_s_t_y_l_e(1), _t_r_o_f_f(1), _m_a_n(7)

      The man page documenting the an macro set may be _m_a_n(5) instead of
      _m_a_n(7) on your system.

      The current version of this script is always available from its web
      site at <http://www.eyrie.org/~eagle/software/podlators/>.  It is also
      part of the Perl core distribution as of 5.6.0.

 AAAAUUUUTTTTHHHHOOOORRRR
      Russ Allbery <rra@stanford.edu>, based _v_e_r_y heavily on the original
      ppppoooodddd2222mmmmaaaannnn by Larry Wall and Tom Christiansen.



                                    - 5 -      Formatted:  February 12, 2014






 PPPPOOOODDDD2222MMMMAAAANNNN((((1111))))                     ppppeeeerrrrllll vvvv5555....11116666....2222                      PPPPOOOODDDD2222MMMMAAAANNNN((((1111))))
9 UUUUsssseeeerrrr CCCCoooonnnnttttrrrriiiibbbbuuuutttteeeedddd PPPPeeeerrrrllll DDDDooooccccuuuummmmeeeennnnttttaaaattttiiiioooonnnn     UUUUsssseeeerrrr CCCCoooonnnnttttrrrriiiibbbbuuuutttteeeedddd PPPPeeeerrrrllll DDDDooooccccuuuummmmeeeennnnttttaaaattttiiiioooonnnn
9                                 2222000011113333----11110000----00006666



 CCCCOOOOPPPPYYYYRRRRIIIIGGGGHHHHTTTT AAAANNNNDDDD LLLLIIIICCCCEEEENNNNSSSSEEEE
      Copyright 1999, 2000, 2001, 2004, 2006, 2008, 2010, 2012, 2013 Russ
      Allbery <rra@stanford.edu>.

      This program is free software; you may redistribute it and/or modify
      it under the same terms as Perl itself.














































                                    - 6 -      Formatted:  February 12, 2014



