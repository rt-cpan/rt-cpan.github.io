[root@sidona Net-DNS-0.51_01]# perl Makefile.PL


The libraries needed to support IPv6 transport have not been found.
You will need recent versions of the IO::Socket::INET6 and Socket6
libraries (from CPAN).

Testing if you have a C compiler and the needed header files....
cc    -c -o compile.o compile.c
You have a working compiler.

You appear to be directly connected to the Internet.  I have some tests
that try to query live nameservers.

Do you want to enable these tests? [y]
Checking if your kit is complete...
Looks good
Writing Makefile for Net::DNS
[root@sidona Net-DNS-0.51_01]# make
cp lib/Net/DNS/RR/A.pm blib/lib/Net/DNS/RR/A.pm
cp lib/Net/DNS/Resolver/Win32.pm blib/lib/Net/DNS/Resolver/Win32.pm
cp lib/Net/DNS/RR/Unknown.pm blib/lib/Net/DNS/RR/Unknown.pm
cp lib/Net/DNS/RR/EID.pm blib/lib/Net/DNS/RR/EID.pm
cp lib/Net/DNS/RR/ISDN.pm blib/lib/Net/DNS/RR/ISDN.pm
cp lib/Net/DNS/RR/MX.pm blib/lib/Net/DNS/RR/MX.pm
cp lib/Net/DNS/Header.pm blib/lib/Net/DNS/Header.pm
cp lib/Net/DNS/RR/SOA.pm blib/lib/Net/DNS/RR/SOA.pm
cp lib/Net/DNS/RR/OPT.pm blib/lib/Net/DNS/RR/OPT.pm
cp lib/Net/DNS/RR/NIMLOC.pm blib/lib/Net/DNS/RR/NIMLOC.pm
cp lib/Net/DNS/RR/TXT.pm blib/lib/Net/DNS/RR/TXT.pm
cp lib/Net/DNS/RR/DNAME.pm blib/lib/Net/DNS/RR/DNAME.pm
cp lib/Net/DNS/RR/AAAA.pm blib/lib/Net/DNS/RR/AAAA.pm
cp lib/Net/DNS.pm blib/lib/Net/DNS.pm
cp lib/Net/DNS/RR/X25.pm blib/lib/Net/DNS/RR/X25.pm
cp lib/Net/DNS/RR/RP.pm blib/lib/Net/DNS/RR/RP.pm
cp lib/Net/DNS/Resolver/Recurse.pm blib/lib/Net/DNS/Resolver/Recurse.pm
cp lib/Net/DNS/Resolver/Cygwin.pm blib/lib/Net/DNS/Resolver/Cygwin.pm
cp lib/Net/DNS/RR/PTR.pm blib/lib/Net/DNS/RR/PTR.pm
cp lib/Net/DNS/RR/TSIG.pm blib/lib/Net/DNS/RR/TSIG.pm
cp lib/Net/DNS/RR/NS.pm blib/lib/Net/DNS/RR/NS.pm
cp lib/Net/DNS/Update.pm blib/lib/Net/DNS/Update.pm
cp lib/Net/DNS/Resolver.pm blib/lib/Net/DNS/Resolver.pm
cp lib/Net/DNS/RR/PX.pm blib/lib/Net/DNS/RR/PX.pm
cp lib/Net/DNS/Nameserver.pm blib/lib/Net/DNS/Nameserver.pm
cp lib/Net/DNS/RR/NULL.pm blib/lib/Net/DNS/RR/NULL.pm
cp lib/Net/DNS/RR/LOC.pm blib/lib/Net/DNS/RR/LOC.pm
cp lib/Net/DNS/RR/SRV.pm blib/lib/Net/DNS/RR/SRV.pm
cp lib/Net/DNS/RR/RT.pm blib/lib/Net/DNS/RR/RT.pm
cp lib/Net/DNS/RR/AFSDB.pm blib/lib/Net/DNS/RR/AFSDB.pm
cp lib/Net/DNS/RR/MR.pm blib/lib/Net/DNS/RR/MR.pm
cp lib/Net/DNS/RR/MINFO.pm blib/lib/Net/DNS/RR/MINFO.pm
cp lib/Net/DNS/FAQ.pod blib/lib/Net/DNS/FAQ.pod
cp lib/Net/DNS/RR/CNAME.pm blib/lib/Net/DNS/RR/CNAME.pm
cp lib/Net/DNS/Question.pm blib/lib/Net/DNS/Question.pm
cp lib/Net/DNS/RR/SSHFP.pm blib/lib/Net/DNS/RR/SSHFP.pm
cp lib/Net/DNS/RR/NAPTR.pm blib/lib/Net/DNS/RR/NAPTR.pm
cp lib/Net/DNS/RR.pm blib/lib/Net/DNS/RR.pm
cp lib/Net/DNS/Packet.pm blib/lib/Net/DNS/Packet.pm
cp lib/Net/DNS/RR/HINFO.pm blib/lib/Net/DNS/RR/HINFO.pm
cp lib/Net/DNS/RR/MG.pm blib/lib/Net/DNS/RR/MG.pm
cp lib/Net/DNS/RR/TKEY.pm blib/lib/Net/DNS/RR/TKEY.pm
cp lib/Net/DNS/RR/NSAP.pm blib/lib/Net/DNS/RR/NSAP.pm
cp lib/Net/DNS/RR/CERT.pm blib/lib/Net/DNS/RR/CERT.pm
cp lib/Net/DNS/Resolver/UNIX.pm blib/lib/Net/DNS/Resolver/UNIX.pm
cp lib/Net/DNS/RR/MB.pm blib/lib/Net/DNS/RR/MB.pm
cp lib/Net/DNS/Resolver/Base.pm blib/lib/Net/DNS/Resolver/Base.pm
gcc -c   -D_REENTRANT -D_GNU_SOURCE -DTHREADS_HAVE_PIDS -DDEBUGGING -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -I/usr/include/gdbm -O2 -g -pipe -m32 -march=i386 -mtune=pentium4   -DVERSION=\"0.51_01\" -DXS_VERSION=\"0.51_01\" -fPIC "-I/usr/lib/perl5/5.8.5/i386-linux-thread-multi/CORE"   netdns.c
ar cr netdns.a netdns.o
: netdns.a
/usr/bin/perl /usr/lib/perl5/5.8.5/ExtUtils/xsubpp  -typemap /usr/lib/perl5/5.8.5/ExtUtils/typemap  DNS.xs > DNS.xsc && mv DNS.xsc DNS.c
gcc -c   -D_REENTRANT -D_GNU_SOURCE -DTHREADS_HAVE_PIDS -DDEBUGGING -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -I/usr/include/gdbm -O2 -g -pipe -m32 -march=i386 -mtune=pentium4   -DVERSION=\"0.51_01\" -DXS_VERSION=\"0.51_01\" -fPIC "-I/usr/lib/perl5/5.8.5/i386-linux-thread-multi/CORE"   DNS.c
Running Mkbootstrap for Net::DNS ()
chmod 644 DNS.bs
rm -f blib/arch/auto/Net/DNS/DNS.so
gcc  -shared -L/usr/local/lib DNS.o  -o blib/arch/auto/Net/DNS/DNS.so netdns.a
chmod 755 blib/arch/auto/Net/DNS/DNS.so
cp DNS.bs blib/arch/auto/Net/DNS/DNS.bs
chmod 644 blib/arch/auto/Net/DNS/DNS.bs
Manifying blib/man3/Net::DNS::RR::A.3pm
Manifying blib/man3/Net::DNS::RR::Unknown.3pm
Manifying blib/man3/Net::DNS::Resolver::Win32.3pm
Manifying blib/man3/Net::DNS::RR::EID.3pm
Manifying blib/man3/Net::DNS::RR::ISDN.3pm
Manifying blib/man3/Net::DNS::RR::MX.3pm
Manifying blib/man3/Net::DNS::Header.3pm
Manifying blib/man3/Net::DNS::RR::SOA.3pm
Manifying blib/man3/Net::DNS::RR::OPT.3pm
Manifying blib/man3/Net::DNS::RR::NIMLOC.3pm
Manifying blib/man3/Net::DNS::RR::TXT.3pm
Manifying blib/man3/Net::DNS::RR::DNAME.3pm
Manifying blib/man3/Net::DNS::RR::AAAA.3pm
Manifying blib/man3/Net::DNS.3pm
Manifying blib/man3/Net::DNS::RR::X25.3pm
Manifying blib/man3/Net::DNS::RR::RP.3pm
Manifying blib/man3/Net::DNS::RR::PTR.3pm
Manifying blib/man3/Net::DNS::Resolver::Cygwin.3pm
Manifying blib/man3/Net::DNS::Resolver::Recurse.3pm
Manifying blib/man3/Net::DNS::RR::NS.3pm
Manifying blib/man3/Net::DNS::RR::TSIG.3pm
Manifying blib/man3/Net::DNS::Update.3pm
Manifying blib/man3/Net::DNS::Resolver.3pm
Manifying blib/man3/Net::DNS::RR::PX.3pm
Manifying blib/man3/Net::DNS::Nameserver.3pm
Manifying blib/man3/Net::DNS::RR::NULL.3pm
Manifying blib/man3/Net::DNS::RR::LOC.3pm
Manifying blib/man3/Net::DNS::RR::SRV.3pm
Manifying blib/man3/Net::DNS::RR::RT.3pm
Manifying blib/man3/Net::DNS::RR::AFSDB.3pm
Manifying blib/man3/Net::DNS::RR::MR.3pm
Manifying blib/man3/Net::DNS::RR::MINFO.3pm
Manifying blib/man3/Net::DNS::FAQ.3pm
Manifying blib/man3/Net::DNS::RR::CNAME.3pm
Manifying blib/man3/Net::DNS::Question.3pm
Manifying blib/man3/Net::DNS::RR::SSHFP.3pm
Manifying blib/man3/Net::DNS::RR::NAPTR.3pm
Manifying blib/man3/Net::DNS::Packet.3pm
Manifying blib/man3/Net::DNS::RR.3pm
Manifying blib/man3/Net::DNS::RR::HINFO.3pm
Manifying blib/man3/Net::DNS::RR::MG.3pm
Manifying blib/man3/Net::DNS::RR::TKEY.3pm
Manifying blib/man3/Net::DNS::RR::NSAP.3pm
Manifying blib/man3/Net::DNS::RR::CERT.3pm
Manifying blib/man3/Net::DNS::Resolver::UNIX.3pm
Manifying blib/man3/Net::DNS::RR::MB.3pm
Manifying blib/man3/Net::DNS::Resolver::Base.3pm
[root@sidona Net-DNS-0.51_01]# make test TEST_VERBOSE=1
PERL_DL_NONLAZY=1 /usr/bin/perl "-MExtUtils::Command::MM" "-e" "test_harness(1, 'blib/lib', 'blib/arch')" t/*.t
t/00-load..................1..75
ok 1 - use Net::DNS;
ok 2 - use Net::DNS::Resolver::Recurse;
ok 3 - use Net::DNS::Nameserver;
ok 4 - use Net::DNS::Resolver::Cygwin;
ok 5 - Net::DNS::RR::HINFO is not loaded
ok 6 - Net::DNS::RR::TXT is not loaded
ok 7 - Net::DNS::RR::AFSDB is not loaded
ok 8 - Net::DNS::RR::NULL is not loaded
ok 9 - Net::DNS::RR::EID is not loaded
ok 10 - Net::DNS::RR::OPT is not loaded
ok 11 - Net::DNS::RR::NS is not loaded
ok 12 - Net::DNS::RR::LOC is not loaded
ok 13 - Net::DNS::RR::TSIG is not loaded
ok 14 - Net::DNS::RR::SRV is not loaded
ok 15 - Net::DNS::RR::NSAP is not loaded
ok 16 - Net::DNS::RR::DNAME is not loaded
ok 17 - Net::DNS::RR::TKEY is not loaded
ok 18 - Net::DNS::RR::RP is not loaded
ok 19 - Net::DNS::RR::PX is not loaded
ok 20 - Net::DNS::RR::X25 is not loaded
ok 21 - Net::DNS::RR::AAAA is not loaded
ok 22 - Net::DNS::RR::MINFO is not loaded
ok 23 - Net::DNS::RR::MR is not loaded
ok 24 - Net::DNS::RR::A is not loaded
ok 25 - Net::DNS::RR::ISDN is not loaded
ok 26 - Net::DNS::RR::CNAME is not loaded
ok 27 - Net::DNS::RR::MG is not loaded
ok 28 - Net::DNS::RR::NAPTR is not loaded
ok 29 - Net::DNS::RR::SOA is not loaded
ok 30 - Net::DNS::RR::MB is not loaded
ok 31 - Net::DNS::RR::NIMLOC is not loaded
ok 32 - Net::DNS::RR::PTR is not loaded
ok 33 - Net::DNS::RR::MX is not loaded
ok 34 - Net::DNS::RR::RT is not loaded
ok 35 - Net::DNS::RR::SSHFP is not loaded
ok 36 - Net::DNS::RR::CERT is not loaded
ok 37 - Net::DNS::RR::HINFO loaded
ok 38 - Net::DNS::RR::TXT loaded
ok 39 - Net::DNS::RR::AFSDB loaded
ok 40 - Net::DNS::RR::NULL loaded
ok 41 - Net::DNS::RR::EID loaded
ok 42 - Net::DNS::RR::OPT loaded
ok 43 - Net::DNS::RR::NS loaded
ok 44 - Net::DNS::RR::LOC loaded
ok 45 - Net::DNS::RR::TSIG loaded
ok 46 - Net::DNS::RR::SRV loaded
ok 47 - Net::DNS::RR::NSAP loaded
ok 48 - Net::DNS::RR::DNAME loaded
ok 49 - Net::DNS::RR::TKEY loaded
ok 50 - Net::DNS::RR::RP loaded
ok 51 - Net::DNS::RR::PX loaded
ok 52 - Net::DNS::RR::X25 loaded
ok 53 - Net::DNS::RR::AAAA loaded
ok 54 - Net::DNS::RR::MINFO loaded
ok 55 - Net::DNS::RR::MR loaded
ok 56 - Net::DNS::RR::A loaded
ok 57 - Net::DNS::RR::ISDN loaded
ok 58 - Net::DNS::RR::CNAME loaded
ok 59 - Net::DNS::RR::MG loaded
ok 60 - Net::DNS::RR::NAPTR loaded
ok 61 - Net::DNS::RR::SOA loaded
ok 62 - Net::DNS::RR::MB loaded
ok 63 - Net::DNS::RR::NIMLOC loaded
ok 64 - Net::DNS::RR::PTR loaded
ok 65 - Net::DNS::RR::MX loaded
ok 66 - Net::DNS::RR::RT loaded
ok 67 - Net::DNS::RR::SSHFP loaded
ok 68 - Net::DNS::RR::CERT loaded
ok 69 - mx is imported
ok 70 - yxrrset is imported
ok 71 - nxrrset is imported
ok 72 - yxdomain is imported
ok 73 - nxdomain is imported
ok 74 - rr_add is imported
ok 75 - rr_del is imported
ok
t/00-pod...................1..0 # Skip Test::Pod v0.95 required for testing POD
skipped
        all skipped: Test::Pod v0.95 required for testing POD
t/00-version...............1..46
ok 1 - blib/lib/Net/DNS.pm has a version
ok 2 - blib/lib/Net/DNS/RR.pm has a version
ok 3 - blib/lib/Net/DNS/Packet.pm has a version
ok 4 - blib/lib/Net/DNS/Update.pm has a version
ok 5 - blib/lib/Net/DNS/Header.pm has a version
ok 6 - blib/lib/Net/DNS/Nameserver.pm has a version
ok 7 - blib/lib/Net/DNS/Resolver.pm has a version
ok 8 - blib/lib/Net/DNS/Question.pm has a version
ok 9 - blib/lib/Net/DNS/Resolver/Base.pm has a version
ok 10 - blib/lib/Net/DNS/Resolver/Win32.pm has a version
ok 11 - blib/lib/Net/DNS/Resolver/UNIX.pm has a version
ok 12 - blib/lib/Net/DNS/Resolver/Cygwin.pm has a version
ok 13 - blib/lib/Net/DNS/Resolver/Recurse.pm has a version
ok 14 - blib/lib/Net/DNS/RR/MX.pm has a version
ok 15 - blib/lib/Net/DNS/RR/DNAME.pm has a version
ok 16 - blib/lib/Net/DNS/RR/Unknown.pm has a version
ok 17 - blib/lib/Net/DNS/RR/NULL.pm has a version
ok 18 - blib/lib/Net/DNS/RR/CERT.pm has a version
ok 19 - blib/lib/Net/DNS/RR/TSIG.pm has a version
ok 20 - blib/lib/Net/DNS/RR/LOC.pm has a version
ok 21 - blib/lib/Net/DNS/RR/CNAME.pm has a version
ok 22 - blib/lib/Net/DNS/RR/RP.pm has a version
ok 23 - blib/lib/Net/DNS/RR/HINFO.pm has a version
ok 24 - blib/lib/Net/DNS/RR/TXT.pm has a version
ok 25 - blib/lib/Net/DNS/RR/MR.pm has a version
ok 26 - blib/lib/Net/DNS/RR/MINFO.pm has a version
ok 27 - blib/lib/Net/DNS/RR/SOA.pm has a version
ok 28 - blib/lib/Net/DNS/RR/PTR.pm has a version
ok 29 - blib/lib/Net/DNS/RR/MB.pm has a version
ok 30 - blib/lib/Net/DNS/RR/AFSDB.pm has a version
ok 31 - blib/lib/Net/DNS/RR/OPT.pm has a version
ok 32 - blib/lib/Net/DNS/RR/TKEY.pm has a version
ok 33 - blib/lib/Net/DNS/RR/NSAP.pm has a version
ok 34 - blib/lib/Net/DNS/RR/SSHFP.pm has a version
ok 35 - blib/lib/Net/DNS/RR/RT.pm has a version
ok 36 - blib/lib/Net/DNS/RR/EID.pm has a version
ok 37 - blib/lib/Net/DNS/RR/X25.pm has a version
ok 38 - blib/lib/Net/DNS/RR/SRV.pm has a version
ok 39 - blib/lib/Net/DNS/RR/NS.pm has a version
ok 40 - blib/lib/Net/DNS/RR/NIMLOC.pm has a version
ok 41 - blib/lib/Net/DNS/RR/PX.pm has a version
ok 42 - blib/lib/Net/DNS/RR/MG.pm has a version
ok 43 - blib/lib/Net/DNS/RR/NAPTR.pm has a version
ok 44 - blib/lib/Net/DNS/RR/A.pm has a version
ok 45 - blib/lib/Net/DNS/RR/AAAA.pm has a version
ok 46 - blib/lib/Net/DNS/RR/ISDN.pm has a version
ok
t/01-resolver-env..........1..13
ok 1 - use Net::DNS;
ok 2 - new() returned something
ok 3 - nameservers() works
ok 4 - Nameserver set correctly
ok 5 - Nameserver set correctly
ok 6 - Search set correctly
ok 7 - Search set correctly
ok 8 - Local domain works
ok 9 - Retransmit works
ok 10 - Retry works
ok 11 - Debug works
ok 12 - Correct warning in absense of Net::DNS::SEC
ok 13 - dnssec() sets udppacketsize to 2048
ok
t/01-resolver-file.........1..8
ok 1 - use Net::DNS;
ok 2 # skip Could not read configuration file
ok 3 # skip Could not read configuration file
ok 4 # skip Could not read configuration file
ok 5 # skip Could not read configuration file
ok 6 # skip Could not read configuration file
ok 7 # skip Could not read configuration file
ok 8 # skip Could not read configuration file
ok
        7/8 skipped: Could not read configuration file
t/01-resolver-opt..........1..60
ok 1 - use Net::DNS;
ok 2 - new() returned something
ok 3 - new() returns an object of the correct class. isa Net::DNS::Resolver
ok 4 - nameservers() works
ok 5 - Nameserver set correctly
ok 6 - Nameserver set correctly
ok 7 - Search set correctly
ok 8 - Search set correctly
ok 9 - Local domain works
ok 10 - Error thrown trying to open non-existant file.
ok 11 - Net::DNS::Resolver->new returned undef
ok 12 - persistent_tcp is correct
ok 13 - stayopen is correct
ok 14 - srcaddr is correct
ok 15 - domain is correct
ok 16 - debug is correct
ok 17 - defnames is correct
ok 18 - searchlist is correct
ok 19 - retrans is correct
ok 20 - tcp_timeout is correct
ok 21 - nameservers is correct
ok 22 - port is correct
ok 23 - usevc is correct
ok 24 - retry is correct
ok 25 - igntc is correct
ok 26 - recurse is correct
ok 27 - dnsrch is correct
ok 28 - dnssec is correct
ok 29 - udp_timeout is correct
ok 30 - srcport is correct
ok 31 - Invalid input caught
ok 32 - No resolver returned
ok 33 - Invalid input caught
ok 34 - No resolver returned
ok 35 - Invalid input caught
ok 36 - No resolver returned
ok 37 - Invalid input caught
ok 38 - No resolver returned
ok 39 - Invalid input caught
ok 40 - No resolver returned
ok 41 - Invalid input caught
ok 42 - No resolver returned
ok 43 - Invalid input caught
ok 44 - No resolver returned
ok 45 - Invalid input caught
ok 46 - No resolver returned
ok 47 - Invalid input caught
ok 48 - No resolver returned
ok 49 - Invalid input caught
ok 50 - No resolver returned
ok 51 - errorstring is not set
ok 52 - cdflag is not set
ok 53 - querytime is not set
ok 54 - axfr_sel is not set
ok 55 - udppacketsize is not set
ok 56 - axfr_rr is not set
ok 57 - answerfrom is not set
ok 58 - answersize is not set
ok 59 - axfr_soa_count is not set
ok 60 - tsig_rr is not set
ok
t/01-resolver..............1..44
ok 1 - use Net::DNS;
ok 2 - new() returned something
ok 3 - new() returns an object of the correct class. isa Net::DNS::Resolver
ok 4 - nameservers() works
ok 5 - setting searchlist returns correctly.
ok 6 - setting searchlist stickts.
ok 7 - setting persistent_tcp returns correctly
ok 8 - setting persistent_tcp sticks
ok 9 - setting stayopen returns correctly
ok 10 - setting stayopen sticks
ok 11 - setting srcaddr returns correctly
ok 12 - setting srcaddr sticks
ok 13 - setting domain returns correctly
ok 14 - setting domain sticks
ok 15 - setting debug returns correctly
ok 16 - setting debug sticks
ok 17 - setting defnames returns correctly
ok 18 - setting defnames sticks
ok 19 - setting retrans returns correctly
ok 20 - setting retrans sticks
ok 21 - setting tcp_timeout returns correctly
ok 22 - setting tcp_timeout sticks
ok 23 - setting port returns correctly
ok 24 - setting port sticks
ok 25 - setting usevc returns correctly
ok 26 - setting usevc sticks
ok 27 - setting force_v4 returns correctly
ok 28 - setting force_v4 sticks
ok 29 - setting retry returns correctly
ok 30 - setting retry sticks
ok 31 - setting igntc returns correctly
ok 32 - setting igntc sticks
ok 33 - setting recurse returns correctly
ok 34 - setting recurse sticks
ok 35 - setting dnsrch returns correctly
ok 36 - setting dnsrch sticks
ok 37 - setting dnssec returns correctly
ok 38 - setting dnssec sticks
ok 39 - setting udp_timeout returns correctly
ok 40 - setting udp_timeout sticks
ok 41 - setting srcport returns correctly
ok 42 - setting srcport sticks
ok 43 - Nameservers() looks up IP.
ok 44 - Nameservers() looks up cname.
ok
t/02-header................1..18
ok 1 - use Net::DNS;
ok 2 - new() returned something
ok 3 - id() works
ok 4 - qr() works
ok 5 - opcode() works
ok 6 - aa() works
ok 7 - tc() works
ok 8 - rd() works
ok 9 - cd() works
ok 10 - ra() works
ok 11 - rcode() works
ok 12 - Headers are the same
ok 13 - string() has opcode correct
ok 14 - string() has ancount correct
ok 15 - zocount works
ok 16 - prcount works
ok 17 - upcount works
ok 18 - adcount works
ok
t/03-question..............1..11
ok 1 - use Net::DNS;
ok 2 - new() returned something.
ok 3 - qname()
ok 4 - qtype()
ok 5 - qclass()
ok 6 - zname()
ok 7 - ztype()
ok 8 - zclass()
ok 9 - qname()
ok 10 - qtype()
ok 11 - qclass()
ok
t/04-packet-unique-push....1..75
ok 1 - use Net::DNS;
ok 2 - additional right
ok 3 - answer right
ok 4 - authority right
ok 5 - additional right
ok 6 - answer right
ok 7 - authority right
ok 8 - additional right
ok 9 - answer right
ok 10 - authority right
ok 11 - additional right
ok 12 - answer right
ok 13 - authority right
ok 14 - additional right
ok 15 - answer right
ok 16 - authority right
ok 17 - additional right
ok 18 - answer right
ok 19 - authority right
ok 20 - additional right
ok 21 - answer right
ok 22 - authority right
ok 23 - additional right
ok 24 - answer right
ok 25 - authority right
ok 26 - additional right
ok 27 - answer right
ok 28 - authority right
ok 29 - additional right
ok 30 - answer right
ok 31 - authority right
ok 32 - additional right
ok 33 - answer right
ok 34 - authority right
ok 35 - additional right
ok 36 - answer right
ok 37 - authority right
ok 38 - additional right
ok 39 - answer right
ok 40 - authority right
ok 41 - additional right
ok 42 - answer right
ok 43 - authority right
ok 44 - additional right
ok 45 - answer right
ok 46 - authority right
ok 47 - additional right
ok 48 - answer right
ok 49 - authority right
ok 50 - additional right
ok 51 - answer right
ok 52 - authority right
ok 53 - additional right
ok 54 - answer right
ok 55 - authority right
ok 56 - additional right
ok 57 - answer right
ok 58 - authority right
ok 59 - additional right
ok 60 - answer right
ok 61 - authority right
ok 62 - additional right
ok 63 - answer right
ok 64 - authority right
ok 65 - additional right
ok 66 - answer right
ok 67 - authority right
ok 68 - additional right
ok 69 - answer right
ok 70 - authority right
ok 71 - additional right
ok 72 - answer right
ok 73 - authority right
ok 74
ok 75
ok
t/04-packet................1..39
ok 1 - use Net::DNS;
ok 2 - new() returned something
ok 3 - header() method works
ok 4 - header() returns right thing
ok 5 - question() returned right number of items
ok 6 - question() returned the right thing
ok 7 - answer() works when empty
ok 8 - authority() works when empty
ok 9 - additional() works when empty
ok 10 - First push into answer section worked
ok 11 - Second push into answer section worked
ok 12 - First push into authority section worked
ok 13 - Second push into authority section worked
ok 14 - First push into additional section worked
ok 15 - Second push into additional section worked
ok 16 - new() from data buffer works
ok 17 - string () works correctly
ok 18 - Found 10.0.0.1 in packet
ok 19 - Found 10.0.0.2 in packet
ok 20 - Found 10.0.0.3 in packet
ok 21 - Found 10.0.0.4 in packet
ok 22 - Found 10.0.0.5 in packet
ok 23 - Found 10.0.0.6 in packet
ok 24 - header question count correct
ok 25 - header answer count correct
ok 26 - header authority count correct
ok 27 - header additional count correct
ok 28 - new(\$data) returned something
ok 29 - header question count in syntetic packet correct
ok 30 - header answer count in syntetic packet correct
ok 31 - header authority count in syntetic packet  correct
ok 32 - header additional in sytnetic  packet correct
ok 33 - Additional section packet is EDNS0 type
ok 34 - EDNS0 packet size correct
ok 35 - Proper type of object created
ok 36 - question() returned right number of items poptest:2
ok 37 - question() returned right number of items poptest:1
ok 38 - question() returned right number of items poptest0
ok 39 - Packet to data and back (failure indicates broken dn_comp)
ok
t/05-rr-sshfp..............1..0 # Skip Digest::BubbleBabble not installed.
skipped
        all skipped: Digest::BubbleBabble not installed.
t/05-rr-txt................1..28
ok 1 - use Net::DNS;
ok 2 - Double-quoted null string -- Stimulus
ok 3 - Double-quoted null string -- Response ( rdatastr )
ok 4 - Double-quoted null string -- char_str_list equality
ok 5 - Single-quoted null string -- Stimulus
ok 6 - Single-quoted null string -- Response ( rdatastr )
ok 7 - Single-quoted null string -- char_str_list equality
ok 8 - Double-quoted whitespace string -- Stimulus
ok 9 - Double-quoted whitespace string -- Response ( rdatastr )
ok 10 - Double-quoted whitespace string -- char_str_list equality
ok 11 - unquoted single string -- Stimulus
ok 12 - unquoted single string -- Response ( rdatastr )
ok 13 - unquoted single string -- char_str_list equality
ok 14 - Double-quoted single string -- Stimulus
ok 15 - Double-quoted single string -- Response ( rdatastr )
ok 16 - Double-quoted single string -- char_str_list equality
ok 17 - Quoted, escaped double-quote -- Stimulus
ok 18 - Quoted, escaped double-quote -- Response ( rdatastr )
ok 19 - Quoted, escaped double-quote -- char_str_list equality
ok 20 - Two unquoted strings -- Stimulus
ok 21 - Two unquoted strings -- Response ( rdatastr )
ok 22 - Two unquoted strings -- char_str_list equality
ok 23 - Unbalanced quotes work -- Stimulus
ok 24 - Unbalanced quotes work -- Response ( rdatastr )
ok 25 - Unbalanced quotes work -- char_str_list equality
ok 26 - RR->new_from_hash with txtdata -- Stimulus
ok 27 - RR->new_from_hash with txtdata -- Response (rdatastr())
ok 28 - TXT->rr_rdata
ok
t/05-rr-unknown............1..18
ok 1 - use Net::DNS;
ok 2 - typesbyname(TYPE10226) returns 10226
ok 3 - typesbyval(10226) returns TYPE10226
ok 4 -        typesbyval(1) returns A
ok 5 - typesbyval(typebyname(TYPE001)) returns A
ok 6 - Fails on large TYPE code
ok 7 - classesbyname(CLASS124) returns 124
ok 8 - classesbyval(125) returns CLASS125
ok 9 - classesbyval(1) returns IN
ok 10 - classesbyval(typebyname(CLASS04)) returns HS
ok 11 - Fails on large CLASS code
ok 12 - TYPE01 parsed OK
ok 13 - CLASS01 parsed OK
ok 14 - Unknown RR representation for A parsed OK
ok 15 - Fails on inconsistent length and hex presentation
ok 16 - Fully unknown RR parsed correctly
ok 17 - Fully unknown RR in unknown CLASS parsed correctly
ok 18 - Packet read from a packet dumped by bind...
ok
t/05-rr....................1..219
ok 1 - use Net::DNS;
ok 2 - Packet created
ok 3 - Packet has data after pushes
ok 4 - Packet reconstructed from data
ok 5 - Packet returned correct answer section
ok 6 - A - RR defined
ok 7 - A - name() correct
ok 8 - A - class() correct
ok 9 - A - ttl() correct
ok 10 - A - address() correct
ok 11 - A - type() correct
ok 12 - A - Parsing from string works
ok 13 - AAAA - RR defined
ok 14 - AAAA - name() correct
ok 15 - AAAA - class() correct
ok 16 - AAAA - ttl() correct
ok 17 - AAAA - address() correct
ok 18 - AAAA - type() correct
ok 19 - AAAA - Parsing from string works
ok 20 - AFSDB - RR defined
ok 21 - AFSDB - name() correct
ok 22 - AFSDB - class() correct
ok 23 - AFSDB - ttl() correct
ok 24 - AFSDB - subtype() correct
ok 25 - AFSDB - hostname() correct
ok 26 - AFSDB - type() correct
ok 27 - AFSDB - Parsing from string works
ok 28 - CNAME - RR defined
ok 29 - CNAME - name() correct
ok 30 - CNAME - class() correct
ok 31 - CNAME - ttl() correct
ok 32 - CNAME - type() correct
ok 33 - CNAME - cname() correct
ok 34 - CNAME - Parsing from string works
ok 35 - DNAME - RR defined
ok 36 - DNAME - name() correct
ok 37 - DNAME - class() correct
ok 38 - DNAME - ttl() correct
ok 39 - DNAME - dname() correct
ok 40 - DNAME - type() correct
ok 41 - DNAME - Parsing from string works
ok 42 - HINFO - RR defined
ok 43 - HINFO - name() correct
ok 44 - HINFO - class() correct
ok 45 - HINFO - ttl() correct
ok 46 - HINFO - cpu() correct
ok 47 - HINFO - type() correct
ok 48 - HINFO - os() correct
ok 49 - HINFO - Parsing from string works
ok 50 - ISDN - RR defined
ok 51 - ISDN - name() correct
ok 52 - ISDN - class() correct
ok 53 - ISDN - ttl() correct
ok 54 - ISDN - sa() correct
ok 55 - ISDN - address() correct
ok 56 - ISDN - type() correct
ok 57 - ISDN - Parsing from string works
ok 58 - MB - RR defined
ok 59 - MB - name() correct
ok 60 - MB - class() correct
ok 61 - MB - ttl() correct
ok 62 - MB - madname() correct
ok 63 - MB - type() correct
ok 64 - MB - Parsing from string works
ok 65 - MG - RR defined
ok 66 - MG - name() correct
ok 67 - MG - class() correct
ok 68 - MG - ttl() correct
ok 69 - MG - mgmname() correct
ok 70 - MG - type() correct
ok 71 - MG - Parsing from string works
ok 72 - MINFO - RR defined
ok 73 - MINFO - name() correct
ok 74 - MINFO - class() correct
ok 75 - MINFO - ttl() correct
ok 76 - MINFO - rmailbx() correct
ok 77 - MINFO - type() correct
ok 78 - MINFO - emailbx() correct
ok 79 - MINFO - Parsing from string works
ok 80 - MR - RR defined
ok 81 - MR - name() correct
ok 82 - MR - class() correct
ok 83 - MR - ttl() correct
ok 84 - MR - newname() correct
ok 85 - MR - type() correct
ok 86 - MR - Parsing from string works
ok 87 - MX - RR defined
ok 88 - MX - name() correct
ok 89 - MX - class() correct
ok 90 - MX - ttl() correct
ok 91 - MX - preference() correct
ok 92 - MX - type() correct
ok 93 - MX - exchange() correct
ok 94 - MX - Parsing from string works
ok 95 - NAPTR - RR defined
ok 96 - NAPTR - name() correct
ok 97 - NAPTR - class() correct
ok 98 - NAPTR - ttl() correct
ok 99 - NAPTR - preference() correct
ok 100 - NAPTR - flags() correct
ok 101 - NAPTR - regexp() correct
ok 102 - NAPTR - order() correct
ok 103 - NAPTR - type() correct
ok 104 - NAPTR - service() correct
ok 105 - NAPTR - replacement() correct
ok 106 - NAPTR - Parsing from string works
ok 107 - NS - RR defined
ok 108 - NS - name() correct
ok 109 - NS - class() correct
ok 110 - NS - ttl() correct
ok 111 - NS - nsdname() correct
ok 112 - NS - type() correct
ok 113 - NS - Parsing from string works
ok 114 - NSAP - RR defined
ok 115 - NSAP - name() correct
ok 116 - NSAP - class() correct
ok 117 - NSAP - ttl() correct
ok 118 - NSAP - dfi() correct
ok 119 - NSAP - area() correct
ok 120 - NSAP - idi() correct
ok 121 - NSAP - sel() correct
ok 122 - NSAP - afi() correct
ok 123 - NSAP - type() correct
ok 124 - NSAP - id() correct
ok 125 - NSAP - aa() correct
ok 126 - NSAP - rd() correct
ok 127 - NSAP - Parsing from string works
ok 128 - PTR - RR defined
ok 129 - PTR - name() correct
ok 130 - PTR - class() correct
ok 131 - PTR - ttl() correct
ok 132 - PTR - ptrdname() correct
ok 133 - PTR - type() correct
ok 134 - PTR - Parsing from string works
ok 135 - PX - RR defined
ok 136 - PX - name() correct
ok 137 - PX - class() correct
ok 138 - PX - ttl() correct
ok 139 - PX - preference() correct
ok 140 - PX - map822() correct
ok 141 - PX - mapx400() correct
ok 142 - PX - type() correct
ok 143 - PX - Parsing from string works
ok 144 - RP - RR defined
ok 145 - RP - name() correct
ok 146 - RP - class() correct
ok 147 - RP - ttl() correct
ok 148 - RP - txtdname() correct
ok 149 - RP - type() correct
ok 150 - RP - mbox() correct
ok 151 - RP - Parsing from string works
ok 152 - RT - RR defined
ok 153 - RT - name() correct
ok 154 - RT - class() correct
ok 155 - RT - ttl() correct
ok 156 - RT - preference() correct
ok 157 - RT - type() correct
ok 158 - RT - intermediate() correct
ok 159 - RT - Parsing from string works
ok 160 - SOA - RR defined
ok 161 - SOA - name() correct
ok 162 - SOA - class() correct
ok 163 - SOA - ttl() correct
ok 164 - SOA - minimum() correct
ok 165 - SOA - serial() correct
ok 166 - SOA - mname() correct
ok 167 - SOA - retry() correct
ok 168 - SOA - refresh() correct
ok 169 - SOA - type() correct
ok 170 - SOA - rname() correct
ok 171 - SOA - expire() correct
ok 172 - SOA - Parsing from string works
ok 173 - SRV - RR defined
ok 174 - SRV - name() correct
ok 175 - SRV - class() correct
ok 176 - SRV - ttl() correct
ok 177 - SRV - priority() correct
ok 178 - SRV - target() correct
ok 179 - SRV - weight() correct
ok 180 - SRV - type() correct
ok 181 - SRV - port() correct
ok 182 - SRV - Parsing from string works
ok 183 - TXT - RR defined
ok 184 - TXT - name() correct
ok 185 - TXT - class() correct
ok 186 - TXT - ttl() correct
ok 187 - TXT - txtdata() correct
ok 188 - TXT - type() correct
ok 189 - TXT - Parsing from string works
ok 190 - X25 - RR defined
ok 191 - X25 - name() correct
ok 192 - X25 - class() correct
ok 193 - X25 - ttl() correct
ok 194 - X25 - psdn() correct
ok 195 - X25 - type() correct
ok 196 - X25 - Parsing from string works
ok 197 - LOC - RR defined
ok 198 - LOC - name() correct
ok 199 - LOC - class() correct
ok 200 - LOC - ttl() correct
ok 201 - LOC - longitude() correct
ok 202 - LOC - version() correct
ok 203 - LOC - size() correct
ok 204 - LOC - horiz_pre() correct
ok 205 - LOC - latitude() correct
ok 206 - LOC - vert_pre() correct
ok 207 - LOC - type() correct
ok 208 - LOC - altitude() correct
ok 209 - LOC - Parsing from string works
ok 210 - CERT - RR defined
ok 211 - CERT - name() correct
ok 212 - CERT - class() correct
ok 213 - CERT - ttl() correct
ok 214 - CERT - algorithm() correct
ok 215 - CERT - format() correct
ok 216 - CERT - certificate() correct
ok 217 - CERT - tag() correct
ok 218 - CERT - type() correct
ok 219 - CERT - Parsing from string works
ok
t/06-update................1..72
ok 1 - use Net::DNS;
ok 2 - new() returned packet
ok 3 - header opcode correct
ok 4 - zname correct
ok 5 - zclass correct
ok 6 - ztype correct
ok 7 - yxrrset() returned RR
ok 8 - yxrrset - right name
ok 9 - yxrrset - right TTL
ok 10 - yxrrset - right class
ok 11 - yxrrset - right type
ok 12 - yxrrset - data empty
ok 13 - yxrrset() returned RR
ok 14 - yxrrset - right name
ok 15 - yxrrset - right TTL
ok 16 - yxrrset - right class
ok 17 - yxrrset - right type
ok 18 - yxrrset - right data
ok 19 - nxrrset() returned RR
ok 20 - nxrrset - right name
ok 21 - nxrrset - right ttl
ok 22 - nxrrset - right class
ok 23 - nxrrset - right type
ok 24 - nxrrset - data empty
ok 25 - yxdomain() returned RR
ok 26 - yxdomain - right name
ok 27 - yxdomain - right ttl
ok 28 - yxdomain - right class
ok 29 - yxdomain - right type
ok 30 - yxdomain - data empty
ok 31 - nxdomain() returned RR
ok 32 - nxdomain - right name
ok 33 - nxdomain - right ttl
ok 34 - nxdomain - right class
ok 35 - nxdomain - right type
ok 36 - nxdomain - data empty
ok 37 - nxdomain() returned RR
ok 38 - nxdomain - right name
ok 39 - nxdomain - right ttl
ok 40 - nxdomain - right class
ok 41 - nxdomain - right type
ok 42 - nxdomain - data empty
ok 43 - rr_add() returned RR
ok 44 - rr_add - right name
ok 45 - rr_add - right ttl
ok 46 - rr_add - right class
ok 47 - rr_add - right type
ok 48 - rr_add - right data
ok 49 - rr_del() returned RR
ok 50 - rr_del - right name
ok 51 - rr_del - right ttl
ok 52 - rr_del - right class
ok 53 - rr_del - right type
ok 54 - rr_del - data empty
ok 55 - rr_del() returned RR
ok 56 - rr_del - right name
ok 57 - rr_del - right ttl
ok 58 - rr_del - right class
ok 59 - rr_del - right type
ok 60 - rr_del - data empty
ok 61 - rr_del() returned RR
ok 62 - rr_del - right name
ok 63 - rr_del - right ttl
ok 64 - rr_del - right class
ok 65 - rr_del - right type
ok 66 - rr_del - right data
ok 67 - packet created
ok 68 - pushed inserted correctly
ok 69 - first class right
ok 70 - second class right
ok 71 - third class right
ok 72 - forth class right
ok
t/07-misc..................1..22
ok 1 - use Net::DNS;
ok 2 - RR got made
ok 3 - Name is correct
ok 4 - TTL is correct
ok 5 - CLASS is correct
ok 6 - TYPE is correct
ok 7 - Address is correct
ok 8 - No errors
ok 9 - SRV got made
ok 10 - RR created
ok 11 - Preference works
ok 12 - No evil warning
ok 13
ok 14
ok 15
ok 16
ok 17
ok 18 - First Char string in TXT RR read from wireformat
ok 19 - Second Char string in TXT RR read from wireformat
ok 20 - First arg string in TXT RR read from zonefileformat
ok 21 - Second Char string in TXT RR read from zonefileformat
ok 22 - Escaped " between the  single quotes
ok
t/08-online................1..77
ok 1 - use Net::DNS;
Name "IO::Socket::INET" used only once: possible typo at t/08-online.t line 153.
ok 2 - Got an answer for a.t.net-dns.org IN A
ok 3 - Only one question
ok 4 - Got single answer
ok 5 - Got question
ok 6 - Question has right name
ok 7 - Question has right type
ok 8 - Question has right class
ok 9
ok 10 - Class correct
ok 11 - name correct (a.t.net-dns.org)
ok 12 - address correct (a.t.net-dns.org)
ok 13 - type correct (a.t.net-dns.org)
ok 14 - Got an answer for mx.t.net-dns.org IN MX
ok 15 - Only one question
ok 16 - Got single answer
ok 17 - Got question
ok 18 - Question has right name
ok 19 - Question has right type
ok 20 - Question has right class
ok 21
ok 22 - Class correct
ok 23 - preference correct (mx.t.net-dns.org)
ok 24 - name correct (mx.t.net-dns.org)
ok 25 - type correct (mx.t.net-dns.org)
ok 26 - exchange correct (mx.t.net-dns.org)
ok 27 - Got an answer for cname.t.net-dns.org IN CNAME
ok 28 - Only one question
ok 29 - Got single answer
ok 30 - Got question
ok 31 - Question has right name
ok 32 - Question has right type
ok 33 - Question has right class
ok 34
ok 35 - Class correct
ok 36 - name correct (cname.t.net-dns.org)
ok 37 - type correct (cname.t.net-dns.org)
ok 38 - cname correct (cname.t.net-dns.org)
ok 39 - Got an answer for txt.t.net-dns.org IN TXT
ok 40 - Only one question
ok 41 - Got single answer
ok 42 - Got question
ok 43 - Question has right name
ok 44 - Question has right type
ok 45 - Question has right class
ok 46
ok 47 - Class correct
ok 48 - txtdata correct (txt.t.net-dns.org)
ok 49 - name correct (txt.t.net-dns.org)
ok 50 - type correct (txt.t.net-dns.org)
ok 51 - mx() seems to be working
ok 52 - mx() works in scalar context
ok 53 - The object isa Net::DNS::Packet
ok 54 - search(198.41.0.4) works
ok 55 - The object isa Net::DNS::Packet
ok 56 - query(198.41.0.4) works
ok 57 - The object isa Net::DNS::Packet
ok 58 - search(2001:500:1::803f:235) works
ok 59 - The object isa Net::DNS::Packet
ok 60 - query(2001:500:1::803f:235) works
ok 61 - The object isa Net::DNS::Packet
ok 62 - Correct answer count
ok 63 - The object isa Net::DNS::RR::A
ok 64 - Correct name
ok 65 - The object isa Net::DNS::Packet
ok 66 - Correct answer count
ok 67 - The object isa Net::DNS::RR::A
ok 68 - Correct name
Use of uninitialized value in concatenation (.) or string at t/08-online.t line 153.
ok 69 - The object isa Net::DNS::Packet
ok 70 - Correct answer count
ok 71 - The object isa Net::DNS::RR::A
ok 72 - Correct name
ok 73 - Socket returned
ok 74 - Socket is ready
ok 75 - Correct answer count
ok 76 - The object isa Net::DNS::RR::A
ok 77 - Correct name
ok
t/09-tkey..................1..7
ok 1 - use Net::DNS;
ok 2 - new() returned packet
ok 3 - header opcode correct
ok 4 - zname correct
ok 5 - zclass correct
ok 6 - ztype correct
ok 7 - MAC correct
ok
t/10-recurse...............1..0 # Skip Cannot run these tests from this IP:192.168.93.30
skipped
        all skipped: Cannot run these tests from this IP:192.168.93.30
t/11-escapedchars..........1..141
ok 1 - consistent labelcount (3)
ok 2 - labellength for label 0 equals 4
ok 3 - labellength for label 1 equals 3
ok 4 - labellength for label 2 equals 3
ok 5 - Wireinhex for bla\255.foo.org
ok 6 - DN_EXPAND (xs) consistent
ok 7 - DN_EXPAND (pp) consistent
ok 8 - consistent labelcount (3)
ok 9 - labellength for label 0 equals 3
ok 10 - labellength for label 1 equals 4
ok 11 - labellength for label 2 equals 3
ok 12 - Wireinhex for bla.f\xa9oo.org
ok 13 - DN_EXPAND (xs) consistent
ok 14 - DN_EXPAND (pp) consistent
ok 15 - consistent labelcount (3)
ok 16 - labellength for label 0 equals 3
ok 17 - labellength for label 1 equals 4
ok 18 - labellength for label 2 equals 3
ok 19 - Wireinhex for bla.fo\.o.org
ok 20 - DN_EXPAND (xs) consistent
ok 21 - DN_EXPAND (pp) consistent
ok 22 - consistent labelcount (3)
ok 23 - labellength for label 0 equals 5
ok 24 - labellength for label 1 equals 3
ok 25 - labellength for label 2 equals 3
ok 26 - Wireinhex for bla\0000.foo.org
ok 27 - DN_EXPAND (xs) consistent
ok 28 - DN_EXPAND (pp) consistent
ok 29 - consistent labelcount (3)
ok 30 - labellength for label 0 equals 3
ok 31 - labellength for label 1 equals 3
ok 32 - labellength for label 2 equals 3
ok 33 - Wireinhex for bla.fo\o.org
ok 34 - DN_EXPAND (xs) consistent
ok 35 - DN_EXPAND (pp) consistent
ok 36 - consistent labelcount (3)
ok 37 - labellength for label 0 equals 5
ok 38 - labellength for label 1 equals 3
ok 39 - labellength for label 2 equals 3
ok 40 - Wireinhex for bla(*.foo.org
not ok 41 - DN_EXPAND (xs) consistent
#     Failed test (t/11-escapedchars.t at line 203)
#          got: 'bla(*.foo.org'
#     expected: 'bla\(*.foo.org'
ok 42 - DN_EXPAND (pp) consistent
ok 43 - consistent labelcount (4)
ok 44 - labellength for label 0 equals 1
ok 45 - labellength for label 1 equals 3
ok 46 - labellength for label 2 equals 3
ok 47 - labellength for label 3 equals 3
ok 48 - Wireinhex for  .bla.foo.org
ok 49 - DN_EXPAND (xs) consistent
ok 50 - DN_EXPAND (pp) consistent
ok 51 - consistent labelcount (2)
ok 52 - labellength for label 0 equals 2
ok 53 - labellength for label 1 equals 3
ok 54 - Wireinhex for \\a.foo
ok 55 - DN_EXPAND (xs) consistent
ok 56 - DN_EXPAND (pp) consistent
ok 57 - consistent labelcount (2)
ok 58 - labellength for label 0 equals 1
ok 59 - labellength for label 1 equals 3
ok 60 - Wireinhex for \\.foo
ok 61 - DN_EXPAND (xs) consistent
ok 62 - DN_EXPAND (pp) consistent
ok 63 - consistent labelcount (2)
ok 64 - labellength for label 0 equals 2
ok 65 - labellength for label 1 equals 3
ok 66 - Wireinhex for a\..foo
ok 67 - DN_EXPAND (xs) consistent
ok 68 - DN_EXPAND (pp) consistent
ok 69 - consistent labelcount (2)
ok 70 - labellength for label 0 equals 5
ok 71 - labellength for label 1 equals 3
ok 72 - Wireinhex for a\.foo.org
ok 73 - DN_EXPAND (xs) consistent
ok 74 - DN_EXPAND (pp) consistent
ok 75 - consistent labelcount (3)
ok 76 - labellength for label 0 equals 1
ok 77 - labellength for label 1 equals 3
ok 78 - labellength for label 2 equals 3
ok 79 - Wireinhex for \..foo.org
ok 80 - DN_EXPAND (xs) consistent
ok 81 - DN_EXPAND (pp) consistent
ok 82 - consistent labelcount (2)
ok 83 - labellength for label 0 equals 1
ok 84 - labellength for label 1 equals 1
ok 85 - Wireinhex for \046.\046
ok 86 - DN_EXPAND (xs) consistent
ok 87 - DN_EXPAND (pp) consistent
ok 88 - consistent labelcount (5)
ok 89 - labellength for label 0 equals 33
ok 90 - labellength for label 1 equals 16
ok 91 - labellength for label 2 equals 8
ok 92 - labellength for label 3 equals 6
ok 93 - labellength for label 4 equals 7
ok 94 - Wireinhex for \000\001\002\003\004\005\006\007\008\009\010\011\012\013\014\015\016\017\018\019\020\021\022\023\024\025\026\027\028\029\030\031\032.\033\034\035\036\037\038\039\040\041\042\043\044\045\046\047\048.\058\059\060\061\062\063\064\065.\091\092\093\094\095\096.\123\124\125\126\127\128\129
not ok 95 - DN_EXPAND (xs) consistent
#     Failed test (t/11-escapedchars.t at line 203)
#          got: '\000\001\002\003\004\005\006\007\008\009\010\011\012\013\014\015\016\017\018\019\020\021\022\023\024\025\026\027\028\029\030\031\032.!\"#\$%&'()*+,-\./0.:\;<=>?\@A.[\\]^_`.{|}~\127\128\129'
#     expected: '\000\001\002\003\004\005\006\007\008\009\010\011\012\013\014\015\016\017\018\019\020\021\022\023\024\025\026\027\028\029\030\031\032.!\"#\$%&'\(\)*+,-\./0.:\;<=>?\@A.[\\]^_`.{|}~\127\128\129'
ok 96 - DN_EXPAND (pp) consistent
#
# disabling XS based dns_expand for a moment.
ok 97 - Correctly dealt escaped backslash from wireformat \\.eg.secret-wg.org
ok 98 - Correctly dealt with NULL bytes in domain names
ok 99 - Correctly dealt escaped backslash from wireformat \e.eg.secret-wg.org
#
# Continuing to use the XS based dn_expand()
ok 100 - Correctly dealt escaped backslash from wireformat \e.eg.secret-wg.org
ok 101 - Correctly dealt escaped backslash from wireformat \..eg.secret-wg.org
ok 102 - Packet created
ok 103 - Packet has data after pushes
ok 104 - Packet reconstructed from data
ok 105 - Packet returned correct answer section
ok 106 - A - name() correct
ok 107 - A - address() correct
ok 108 - A - type() correct
ok 109 - A - Parsing from string works
ok 110 - AFSDB - subtype() correct
ok 111 - AFSDB - name() correct
ok 112 - AFSDB - hostname() correct
ok 113 - AFSDB - type() correct
ok 114 - AFSDB - Parsing from string works
ok 115 - CNAME - name() correct
ok 116 - CNAME - type() correct
ok 117 - CNAME - cname() correct
ok 118 - CNAME - Parsing from string works
ok 119 - DNAME - dname() correct
ok 120 - DNAME - name() correct
ok 121 - DNAME - type() correct
ok 122 - DNAME - Parsing from string works
ok 123 - MINFO - rmailbx() correct
ok 124 - MINFO - name() correct
ok 125 - MINFO - type() correct
ok 126 - MINFO - emailbx() correct
ok 127 - MINFO - Parsing from string works
ok 128 - NS - nsdname() correct
ok 129 - NS - name() correct
ok 130 - NS - type() correct
ok 131 - NS - Parsing from string works
ok 132 - SOA - minimum() correct
ok 133 - SOA - serial() correct
ok 134 - SOA - mname() correct
ok 135 - SOA - name() correct
ok 136 - SOA - retry() correct
ok 137 - SOA - refresh() correct
ok 138 - SOA - type() correct
ok 139 - SOA - rname() correct
ok 140 - SOA - expire() correct
ok 141 - SOA - Parsing from string works
# Looks like you failed 2 tests of 141.
dubious
        Test returned status 2 (wstat 512, 0x200)
DIED. FAILED tests 41, 95
        Failed 2/141 tests, 98.58% okay
t/11-inet6.................1..6
ok 1 - use Net::DNS;
ok 2 # skip Socket6 and or IO::Socket::INET6 not loaded
# You will need to install these modules for IPv6 transport support
ok 3 # skip Socket6 and or IO::Socket::INET6 not loaded
# You will need to install these modules for IPv6 transport support
ok 4 # skip Socket6 and or IO::Socket::INET6 not loaded
# You will need to install these modules for IPv6 transport support
ok 5 # skip Socket6 and or IO::Socket::INET6 not loaded
# You will need to install these modules for IPv6 transport support
ok 6 # skip Socket6 and or IO::Socket::INET6 not loaded
# You will need to install these modules for IPv6 transport support
ok
        5/6 skipped: Socket6 and or IO::Socket::INET6 not loaded
Failed Test         Stat Wstat Total Fail  Failed  List of Failed
-------------------------------------------------------------------------------
t/11-escapedchars.t    2   512   141    2   1.42%  41 95
3 tests and 12 subtests skipped.
Failed 1/22 test scripts, 95.45% okay. 2/979 subtests failed, 99.80% okay.
make: *** [test_dynamic] Error 255
[root@sidona Net-DNS-0.51_01]#
