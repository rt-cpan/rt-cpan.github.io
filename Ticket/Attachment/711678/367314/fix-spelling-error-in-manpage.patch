--- a/lib/Mail/Box-Cookbook.pod
+++ b/lib/Mail/Box-Cookbook.pod
@@ -80,7 +80,7 @@
 =head2 Filter
 
 The target is to select a few messages from one folder, to move them
-to an other.  The C<examples/takelarge.pl> script demonstrates how
+to another.  The C<examples/takelarge.pl> script demonstrates how
 to achieve this.  B<Be warned:> it will replace your input folder!
 
 As abstract of the crucial part:
--- a/lib/Mail/Box-Overview.pod
+++ b/lib/Mail/Box-Overview.pod
@@ -139,7 +139,7 @@
 
 One special case of the body types is the L<Mail::Message::Body::Multipart|Mail::Message::Body::Multipart>, which
 contains a set of L<Mail::Message::Part|Mail::Message::Part> objects.  These are just like
-normal messages, except that they are contained in an other message.
+normal messages, except that they are contained in another message.
 The L<Mail::Message::Body::Nested|Mail::Message::Body::Nested> body type is comparible, but contains only
 one message: they are used for C<message/rfc822> message encodings.
 
--- a/lib/Mail/Box.pod
+++ b/lib/Mail/Box.pod
@@ -517,14 +517,14 @@
 
 Add a message to the folder.  A message is usually a
 L<Mail::Box::Message|Mail::Box::Message> object or a sub-class thereof.  The message
-shall not be in an other folder, when you use this method.
+shall not be in another folder, when you use this method.
 In case it is, use L<Mail::Box::Manager::moveMessage()|Mail::Box::Manager/"Move messages to folders"> or
 L<Mail::Box::Manager::copyMessage()|Mail::Box::Manager/"Move messages to folders"> via the manager.
 
 Messages with id's which already exist in this folder are not added.
 
 BE WARNED that message labels may get lost when a message is moved from
-one folder type to an other.  An attempt is made to translate labels,
+one folder type to another.  An attempt is made to translate labels,
 but there are many differences in interpretation by applications.
 
  Option--Default
@@ -1113,7 +1113,7 @@
 When all message-ids are known, then looking-up messages is simple:
 they are found in a plain hash using L<messageId()|Mail::Box/"The messages">.  But Mail::Box
 is lazy where it can, so many messages may not have been read from
-file yet, and that's the prefered situation, because that saves
+file yet, and that's the preferred situation, because that saves
 time and memory.
 
 It is not smart to search for the messages from front to back in
--- a/lib/Mail/Box/Dbx.pod
+++ b/lib/Mail/Box/Dbx.pod
@@ -380,7 +380,7 @@
 
 =over 4
 
-It is adviced to set the C<check> flag, because dbx folder often list
+It is advised to set the C<check> flag, because dbx folder often list
 large amounts of folder names which do not really exist.  However, checking
 does consume some time.
 
@@ -770,7 +770,7 @@
 
 The title of this section is to attract your attension, but is does
 not describe anything special related to DBX or MBOX: you can convert
-any kind of mail folder into an other with the following code.
+any kind of mail folder into another with the following code.
 
 example: converting folders
 
--- a/lib/Mail/Box/File.pod
+++ b/lib/Mail/Box/File.pod
@@ -211,7 +211,7 @@
 
 Appending messages to a file based folder which is not opened is a little
 risky.  In practice, this is often done without locking the folder.  So,
-an other application may write to the folder at the same time... :(  Hopefully,
+another application may write to the folder at the same time... :(  Hopefully,
 all goes fast enough that the chance on collition is small.
 
 All OPTIONS of L<Mail::Box::Mbox::new()|Mail::Box::Mbox/"METHODS"> can be supplied.
@@ -562,7 +562,7 @@
 =over 4
 
 Returns a key-value list of options to be used each time a new message
-is read from a file.  The list is preceeded by the TYPE of message which
+is read from a file.  The list is preceded by the TYPE of message which
 has to be created.
 
 This data is used by L<readMessages()|Mail::Box/"Internals"> and L<updateMessages()|Mail::Box::File/"Internals">.  With
--- a/lib/Mail/Box/MH.pod
+++ b/lib/Mail/Box/MH.pod
@@ -857,7 +857,7 @@
 
 It is impossible to append one or more messages to the folder which is
 not opened, because locking it failes.  The folder may be in use by
-an other application, or you may need to specify some lock related
+another application, or you may need to specify some lock related
 options (see L<new()|Mail::Box::MH/"METHODS">).
 
 =back
--- a/lib/Mail/Box/Manager.pod
+++ b/lib/Mail/Box/Manager.pod
@@ -445,7 +445,7 @@
 source folder.
 
 BE WARNED that message labels may get lost when a message is moved from
-one folder type to an other.  An attempt is made to translate labels,
+one folder type to another.  An attempt is made to translate labels,
 but there are many differences in interpretation by applications.
 
  $mgr->moveMessage($received, $inbox->message(1))
--- a/lib/Mail/Message/Field.pod
+++ b/lib/Mail/Message/Field.pod
@@ -102,7 +102,7 @@
 
 =over 4
 
-(string comparison) Compare the unfolded body of a field with an other
+(string comparison) Compare the unfolded body of a field with another
 field or a string, using the buildin C<cmp>.
 
 =back
@@ -211,7 +211,7 @@
 =over 4
 
 Returns whether this field can be disclosed to other people, for instance
-when sending the message to an other party.  Returns a C<true> or C<false>
+when sending the message to another party.  Returns a C<true> or C<false>
 condition.
 See also L<Mail::Message::Head::Complete::printUndisclosed()|Mail::Message::Head::Complete/"Access to the header">.
 
@@ -685,8 +685,8 @@
 I<body>, and I<attributes>.  Especially the term "body" is cause for
 confusion: sometimes the attributes are considered to be part of the body.
 
-The name of the field is followed by a colon ("C<:>", not preceeded by
-blanks, but followed by one blank).  Each attribute is preceeded by
+The name of the field is followed by a colon ("C<:>", not preceded by
+blanks, but followed by one blank).  Each attribute is preceded by
 a separate semi-colon ("C<;>").  Names of fields are case-insensitive and
 cannot contain blanks.
 
--- a/lib/Mail/Message/Part.pod
+++ b/lib/Mail/Message/Part.pod
@@ -25,7 +25,7 @@
 =head1 DESCRIPTION
 
 A C<Mail::Message::Part> object contains a message which is included in
-the body of an other message.  For instance I<attachments> are I<parts>.
+the body of another message.  For instance I<attachments> are I<parts>.
 
 READ L<Mail::Message|Mail::Message> FIRST.  A part is a special message: it has a
 reference to its parent message, and will usually not be sub-classed
--- a/lib/Mail/Reporter.pod
+++ b/lib/Mail/Reporter.pod
@@ -56,7 +56,7 @@
 =over 4
 
 This error container is also the base constructor for all modules, (as long
-as there is no need for an other base object)  The constructor always accepts
+as there is no need for another base object)  The constructor always accepts
 the following OPTIONS related to error reports.
 
  Option--Default
--- a/lib/Mail/Message/Head/Complete.pod
+++ b/lib/Mail/Message/Head/Complete.pod
@@ -187,7 +187,7 @@
 LINE or BODY specifications which are terminated by a new-line are considered
 to be correctly folded.  Lines which are not terminated by a new-line will
 be folded when needed: new-lines will be added where required.  It is strongly
-adviced to let MailBox do the folding for you.
+advised to let MailBox do the folding for you.
 
 The return value of this method is the L<Mail::Message::Field|Mail::Message::Field> object
 which is created (or was specified).
--- a/lib/Mail/Message.pod
+++ b/lib/Mail/Message.pod
@@ -917,18 +917,18 @@
 =over 4
 
 Set the delete flag for this message.  Without argument, the method
-returns the same as L<isDeleted()|Mail::Message/"Flags">, which is prefered.  When a true
+returns the same as L<isDeleted()|Mail::Message/"Flags">, which is preferred.  When a true
 value is given, L<delete()|Mail::Message/"Flags"> is called.
 
 example: 
 
  $message->deleted(1);          # delete
- $message->delete;              # delete (prefered)
+ $message->delete;              # delete (preferred)
 
  $message->deleted(0);          # undelete
 
  if($message->deleted) {...}    # check
- if($message->isDeleted) {...}  # check (prefered)
+ if($message->isDeleted) {...}  # check (preferred)
 
 =back
 
--- a/lib/Mail/Message/Wrapper/SpamAssassin.pod
+++ b/lib/Mail/Message/Wrapper/SpamAssassin.pod
@@ -10,7 +10,7 @@
 =head1 SYNOPSIS
 
  # WARNING: requires OLD SpamAssassion 2.x, not the new 3.x
- # See Mail::Box::Search::SpamAssassin for the prefered interface
+ # See Mail::Box::Search::SpamAssassin for the preferred interface
  # However, it is possible to do:
 
  my $msg    = ...;   # some Mail::Message object
--- a/lib/Mail/Box/IMAP4.pod
+++ b/lib/Mail/Box/IMAP4.pod
@@ -135,7 +135,7 @@
 =over 4
 
 For a read-only folder, C<DELAY> is the default, otherwise C<NO> is
-choosen.  The four configuration parameter have subtile consequences.
+chosen.  The four configuration parameter have subtile consequences.
 To start with a table:
 
         [local cache]  [write]  [default head_type]
--- a/lib/Mail/Box/IMAP4/Message.pod
+++ b/lib/Mail/Box/IMAP4/Message.pod
@@ -932,7 +932,7 @@
 
 Labels (or flags) are known to all folder formats, but differ how they
 are stored.  Some folder types use message header lines to keep the
-labels, other use a seperate file.  The IMAP protocol does not specify
+labels, other use a separate file.  The IMAP protocol does not specify
 how the labels are kept on the server, but does specify how they are named.
 
 The label names as defined by the IMAP protocol are standardized into
--- a/lib/Mail/Box/Locker/NFS.pod
+++ b/lib/Mail/Box/Locker/NFS.pod
@@ -262,7 +262,7 @@
 =over 4
 
 A lock file was found which was older than the expiration period as
-specified with L<new(timeout)|Mail::Box::Locker/"METHODS">.  The lock file was succesfully
+specified with L<new(timeout)|Mail::Box::Locker/"METHODS">.  The lock file was successfully
 removed.
 
 =back
--- a/lib/Mail/Box/Manage/User.pod
+++ b/lib/Mail/Box/Manage/User.pod
@@ -153,7 +153,7 @@
 =over 4
 
 (Set and) get the NAME of the mailbox which is considered the folder
-for incoming mail.  In many protocols, this folder is handled seperately.
+for incoming mail.  In many protocols, this folder is handled separately.
 For instance in IMAP this is the only case-insensitive folder name.
 
 =back
--- a/lib/Mail/Message/Construct/Read.pod
+++ b/lib/Mail/Message/Construct/Read.pod
@@ -33,7 +33,7 @@
 
 Some people use this method in a procmail script: the message arrives
 at stdin, so we only have a filehandle.  In this case, you are stuck
-with this method.  The message is preceeded by a line which can be used
+with this method.  The message is preceded by a line which can be used
 as message separator in mbox folders.  See the example how to handle
 that one.
 
--- a/lib/Mail/Message/Head/ResentGroup.pod
+++ b/lib/Mail/Message/Head/ResentGroup.pod
@@ -444,7 +444,7 @@
 
 =over 4
 
-Create a recieved field for this resent group.  This is automatically
+Create a received field for this resent group.  This is automatically
 called if none was specified during creation of this resent group object.
 
 The content of this field is described in RFC2821 section 4.4.  It could use
--- a/lib/Mail/Message/TransferEnc.pod
+++ b/lib/Mail/Message/TransferEnc.pod
@@ -23,7 +23,7 @@
 =head1 DESCRIPTION
 
 This class is the base for various encoders and decoders, which are
-used during transport of the message.  This packages, and all which are
+used during transport of the message.  These packages, and all which are
 derived, are invoked by the message's L<Mail::Message::decoded()|Mail::Message/"The body"> and
 L<Mail::Message::encode()|Mail::Message/"The body"> methods:
 
